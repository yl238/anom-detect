%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2Line2ColCMYK_CS3.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Susan Halcro
%%CreationDate: 03/12/2009
%%BoundingBox: 0 0 228 166
%%HiResBoundingBox: 0 0 227.5152 165.8726
%%CropBox: 0 0 227.5152 165.8726
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2Col2Line</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2009-12-03T11:35:16Z</xmp:MetadataDate>
         <xmp:ModifyDate>2009-12-03T11:35:16Z</xmp:ModifyDate>
         <xmp:CreateDate>2009-12-03T11:35:16Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FVG8vbOytZLu9njtrWEcpriZ1jjRfFnYgAfPCATyUlj9v5806fzfa+XUt5VS/sG1HT&#xA;9UbgLW6VfTPC3YEl2CScm6UA7g1yw4iI35sOPemFebrr8xrfUvM+nSyTa15dlhilSHTh9W1Wwt7s&#xA;SCKa1aAxm49OWBw8bHkwC9QWGX4xCgeR+xhLi37lLzzqOg6l+SnlvVr2L6zCk2i3EVuRLIGdJolu&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:FA7F1174072068119109F02DC88E459B</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:FA7F1174072068119109F02DC88E459B</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:417c1983-d0a8-3241-a37a-1ee1edabdfaf</stRef:instanceID>
            <stRef:documentID>xmp.did:80110A8B472368119109824FDF4D96F1</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:80110A8B472368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T13:34:02+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068119109F02DC88E459B</stEvt:instanceID>
                  <stEvt:when>2009-12-03T11:35:16Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>120.001116</stDim:w>
            <stDim:h>99.998375</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 199 U</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>62.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 U</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>53.999996</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -165.873 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 165.873 li
227.515 165.873 li
227.515 0 li
cp
clp
[1 0 0 1 0 0 ]ct
9.37549 121.714 mo
9.37549 123.921 9.7915 124.53 11.3594 124.53 cv
11.3594 125.074 li
4.86377 125.074 li
4.86377 124.53 li
6.17578 124.53 6.94385 124.146 6.94385 121.619 cv
6.94385 107.634 li
4.2876 107.634 li
1.82422 107.634 .704102 108.339 .543945 110.259 cv
0 110.259 li
0 106.067 li
.543945 106.067 li
.800293 106.291 1.08789 106.451 1.53613 106.58 cv
1.95215 106.675 2.52783 106.74 3.2959 106.74 cv
12.895 106.74 li
14.4951 106.74 15.231 106.546 15.8071 106.067 cv
16.3828 106.067 li
16.3828 110.259 li
16.0308 110.259 li
15.6792 108.723 15.0708 107.634 12.1592 107.634 cv
9.37549 107.634 li
9.37549 121.714 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .68 0 .54 cmyk
f
23.1992 116.306 mo
23.1992 121.619 li
23.1992 123.826 23.7432 124.53 25.311 124.53 cv
25.311 125.074 li
18.6875 125.074 li
18.6875 124.53 li
20.0952 124.53 20.7676 124.05 20.7676 121.619 cv
20.7676 110.195 li
20.7676 108.019 20.3193 107.283 18.6875 107.283 cv
18.6875 106.74 li
25.311 106.74 li
25.311 107.283 li
23.8711 107.283 23.1992 107.859 23.1992 110.195 cv
23.1992 115.411 li
33.1826 115.411 li
33.1826 110.195 li
33.1826 107.955 32.7026 107.283 31.1348 107.283 cv
31.1348 106.74 li
37.6943 106.74 li
37.6943 107.283 li
36.1265 107.283 35.6143 108.019 35.6143 110.195 cv
35.6143 121.619 li
35.6143 123.794 36.1265 124.53 37.6943 124.53 cv
37.6943 125.074 li
31.1348 125.074 li
31.1348 124.53 li
32.5747 124.53 33.1826 124.05 33.1826 121.619 cv
33.1826 116.306 li
23.1992 116.306 li
cp
f
52.4468 118.13 mo
51.9028 118.13 li
51.519 116.562 51.231 116.371 49.3428 116.371 cv
44.7993 116.371 li
44.7993 122.929 li
44.7993 123.826 45.1191 124.177 46.1431 124.177 cv
49.3428 124.177 li
52.0308 124.177 52.7026 124.05 53.7905 121.65 cv
54.3345 121.65 li
53.5024 125.074 li
40.2876 125.074 li
40.2876 124.53 li
41.7275 124.53 42.3677 124.082 42.3677 121.65 cv
42.3677 110.195 li
42.3677 107.923 41.8555 107.283 40.2876 107.283 cv
40.2876 106.74 li
53.5024 106.74 li
53.5024 109.811 li
53.1509 109.811 li
52.7349 107.794 52.0947 107.634 50.0791 107.634 cv
44.7993 107.634 li
44.7993 115.474 li
49.9189 115.474 li
51.167 115.474 51.647 115.25 51.9028 113.683 cv
52.4468 113.683 li
52.4468 118.13 li
cp
f
78.9736 122.514 mo
77.2139 124.562 75.2939 125.521 72.8623 125.521 cv
68.4146 125.521 66.6226 122.386 66.6226 119.218 cv
66.6226 110.195 li
66.6226 107.763 65.9829 107.283 64.543 107.283 cv
64.543 106.74 li
71.1665 106.74 li
71.1665 107.283 li
69.6626 107.283 69.0547 107.828 69.0547 110.163 cv
69.0547 119.442 li
69.0547 122.257 70.6226 124.274 73.7261 124.274 cv
75.8379 124.274 77.6938 123.218 78.9736 121.234 cv
78.9736 110.195 li
78.9736 108.083 78.4937 107.347 77.022 107.283 cv
77.022 106.74 li
83.4854 106.74 li
83.4854 107.283 li
81.9497 107.283 81.4058 107.987 81.4058 110.195 cv
81.4058 121.619 li
81.4058 124.017 82.0776 124.53 83.4854 124.53 cv
83.4854 125.074 li
78.9736 125.074 li
78.9736 122.514 li
cp
f
102.782 125.074 mo
102.238 125.074 li
89.3105 109.138 li
89.2466 109.138 li
89.2466 122.001 li
89.2466 123.858 89.9824 124.53 91.6465 124.53 cv
91.6465 125.074 li
86.0791 125.074 li
86.0791 124.53 li
87.6147 124.53 88.3506 124.05 88.3506 121.394 cv
88.3506 110.675 li
88.3506 108.626 87.8066 107.475 85.6309 107.283 cv
85.6309 106.74 li
90.3345 106.74 li
101.79 121.01 li
101.854 121.01 li
101.854 110.291 li
101.854 107.891 101.214 107.283 99.6138 107.283 cv
99.6138 106.74 li
105.149 106.74 li
105.149 107.283 li
103.357 107.283 102.782 108.019 102.782 110.163 cv
102.782 125.074 li
cp
f
112.062 121.619 mo
112.062 123.858 112.606 124.53 114.142 124.53 cv
114.142 125.074 li
107.55 125.074 li
107.55 124.53 li
109.054 124.53 109.63 123.954 109.63 121.619 cv
109.63 110.195 li
109.63 107.891 109.118 107.283 107.55 107.283 cv
107.55 106.74 li
114.142 106.74 li
114.142 107.283 li
112.606 107.283 112.062 107.987 112.062 110.195 cv
112.062 121.619 li
cp
f
125.151 125.33 mo
124.638 125.33 li
118.975 110.451 li
118.11 108.21 117.663 107.347 115.934 107.283 cv
115.934 106.74 li
122.589 106.74 li
122.589 107.283 li
121.279 107.283 120.638 107.987 121.181 109.427 cv
125.663 121.266 li
129.917 109.843 li
130.494 108.275 130.206 107.283 128.541 107.283 cv
128.541 106.74 li
133.884 106.74 li
133.884 107.315 li
132.509 107.315 131.485 108.371 130.558 110.867 cv
125.151 125.33 li
cp
f
147.901 118.13 mo
147.358 118.13 li
146.973 116.562 146.685 116.371 144.796 116.371 cv
140.254 116.371 li
140.254 122.929 li
140.254 123.826 140.574 124.177 141.597 124.177 cv
144.796 124.177 li
147.485 124.177 148.158 124.05 149.246 121.65 cv
149.789 121.65 li
148.957 125.074 li
135.743 125.074 li
135.743 124.53 li
137.181 124.53 137.822 124.082 137.822 121.65 cv
137.822 110.195 li
137.822 107.923 137.31 107.283 135.743 107.283 cv
135.743 106.74 li
148.957 106.74 li
148.957 109.811 li
148.605 109.811 li
148.189 107.794 147.548 107.634 145.534 107.634 cv
140.254 107.634 li
140.254 115.474 li
145.373 115.474 li
146.622 115.474 147.101 115.25 147.358 113.683 cv
147.901 113.683 li
147.901 118.13 li
cp
f
156.893 115.826 mo
159.133 115.826 li
162.238 115.826 163.453 113.714 163.453 111.603 cv
163.453 109.171 161.629 107.443 158.814 107.443 cv
156.893 107.443 li
156.893 115.826 li
cp
156.893 121.619 mo
156.893 123.858 157.47 124.53 158.972 124.53 cv
158.972 125.074 li
152.381 125.074 li
152.381 124.53 li
153.789 124.53 154.462 124.082 154.462 121.619 cv
154.462 110.13 li
154.462 107.731 153.853 107.283 152.381 107.283 cv
152.381 106.74 li
159.901 106.74 li
164.03 106.74 166.013 109.107 166.013 111.539 cv
166.013 113.554 164.925 115.25 162.238 116.05 cv
165.661 118.258 166.813 124.306 169.852 124.53 cv
169.852 125.074 li
166.109 125.074 li
162.685 120.914 161.725 116.594 158.365 116.594 cv
156.893 116.594 li
156.893 121.619 li
cp
f
181.373 110.771 mo
180.83 110.771 li
180.541 108.05 178.622 106.996 176.765 106.996 cv
174.846 106.996 173.47 108.05 173.47 109.748 cv
173.47 113.138 178.14 114.035 180.765 116.658 cv
182.044 117.939 182.365 119.09 182.365 120.306 cv
182.365 123.186 180.03 125.521 177.15 125.521 cv
175.197 125.521 173.567 124.562 172.957 124.562 cv
172.638 124.562 172.414 124.786 172.254 125.265 cv
171.709 125.265 li
171.709 120.306 li
172.254 120.306 li
172.285 123.698 175.069 124.818 176.669 124.818 cv
178.876 124.818 180.35 123.538 180.35 121.554 cv
180.35 118.386 175.421 116.915 173.373 114.867 cv
172.254 113.747 171.805 112.466 171.805 111.027 cv
171.805 108.21 173.822 106.291 176.796 106.291 cv
178.75 106.291 179.677 106.996 180.38 106.996 cv
180.668 106.996 180.733 106.931 180.861 106.483 cv
181.373 106.483 li
181.373 110.771 li
cp
f
189.022 121.619 mo
189.022 123.858 189.564 124.53 191.101 124.53 cv
191.101 125.074 li
184.509 125.074 li
184.509 124.53 li
186.013 124.53 186.589 123.954 186.589 121.619 cv
186.589 110.195 li
186.589 107.891 186.077 107.283 184.509 107.283 cv
184.509 106.74 li
191.101 106.74 li
191.101 107.283 li
189.564 107.283 189.022 107.987 189.022 110.195 cv
189.022 121.619 li
cp
f
202.46 121.714 mo
202.46 123.921 202.876 124.53 204.445 124.53 cv
204.445 125.074 li
197.949 125.074 li
197.949 124.53 li
199.261 124.53 200.03 124.146 200.03 121.619 cv
200.03 107.634 li
197.373 107.634 li
194.91 107.634 193.789 108.339 193.629 110.259 cv
193.085 110.259 li
193.085 106.067 li
193.629 106.067 li
193.885 106.291 194.173 106.451 194.622 106.58 cv
195.038 106.675 195.614 106.74 196.38 106.74 cv
205.98 106.74 li
207.581 106.74 208.316 106.546 208.893 106.067 cv
209.468 106.067 li
209.468 110.259 li
209.117 110.259 li
208.764 108.723 208.156 107.634 205.244 107.634 cv
202.46 107.634 li
202.46 121.714 li
cp
f
220.476 121.619 mo
220.476 123.826 220.923 124.53 222.493 124.53 cv
222.493 125.074 li
215.805 125.074 li
215.805 124.53 li
217.213 124.53 218.044 124.242 218.044 121.619 cv
218.044 115.859 li
214.14 109.779 li
212.861 107.763 212.316 107.347 210.876 107.283 cv
210.876 106.74 li
218.044 106.74 li
218.044 107.283 li
216.03 107.283 215.805 107.987 216.541 109.107 cv
220.156 114.674 li
223.068 110.067 li
223.964 108.626 224.029 107.283 222.493 107.283 cv
222.493 106.74 li
227.515 106.74 li
227.515 107.283 li
226.108 107.378 225.628 107.763 224.603 109.363 cv
220.476 115.859 li
220.476 121.619 li
cp
f
23.4395 147.123 mo
21.3916 147.123 19.5674 150.13 19.5674 153.554 cv
19.5674 155.345 20.3994 156.498 21.7114 156.498 cv
23.8232 156.498 25.6152 153.49 25.6152 149.97 cv
25.6152 148.402 24.7192 147.123 23.4395 147.123 cv
cp
21.0073 157.425 mo
19.0557 157.425 17.6797 155.89 17.6797 153.714 cv
17.6797 149.906 20.9434 146.195 24.271 146.195 cv
25.999 146.195 27.5029 147.859 27.5029 149.81 cv
27.5029 152.722 24.9434 157.425 21.0073 157.425 cv
cp
f
35.7266 147.411 mo
33.4868 147.411 li
31.7271 156.753 li
31.0229 160.529 30.479 162.449 28.7192 164.208 cv
27.9512 164.977 26.2876 165.873 24.4634 165.873 cv
22.9595 165.873 21.584 165.553 20.752 165.009 cv
21.2319 162.769 li
21.7759 162.769 li
22.0957 164.433 23.2476 165.233 24.5596 165.233 cv
25.6475 165.233 26.8315 164.753 27.5352 164.049 cv
28.5913 162.994 29.2632 160.849 29.7432 158.226 cv
31.7593 147.411 li
29.519 147.411 li
29.6152 146.546 li
31.855 146.546 li
32.6548 142.675 li
33.103 140.466 33.999 137.299 38.0625 137.236 cv
38.7666 137.236 39.3423 137.363 40.2383 137.652 cv
40.3345 137.267 li
40.9746 137.267 li
40.3662 140.147 li
39.7266 140.147 li
39.6626 139.475 39.4385 137.875 37.7104 137.875 cv
36.0786 137.875 35.1187 139.155 34.5747 141.779 cv
33.583 146.546 li
35.8228 146.546 li
35.7266 147.411 li
cp
f
56.3979 150.13 mo
55.854 150.13 li
55.4702 148.562 55.1821 148.371 53.2939 148.371 cv
48.7505 148.371 li
48.7505 154.929 li
48.7505 155.826 49.0703 156.177 50.0942 156.177 cv
53.2939 156.177 li
55.9819 156.177 56.6538 156.05 57.7417 153.65 cv
58.2856 153.65 li
57.4536 157.074 li
44.2388 157.074 li
44.2388 156.53 li
45.6787 156.53 46.3188 156.082 46.3188 153.65 cv
46.3188 142.195 li
46.3188 139.923 45.8066 139.283 44.2388 139.283 cv
44.2388 138.74 li
57.4536 138.74 li
57.4536 141.811 li
57.1021 141.811 li
56.686 139.794 56.0459 139.634 54.0303 139.634 cv
48.7505 139.634 li
48.7505 147.474 li
53.8701 147.474 li
55.1182 147.474 55.5981 147.25 55.854 145.683 cv
56.3979 145.683 li
56.3979 150.13 li
cp
f
65.2939 152.978 mo
65.2939 155.826 65.9341 156.37 67.6299 156.37 cv
69.5181 156.37 li
74.0615 156.37 76.7813 153.234 76.7813 148.242 cv
76.7813 143.859 74.5732 139.443 68.7817 139.443 cv
65.2939 139.443 li
65.2939 152.978 li
cp
62.8623 142.195 mo
62.8623 139.987 62.3184 139.283 60.7822 139.283 cv
60.7822 138.74 li
69.2617 138.74 li
76.2695 138.74 79.5972 143.443 79.5972 148.21 cv
79.5972 152.818 76.6851 157.074 69.4858 157.074 cv
60.7822 157.074 li
60.7822 156.53 li
62.2544 156.53 62.8623 155.89 62.8623 153.619 cv
62.8623 142.195 li
cp
f
86.8301 153.619 mo
86.8301 155.858 87.374 156.53 88.9102 156.53 cv
88.9102 157.074 li
82.3184 157.074 li
82.3184 156.53 li
83.8223 156.53 84.3984 155.954 84.3984 153.619 cv
84.3984 142.195 li
84.3984 139.891 83.8862 139.283 82.3184 139.283 cv
82.3184 138.74 li
88.9102 138.74 li
88.9102 139.283 li
87.374 139.283 86.8301 139.987 86.8301 142.195 cv
86.8301 153.619 li
cp
f
107.853 157.074 mo
107.309 157.074 li
94.3818 141.138 li
94.3179 141.138 li
94.3179 154.001 li
94.3179 155.858 95.0537 156.53 96.7178 156.53 cv
96.7178 157.074 li
91.1504 157.074 li
91.1504 156.53 li
92.686 156.53 93.4219 156.05 93.4219 153.394 cv
93.4219 142.675 li
93.4219 140.626 92.8779 139.475 90.7021 139.283 cv
90.7021 138.74 li
95.4058 138.74 li
106.861 153.01 li
106.925 153.01 li
106.925 142.291 li
106.925 139.891 106.285 139.283 104.685 139.283 cv
104.685 138.74 li
110.221 138.74 li
110.221 139.283 li
108.429 139.283 107.853 140.019 107.853 142.163 cv
107.853 157.074 li
cp
f
117.388 153.298 mo
117.388 155.761 117.838 156.37 119.277 156.37 cv
120.781 156.37 li
122.636 156.37 124.397 155.123 124.397 152.434 cv
124.397 149.746 122.35 147.922 119.118 147.922 cv
117.388 147.922 li
117.388 153.298 li
cp
119.277 147.218 mo
121.964 147.218 123.597 145.683 123.597 143.378 cv
123.597 141.075 122.189 139.443 119.213 139.443 cv
117.388 139.443 li
117.388 147.218 li
119.277 147.218 li
cp
114.958 142.195 mo
114.958 139.859 114.414 139.283 112.878 139.283 cv
112.878 138.74 li
119.789 138.74 li
124.206 138.74 126.156 140.882 126.156 143.218 cv
126.156 145.234 125.005 146.546 122.476 147.378 cv
122.476 147.443 li
125.292 148.019 127.213 150.13 127.213 152.594 cv
127.213 155.345 124.781 157.074 121.326 157.074 cv
112.878 157.074 li
112.878 156.53 li
114.414 156.53 114.958 155.858 114.958 153.619 cv
114.958 142.195 li
cp
f
144.013 154.514 mo
142.252 156.562 140.333 157.521 137.901 157.521 cv
133.453 157.521 131.663 154.386 131.663 151.218 cv
131.663 142.195 li
131.663 139.763 131.022 139.283 129.582 139.283 cv
129.582 138.74 li
136.206 138.74 li
136.206 139.283 li
134.701 139.283 134.093 139.828 134.093 142.163 cv
134.093 151.442 li
134.093 154.257 135.663 156.274 138.765 156.274 cv
140.876 156.274 142.733 155.218 144.013 153.234 cv
144.013 142.195 li
144.013 140.083 143.534 139.347 142.06 139.283 cv
142.06 138.74 li
148.525 138.74 li
148.525 139.283 li
146.989 139.283 146.446 139.987 146.446 142.195 cv
146.446 153.619 li
146.446 156.017 147.118 156.53 148.525 156.53 cv
148.525 157.074 li
144.013 157.074 li
144.013 154.514 li
cp
f
155.661 147.826 mo
157.901 147.826 li
161.005 147.826 162.221 145.714 162.221 143.603 cv
162.221 141.171 160.397 139.443 157.581 139.443 cv
155.661 139.443 li
155.661 147.826 li
cp
155.661 153.619 mo
155.661 155.858 156.238 156.53 157.74 156.53 cv
157.74 157.074 li
151.15 157.074 li
151.15 156.53 li
152.556 156.53 153.23 156.082 153.23 153.619 cv
153.23 142.13 li
153.23 139.731 152.622 139.283 151.15 139.283 cv
151.15 138.74 li
158.668 138.74 li
162.796 138.74 164.78 141.107 164.78 143.539 cv
164.78 145.554 163.693 147.25 161.005 148.05 cv
164.429 150.258 165.581 156.306 168.621 156.53 cv
168.621 157.074 li
164.876 157.074 li
161.453 152.914 160.493 148.594 157.133 148.594 cv
155.661 148.594 li
155.661 153.619 li
cp
f
186.029 157.074 mo
185.004 157.362 181.74 157.521 180.909 157.521 cv
172.846 157.521 170.158 152.658 170.158 148.435 cv
170.158 141.939 175.084 138.291 179.597 138.291 cv
182.189 138.291 183.18 139.155 184.588 139.155 cv
185.164 139.155 185.419 138.996 185.613 138.546 cv
186.188 138.546 li
186.188 143.955 li
185.676 143.955 li
185.197 140.466 182.092 138.996 179.597 138.996 cv
175.82 138.996 172.972 142.291 172.972 147.314 cv
172.972 152.69 176.172 156.658 180.525 156.658 cv
181.835 156.658 183.596 156.337 183.596 154.707 cv
183.596 152.722 li
183.596 150.482 183.084 149.682 181.581 149.682 cv
180.876 149.682 li
180.876 149.138 li
188.301 149.138 li
188.301 149.682 li
186.507 149.682 186.029 150.546 186.029 152.146 cv
186.029 157.074 li
cp
f
195.244 148.306 mo
195.244 153.619 li
195.244 155.826 195.789 156.53 197.356 156.53 cv
197.356 157.074 li
190.733 157.074 li
190.733 156.53 li
192.14 156.53 192.813 156.05 192.813 153.619 cv
192.813 142.195 li
192.813 140.019 192.365 139.283 190.733 139.283 cv
190.733 138.74 li
197.356 138.74 li
197.356 139.283 li
195.916 139.283 195.244 139.859 195.244 142.195 cv
195.244 147.411 li
205.228 147.411 li
205.228 142.195 li
205.228 139.955 204.748 139.283 203.18 139.283 cv
203.18 138.74 li
209.74 138.74 li
209.74 139.283 li
208.171 139.283 207.66 140.019 207.66 142.195 cv
207.66 153.619 li
207.66 155.794 208.171 156.53 209.74 156.53 cv
209.74 157.074 li
203.18 157.074 li
203.18 156.53 li
204.621 156.53 205.228 156.05 205.228 153.619 cv
205.228 148.306 li
195.244 148.306 li
cp
f
78.1919 34.0337 mo
78.9341 34.1987 79.1685 34.105 79.2876 33.5786 cv
79.4692 33.6191 li
78.981 35.8027 li
78.7993 35.7617 li
78.897 35.3203 78.8257 35.0337 77.9751 34.8442 cv
73.2769 33.792 li
73.0767 34.6855 li
72.8911 35.5132 73.0435 35.9429 73.6763 36.1406 cv
73.6362 36.3232 li
72.228 36.0088 li
72.2681 35.8252 li
72.3628 35.7559 72.438 35.6714 72.5142 35.5308 cv
72.5786 35.3975 72.6431 35.209 72.7017 34.9517 cv
73.4224 31.7246 li
73.5425 31.187 73.5337 30.9258 73.4155 30.6958 cv
73.4585 30.502 li
74.8677 30.8174 li
74.8403 30.9355 li
74.2993 30.938 73.8872 31.0605 73.6685 32.04 cv
73.4585 32.9751 li
78.1919 34.0337 li
cp
f
78.5239 27.0249 mo
80.1675 27.8271 li
80.8511 28.1606 81.1519 28.0981 81.3892 27.6128 cv
81.5571 27.6948 li
80.5552 29.7456 li
80.3872 29.6636 li
80.6001 29.2271 80.5532 28.9473 79.8013 28.5796 cv
76.2642 26.8545 li
75.5923 26.5259 75.2964 26.5532 75.0493 27.0591 cv
74.8813 26.9771 li
75.8813 24.9268 li
76.0493 25.0093 li
75.8325 25.4546 75.9087 25.7485 76.6313 26.1021 cv
78.2466 26.8896 li
79.7534 23.7993 li
78.1392 23.0117 li
77.4468 22.6738 77.1655 22.7207 76.9282 23.2061 cv
76.7603 23.1245 li
77.7505 21.0938 li
77.9194 21.1758 li
77.6821 21.6606 77.8325 21.9302 78.5063 22.2593 cv
82.0435 23.9839 li
82.7153 24.313 83.022 24.2656 83.2583 23.7803 cv
83.4263 23.8623 li
82.436 25.8926 li
82.2661 25.811 li
82.4849 25.3652 82.4282 25.104 81.6753 24.7373 cv
80.0317 23.9346 li
78.5239 27.0249 li
cp
f
85.9888 16.6426 mo
85.8696 16.7871 li
85.3696 16.543 85.2544 16.5767 84.8384 17.0762 cv
83.8374 18.2783 li
85.5728 19.7251 li
85.811 19.9224 85.9741 19.9155 86.1997 19.6445 cv
86.9058 18.7979 li
87.4966 18.0864 87.6118 17.8804 87.2163 17.0635 cv
87.3364 16.9189 li
88.0591 17.8945 li
85.147 21.3911 li
85.0024 21.2715 li
85.3188 20.8906 85.3423 20.6221 84.6978 20.0859 cv
81.6675 17.5605 li
81.0649 17.0605 80.7837 17.0547 80.438 17.4697 cv
80.2935 17.3501 li
83.2075 13.8521 li
84.02 14.5293 li
83.9419 14.6226 li
83.3179 14.2886 83.1333 14.4224 82.6899 14.9561 cv
81.5259 16.353 li
83.6001 18.0815 li
84.729 16.7261 li
85.0044 16.396 85.0513 16.2202 84.6909 15.8066 cv
84.812 15.6626 li
85.9888 16.6426 li
cp
f
97.8188 9.52832 mo
97.6372 10.4399 97.2231 11.0522 96.4927 11.4634 cv
95.1587 12.2158 94.0903 11.5776 93.5552 10.6265 cv
92.0298 7.91895 li
91.6177 7.18945 91.3452 7.15332 90.9146 7.39697 cv
90.8218 7.23389 li
92.8091 6.11377 li
92.9009 6.27734 li
92.4497 6.53223 92.3599 6.79736 92.7544 7.49854 cv
94.3228 10.2827 li
94.7993 11.1279 95.6099 11.4678 96.5415 10.9434 cv
97.1763 10.5864 97.5532 9.95557 97.6021 9.14404 cv
95.7368 5.83154 li
95.3794 5.19727 95.1099 5.05811 94.6587 5.2876 cv
94.5669 5.12451 li
96.5054 4.03125 li
96.5972 4.19482 li
96.1362 4.45459 96.0923 4.75732 96.4663 5.42041 cv
98.397 8.84766 li
98.8032 9.56836 99.0903 9.60791 99.5122 9.37012 cv
99.605 9.5332 li
98.2515 10.2959 li
97.8188 9.52832 li
cp
f
107.831 7.03125 mo
107.649 7.07715 li
101.975 2.86572 li
101.954 2.87109 li
103.053 7.16309 li
103.211 7.78223 103.514 7.94336 104.069 7.80078 cv
104.116 7.98291 li
102.258 8.4585 li
102.211 8.27686 li
102.724 8.14551 102.928 7.92285 102.702 7.03662 cv
101.786 3.45996 li
101.611 2.77686 101.331 2.43896 100.588 2.56055 cv
100.542 2.37939 li
102.112 1.97705 li
107.153 5.76025 li
107.173 5.75439 li
106.258 2.17822 li
106.053 1.37744 105.788 1.229 105.254 1.36621 cv
105.207 1.18457 li
107.054 .711914 li
107.1 .893066 li
106.502 1.04639 106.374 1.34082 106.556 2.05615 cv
107.831 7.03125 li
cp
f
112.979 5.34717 mo
113.018 6.11768 113.215 6.33936 113.745 6.31299 cv
113.753 6.50049 li
111.487 6.61328 li
111.477 6.42627 li
111.994 6.3999 112.182 6.19238 112.143 5.38867 cv
111.948 1.45947 li
111.909 .666992 111.721 .46582 111.182 .492676 cv
111.172 .306641 li
113.44 .192871 li
113.449 .380371 li
112.92 .40625 112.746 .657715 112.784 1.41748 cv
112.979 5.34717 li
cp
f
119.358 6.93066 mo
119.184 6.90723 li
117.926 1.5708 li
117.733 .76709 117.619 .45166 117.031 .351074 cv
117.056 .165527 li
119.328 .466797 li
119.305 .65332 li
118.858 .593262 118.605 .804688 118.726 1.32129 cv
119.718 5.56641 li
121.689 1.85986 li
121.957 1.35107 121.905 .999023 121.335 .92334 cv
121.361 .737305 li
123.185 .97998 li
123.159 1.17676 li
122.689 1.11426 122.291 1.42822 121.861 2.23828 cv
119.358 6.93066 li
cp
f
129.318 7.05225 mo
129.143 6.98828 li
129.203 6.43555 129.133 6.33936 128.523 6.1167 cv
127.052 5.57813 li
126.277 7.7002 li
126.169 7.98975 126.233 8.1416 126.564 8.2627 cv
127.6 8.6416 li
128.468 8.95947 128.701 8.99756 129.338 8.3501 cv
129.511 8.41455 li
128.839 9.42334 li
124.564 7.85986 li
124.629 7.68359 li
125.093 7.854 125.353 7.78516 125.64 6.99854 cv
126.998 3.29297 li
127.265 2.55859 127.176 2.29102 126.667 2.10498 cv
126.734 1.9292 li
131.008 3.49268 li
130.644 4.48633 li
130.531 4.44482 li
130.634 3.74365 130.447 3.61572 129.794 3.37793 cv
128.085 2.75293 li
127.159 5.28857 li
128.817 5.89404 li
129.218 6.04199 129.401 6.02637 129.667 5.5498 cv
129.843 5.61377 li
129.318 7.05225 li
cp
f
134.758 9.25928 mo
135.18 9.53857 li
136.148 10.1743 135.605 11.5991 135.801 13.4443 cv
136.879 14.1538 li
136.98 13.9976 li
136.151 13.3569 136.963 11.3989 136.398 10.1157 cv
137.324 10.395 137.956 10.1133 138.338 9.5332 cv
138.796 8.83398 138.676 7.77637 137.49 6.99512 cv
135.328 5.56982 li
135.226 5.72656 li
135.648 6.00537 135.739 6.24951 135.284 6.93994 cv
133.108 10.2432 li
132.64 10.9517 132.361 10.9536 131.957 10.687 cv
131.853 10.8428 li
133.75 12.0918 li
133.853 11.9355 li
133.419 11.6504 133.383 11.3486 133.806 10.7041 cv
134.758 9.25928 li
cp
136.493 6.62744 mo
137.042 6.99072 li
137.853 7.52441 138.048 8.36719 137.589 9.06689 cv
137.189 9.67383 136.442 10.0508 135.548 9.46289 cv
134.902 9.03809 li
136.493 6.62744 li
cp
f
144.817 14.9829 mo
144.684 14.8491 li
145.281 14.1216 145.078 13.395 144.629 12.9395 cv
144.166 12.4688 143.572 12.3857 143.156 12.7959 cv
142.324 13.6147 143.234 14.9785 143.225 16.2563 cv
143.218 16.8794 143.013 17.2363 142.714 17.5303 cv
142.008 18.2261 140.869 18.2178 140.173 17.5103 cv
139.703 17.0317 139.544 16.3994 139.398 16.25 cv
139.321 16.1714 139.21 16.1699 139.055 16.2476 cv
138.921 16.1138 li
140.14 14.9155 li
140.272 15.0488 li
139.447 15.8765 139.846 16.8301 140.23 17.2227 cv
140.765 17.7646 141.434 17.8164 141.921 17.3374 cv
142.699 16.5718 141.869 15.0068 141.876 14.0093 cv
141.88 13.4639 142.085 13.0439 142.439 12.6963 cv
143.133 12.0161 144.089 12.0474 144.809 12.7769 cv
145.281 13.2563 145.332 13.6543 145.501 13.8267 cv
145.572 13.8975 145.603 13.8979 145.744 13.8208 cv
145.868 13.9468 li
144.817 14.9829 li
cp
f
145.351 21.7383 mo
144.717 22.1772 144.634 22.4629 144.934 22.8984 cv
144.781 23.0044 li
143.486 21.1392 li
143.643 21.0327 li
143.935 21.4575 144.213 21.5078 144.873 21.0498 cv
148.108 18.8086 li
148.759 18.3564 148.832 18.0923 148.523 17.6484 cv
148.677 17.542 li
149.971 19.4082 li
149.818 19.5146 li
149.515 19.0801 149.209 19.064 148.584 19.4971 cv
145.351 21.7383 li
cp
f
148.494 27.4673 mo
147.802 27.7842 147.671 28.0015 147.898 28.4922 cv
147.728 28.5708 li
146.796 26.5381 li
146.967 26.4595 li
147.155 26.8706 147.384 27.0552 148.176 26.6924 cv
152.555 24.6865 li
152.173 23.8545 li
151.821 23.083 151.438 22.8335 150.814 23.0586 cv
150.736 22.8892 li
152.048 22.2871 li
152.126 22.457 li
152.092 22.5698 152.084 22.6826 152.109 22.8413 cv
152.138 22.9854 152.201 23.1748 152.313 23.4155 cv
153.689 26.4209 li
153.917 26.9219 154.084 27.1245 154.317 27.2358 cv
154.401 27.416 li
153.088 28.0176 li
153.038 27.9072 li
153.467 27.5767 153.721 27.2305 153.302 26.3184 cv
152.902 25.4478 li
148.494 27.4673 li
cp
f
150.984 35.1445 mo
150.24 35.3037 150.035 35.5054 150.148 36.0327 cv
149.964 36.0728 li
149.484 33.8203 li
149.666 33.7803 li
149.768 34.2549 149.926 34.5142 150.809 34.3252 cv
152.748 33.9097 li
154.515 32.1563 li
155.101 31.5801 155.203 31.3667 155.122 30.8779 cv
155.302 30.8389 li
155.821 33.2524 li
155.636 33.2915 li
155.49 32.6123 155.239 32.5879 154.914 32.9165 cv
153.298 34.5361 li
155.06 35.1846 li
155.609 35.3823 156.068 35.3062 155.957 34.7891 cv
156.14 34.7505 li
156.501 36.4419 li
156.321 36.4814 li
156.185 36.0142 156.022 35.8799 155.409 35.6499 cv
152.923 34.7285 li
150.984 35.1445 li
cp
f
75.8286 50.2256 mo
74.0269 50.7437 73.0269 52.5679 73.5483 54.3799 cv
74.0688 56.1895 75.8892 57.2158 77.6899 56.6963 cv
79.4575 56.1875 80.437 54.3701 79.9204 52.5698 cv
79.3853 50.7168 77.6284 49.707 75.8286 50.2256 cv
cp
76.0854 51.1606 mo
77.8433 50.6563 79.2808 51.2275 79.6929 52.6577 cv
80.0513 53.9063 79.2759 55.2314 77.3677 55.7803 cv
75.897 56.2041 74.2173 55.8271 73.7778 54.3018 cv
73.3853 52.936 74.3169 51.6694 76.0854 51.1606 cv
cp
f
78.3433 62.4854 mo
77.6743 62.8662 77.5659 63.1445 77.8286 63.6035 cv
77.6655 63.6982 li
76.5396 61.7256 li
76.7026 61.6318 li
76.9653 62.0908 77.2485 62.1465 77.9282 61.7568 cv
81.3452 59.8076 li
82.0356 59.415 82.1235 59.1484 81.8618 58.6885 cv
82.0239 58.5947 li
84.1704 62.3574 li
83.1938 62.9131 li
83.1235 62.79 li
83.7173 62.2734 83.6626 62.0889 83.3237 61.4951 cv
82.5259 60.0977 li
80.229 61.4092 li
81.0425 62.835 li
81.2778 63.2451 81.5767 63.2793 82.0435 63.0752 cv
82.1313 63.2285 li
80.5903 64.1084 li
80.5024 63.9561 li
80.8843 63.7119 81.0044 63.3906 80.7856 63.0068 cv
79.9614 61.5615 li
78.3433 62.4854 li
cp
f
90.4536 74.6592 mo
90.3081 74.542 li
90.5493 74.0391 90.5142 73.9258 90.0103 73.5146 cv
88.8013 72.5205 li
87.3687 74.2686 li
87.1724 74.5068 87.1812 74.6709 87.4546 74.8945 cv
88.3052 75.5928 li
89.022 76.1797 89.229 76.2939 90.0425 75.8906 cv
90.188 76.0098 li
89.2183 76.7393 li
85.6997 73.8535 li
85.8169 73.708 li
86.2017 74.0244 86.4692 74.0439 87.0005 73.3955 cv
89.5024 70.3447 li
89.9985 69.7412 90.0024 69.458 89.5845 69.1162 cv
89.7026 68.9717 li
93.2231 71.8574 li
92.5513 72.6758 li
92.4575 72.5986 li
92.7876 71.9707 92.6509 71.7891 92.1157 71.3486 cv
90.7095 70.1943 li
88.9976 72.2822 li
90.3599 73.4014 li
90.6929 73.6738 90.8687 73.7178 91.2798 73.3564 cv
91.4243 73.4756 li
90.4536 74.6592 li
cp
f
94.8442 78.9463 mo
94.5171 79.6592 94.2349 79.7705 93.7739 79.5596 cv
93.6958 79.7295 li
96.4185 80.9834 li
98.6704 82.0205 100.195 81.1084 100.858 79.6689 cv
101.545 78.1777 101.183 76.2266 98.9917 75.2158 cv
96.3384 73.9941 li
96.2603 74.165 li
96.7407 74.3857 96.8091 74.6855 96.4907 75.374 cv
94.8442 78.9463 li
cp
97.6489 74.8652 mo
98.7388 75.3682 li
100.551 76.2021 100.605 77.9014 99.9731 79.2744 cv
99.2544 80.835 97.9507 81.4219 96.5298 80.7686 cv
95.939 80.4971 li
95.4087 80.252 95.2876 79.9893 95.6968 79.0977 cv
97.6489 74.8652 li
cp
f
105.955 82.9307 mo
105.788 83.6846 105.921 83.9521 106.438 84.0654 cv
106.398 84.2471 li
104.18 83.7607 li
104.221 83.5771 li
104.727 83.6885 104.963 83.5371 105.137 82.751 cv
105.983 78.9092 li
106.153 78.1348 106.026 77.8916 105.499 77.7764 cv
105.539 77.5928 li
107.756 78.0811 li
107.715 78.2646 li
107.2 78.1504 106.964 78.3467 106.801 79.0898 cv
105.955 82.9307 li
cp
f
117.375 84.9678 mo
117.188 84.9697 li
112.675 79.5303 li
112.653 79.5322 li
112.702 83.9619 li
112.708 84.5996 112.965 84.8291 113.538 84.8232 cv
113.54 85.0107 li
111.623 85.0303 li
111.62 84.8447 li
112.149 84.8389 112.401 84.6709 112.391 83.7549 cv
112.35 80.0635 li
112.342 79.3584 112.151 78.9648 111.401 78.9063 cv
111.398 78.7178 li
113.018 78.7002 li
117.018 83.5732 li
117.039 83.5703 li
116.998 79.8799 li
116.99 79.0518 116.765 78.8467 116.217 78.8525 cv
116.214 78.665 li
118.122 78.6436 li
118.123 78.8311 li
117.505 78.8389 117.309 79.0938 117.317 79.8311 cv
117.375 84.9678 li
cp
f
124.046 80.6748 mo
124.622 80.5166 li
125.693 80.2236 126.539 80.6396 126.785 81.5342 cv
127.031 82.4258 126.56 83.001 125.943 83.1689 cv
125.446 83.3086 li
124.967 83.4395 124.761 83.2764 124.538 82.46 cv
124.046 80.6748 li
cp
123.758 82.7881 mo
123.963 83.5322 123.843 83.8057 123.334 83.9443 cv
123.383 84.126 li
126.188 83.3535 li
127.335 83.0381 127.986 82.2412 127.734 81.3271 cv
127.509 80.5107 126.68 79.9834 125.692 80.0508 cv
125.685 80.0283 li
126.449 79.5225 126.713 78.9814 126.527 78.3115 cv
126.314 77.5361 125.471 77.002 124.004 77.4072 cv
121.709 78.0371 li
121.758 78.2168 li
122.268 78.0781 122.501 78.2188 122.714 78.9951 cv
123.758 82.7881 li
cp
123.98 80.4424 mo
123.272 77.8584 li
123.876 77.6924 li
124.865 77.4209 125.483 77.834 125.693 78.5986 cv
125.902 79.3643 125.5 80.0225 124.608 80.2676 cv
123.98 80.4424 li
cp
f
136.822 77.6201 mo
136.655 78.5342 136.248 79.1543 135.527 79.5752 cv
134.206 80.3486 133.125 79.7256 132.576 78.7842 cv
131.008 76.1006 li
130.588 75.3779 130.313 75.3467 129.884 75.5947 cv
129.791 75.4346 li
131.759 74.2842 li
131.855 74.4463 li
131.409 74.7061 131.321 74.9746 131.726 75.6689 cv
133.338 78.4287 li
133.828 79.2656 134.643 79.5928 135.567 79.0547 cv
136.196 78.6885 136.564 78.0508 136.6 77.2383 cv
134.681 73.9551 li
134.317 73.3271 134.046 73.1924 133.597 73.4287 cv
133.501 73.2666 li
135.423 72.1455 li
135.519 72.3057 li
135.06 72.5732 135.022 72.876 135.406 73.5322 cv
137.39 76.9316 li
137.805 77.6455 138.093 77.6807 138.511 77.4365 cv
138.608 77.5967 li
137.265 78.3818 li
136.822 77.6201 li
cp
f
141.614 71.2764 mo
141.971 70.915 li
142.784 70.0908 144.074 70.9014 145.921 71.0674 cv
146.828 70.1494 li
146.693 70.0166 li
145.905 70.709 144.143 69.5273 142.773 69.834 cv
143.226 68.9814 143.074 68.3037 142.581 67.8174 cv
141.984 67.2275 140.921 67.1416 139.923 68.1533 cv
138.105 69.999 li
138.239 70.1299 li
138.596 69.7705 138.851 69.7295 139.442 70.3076 cv
142.258 73.0869 li
142.861 73.6826 142.809 73.9551 142.468 74.3018 cv
142.601 74.4326 li
144.197 72.8164 li
144.063 72.6846 li
143.699 73.0537 143.394 73.0313 142.846 72.4893 cv
141.614 71.2764 li
cp
139.369 69.0615 mo
139.834 68.5918 li
140.515 67.9014 141.379 67.8721 141.976 68.46 cv
142.494 68.9717 142.718 69.7793 141.967 70.54 cv
141.426 71.0908 li
139.369 69.0615 li
cp
f
151.986 62.4854 mo
151.888 62.8389 151.351 63.8271 151.201 64.0713 cv
149.755 66.4434 147.846 66.3623 146.601 65.6064 cv
144.692 64.4434 144.501 62.3398 145.31 61.0127 cv
145.773 60.25 146.207 60.1133 146.459 59.6982 cv
146.56 59.5303 146.56 59.4268 146.463 59.2891 cv
146.567 59.1191 li
148.156 60.0869 li
148.064 60.2383 li
146.953 59.7549 145.964 60.4053 145.515 61.1387 cv
144.839 62.25 145.298 63.6768 146.777 64.5771 cv
148.359 65.541 150.1 65.3105 150.879 64.0303 cv
151.114 63.6436 151.334 63.0693 150.853 62.7764 cv
150.272 62.4229 li
149.614 62.0205 149.285 62.0273 149.015 62.4697 cv
148.89 62.6768 li
148.728 62.5791 li
150.06 60.3955 li
150.221 60.4922 li
149.898 61.0215 150.067 61.3164 150.538 61.6025 cv
151.986 62.4854 li
cp
f
151.81 55.1982 mo
153.568 55.7041 li
154.298 55.915 154.584 55.8018 154.733 55.2842 cv
154.913 55.335 li
154.281 57.5264 li
154.1 57.4756 li
154.234 57.0088 154.14 56.7412 153.335 56.5088 cv
149.555 55.4189 li
148.835 55.2119 148.548 55.2881 148.393 55.8271 cv
148.213 55.7764 li
148.846 53.585 li
149.026 53.6357 li
148.888 54.1143 149.013 54.3896 149.788 54.6123 cv
151.513 55.1123 li
152.467 51.8086 li
150.74 51.3096 li
150 51.0962 149.733 51.1904 149.582 51.7085 cv
149.402 51.6577 li
150.027 49.4858 li
150.209 49.5391 li
150.059 50.0576 150.251 50.2979 150.972 50.5054 cv
154.754 51.5952 li
155.472 51.8027 155.765 51.7046 155.916 51.1865 cv
156.096 51.2373 li
155.468 53.4072 li
155.289 53.3564 li
155.426 52.8789 155.326 52.6323 154.519 52.4014 cv
152.763 51.8931 li
151.81 55.1982 li
cp
f
75.522 43.1699 mo
75.521 43.478 75.27 43.7261 74.9624 43.7231 cv
74.6558 43.7212 74.4087 43.4712 74.4106 43.1655 cv
74.4126 42.8569 74.6626 42.6104 74.9692 42.6113 cv
75.2759 42.6143 75.5239 42.8633 75.522 43.1699 cv
cp
f
154.471 43.1816 mo
154.468 43.4878 154.218 43.7368 153.91 43.7339 cv
153.603 43.7324 153.358 43.4829 153.358 43.1753 cv
153.359 42.8687 153.611 42.6211 153.916 42.6221 cv
154.225 42.625 154.472 42.8745 154.471 43.1816 cv
cp
f
130.629 71.8359 mo
131.074 71.6045 131.48 71.2959 131.909 71.0303 cv
132.272 70.8115 132.634 70.5879 132.998 70.3643 cv
133.326 70.1221 133.623 69.8438 133.959 69.6133 cv
134.31 69.3594 134.659 69.1045 135.008 68.8506 cv
135.082 68.7822 135.156 68.71 135.226 68.6387 cv
135.31 68.5957 135.393 68.5488 135.472 68.501 cv
135.772 68.2744 136.074 68.0049 136.353 67.7471 cv
136.578 67.5391 136.744 67.3018 136.978 67.0928 cv
137.21 66.8818 137.471 66.6904 137.709 66.4785 cv
137.809 66.3857 137.864 66.2861 137.951 66.1963 cv
138.144 66.0088 138.346 65.8291 138.519 65.6279 cv
138.64 65.4766 138.763 65.3271 138.886 65.1787 cv
139.322 64.7607 139.718 64.3008 140.082 63.833 cv
140.379 63.4814 140.676 63.125 140.968 62.7725 cv
141.166 62.499 141.361 62.2207 141.555 61.9463 cv
141.656 61.8369 141.758 61.7275 141.861 61.6182 cv
142.177 61.1758 142.498 60.7334 142.814 60.2871 cv
142.909 60.1338 142.963 59.9775 143.052 59.8232 cv
143.123 59.7217 143.193 59.6182 143.263 59.5205 cv
143.326 59.3916 143.383 59.2627 143.446 59.1328 cv
143.66 58.7646 143.861 58.3975 144.063 58.0254 cv
144.228 57.7393 144.398 57.4541 144.564 57.167 cv
144.703 56.876 144.791 56.5713 144.919 56.2803 cv
145.067 55.9746 145.209 55.6689 145.353 55.3643 cv
145.842 54.0488 146.324 52.73 146.714 51.3721 cv
146.744 51.2119 146.773 51.0474 146.801 50.8867 cv
146.909 50.3901 147.042 49.8774 147.143 49.3687 cv
147.171 49.1084 147.201 48.8462 147.23 48.584 cv
147.302 48.1592 147.388 47.7017 147.447 47.2695 cv
147.475 46.9233 147.501 46.5708 147.53 46.2227 cv
147.555 46.0874 147.581 45.9502 147.609 45.813 cv
147.623 45.522 147.64 45.23 147.656 44.939 cv
147.671 44.7925 147.717 44.6563 147.726 44.5024 cv
147.725 44.2988 147.718 44.0938 147.717 43.8901 cv
147.809 42.5723 147.832 41.1396 147.759 39.8359 cv
147.718 39.1538 147.56 38.4834 147.493 37.8193 cv
147.414 37.1162 147.361 36.4194 147.221 35.75 cv
146.832 33.9067 146.321 32.0981 145.669 30.3779 cv
145.576 30.1304 145.434 29.9033 145.332 29.6597 cv
145.122 29.1479 144.883 28.6733 144.636 28.1851 cv
144.555 28.0454 144.475 27.9063 144.393 27.7666 cv
144.192 27.3398 144.051 26.8779 143.826 26.4629 cv
143.688 26.207 143.522 25.9897 143.361 25.7432 cv
143.236 25.4766 143.109 25.2114 142.986 24.9448 cv
142.519 24.2202 142.035 23.5093 141.551 22.7988 cv
141.365 22.585 141.181 22.373 141 22.1597 cv
140.794 21.897 140.592 21.6333 140.386 21.3687 cv
140.192 21.1719 139.976 21.0083 139.802 20.7886 cv
139.706 20.6626 139.647 20.5298 139.542 20.4038 cv
139.388 20.2368 139.239 20.0684 139.084 19.9038 cv
138.993 19.8188 138.901 19.7354 138.81 19.6504 cv
138.576 19.3867 138.359 19.1143 138.118 18.855 cv
137.906 18.6582 137.697 18.46 137.489 18.2617 cv
137.284 18.0581 137.082 17.853 136.879 17.6475 cv
136.6 17.4307 136.318 17.2129 136.035 16.9976 cv
135.748 16.7432 135.457 16.4917 135.167 16.2368 cv
134.975 16.0918 134.768 15.9912 134.572 15.8628 cv
134.326 15.6821 134.074 15.5015 133.826 15.3213 cv
133.638 15.1895 133.478 15.0439 133.298 14.8955 cv
133.164 14.8149 133.03 14.7314 132.894 14.6479 cv
132.714 14.5205 132.535 14.3936 132.351 14.2646 cv
131.755 13.8999 131.119 13.624 130.5 13.3042 cv
130.276 13.1641 130.051 13.0215 129.826 12.8794 cv
129.435 12.6836 129.048 12.4883 128.66 12.292 cv
128.342 12.1392 128.011 12.0288 127.685 11.9009 cv
127.526 11.8125 127.365 11.7241 127.207 11.6357 cv
127.084 11.5918 126.959 11.5498 126.835 11.5054 cv
126.64 11.4189 126.446 11.3306 126.25 11.2437 cv
125.638 11.0215 124.997 10.8628 124.364 10.6685 cv
124.064 10.5781 123.754 10.4556 123.451 10.3677 cv
122.791 10.1743 122.133 10.0737 121.449 9.92041 cv
121.009 9.81982 120.552 9.69385 120.105 9.61768 cv
119.817 9.57764 119.523 9.54004 119.236 9.49902 cv
118.754 9.39893 118.217 9.31299 117.713 9.25146 cv
117.522 9.24707 117.326 9.24268 117.13 9.23535 cv
116.998 9.2168 116.861 9.2002 116.725 9.18066 cv
116.463 9.17725 116.199 9.17285 115.935 9.16846 cv
115.346 9.12744 114.721 9.07959 114.1 9.07568 cv
113.859 9.14502 113.52 9.10303 113.252 9.10156 cv
112.932 9.10156 112.612 9.10254 112.291 9.10303 cv
112.203 9.11768 112.116 9.13135 112.028 9.14551 cv
111.805 9.15137 111.582 9.15723 111.358 9.1626 cv
111.24 9.18994 111.122 9.21924 111.003 9.24756 cv
110.887 9.26318 110.772 9.27588 110.656 9.29053 cv
110.544 9.29053 110.43 9.28027 110.334 9.31787 cv
110.268 9.32861 110.2 9.3374 110.132 9.3457 cv
109.989 9.3457 109.836 9.34131 109.722 9.40186 cv
109.409 9.40039 108.944 9.44043 108.701 9.57178 cv
108.633 9.57959 108.565 9.58936 108.498 9.59961 cv
108.299 9.59717 108.037 9.62305 107.883 9.71289 cv
107.368 9.70947 106.943 9.92773 106.476 10.0391 cv
106.227 10.0967 105.932 10.1255 105.719 10.2544 cv
105.516 10.2534 105.295 10.3037 105.135 10.396 cv
104.811 10.3955 104.529 10.583 104.251 10.6909 cv
104.086 10.7544 103.881 10.7578 103.735 10.8555 cv
103.41 10.8545 103.122 11.0425 102.854 11.1626 cv
102.668 11.2432 102.483 11.3188 102.298 11.397 cv
101.296 11.8179 100.319 12.2979 99.355 12.7988 cv
99.1929 12.9043 99.0298 13.0068 98.8677 13.1104 cv
97.7134 13.6943 96.5737 14.335 95.5532 15.166 cv
95.2524 15.3809 94.9507 15.5962 94.6509 15.8115 cv
94.4927 15.9526 94.3345 16.0957 94.1782 16.2368 cv
93.8843 16.4521 93.5786 16.6362 93.2935 16.875 cv
92.7134 17.3652 92.1685 17.9155 91.6304 18.4478 cv
91.3003 18.7471 90.9673 19.0483 90.6362 19.3481 cv
90.522 19.4775 90.4087 19.6084 90.2974 19.7397 cv
90.147 19.8809 89.9956 20.02 89.8462 20.1592 cv
89.6079 20.4023 89.4419 20.6934 89.2114 20.9297 cv
89.0122 21.1323 88.813 21.3223 88.6323 21.5464 cv
88.5513 21.6582 88.4663 21.771 88.3853 21.8813 cv
88.0356 22.2744 87.6958 22.6582 87.395 23.0815 cv
87.1899 23.4023 86.9829 23.7236 86.7778 24.0454 cv
86.48 24.4277 86.145 24.9214 85.9165 25.3398 cv
85.8481 25.4766 85.7798 25.6138 85.7134 25.751 cv
85.5132 26.085 85.313 26.4165 85.1118 26.7471 cv
84.938 27.0942 84.8208 27.4653 84.647 27.8135 cv
84.5649 27.9482 84.4849 28.0815 84.4048 28.2163 cv
84.2349 28.5293 84.0923 28.8438 83.9126 29.1538 cv
83.8306 29.3545 83.7466 29.5562 83.6646 29.7583 cv
83.5649 29.9648 83.4663 30.1724 83.3667 30.3794 cv
83.2866 30.6182 83.2036 30.855 83.1235 31.0938 cv
83.0259 31.3501 82.9272 31.6055 82.8286 31.8628 cv
82.3345 33.4604 81.9194 35.064 81.5806 36.7554 cv
81.5513 37.0757 81.5239 37.3936 81.4946 37.7134 cv
81.4517 38.0825 81.3237 38.4849 81.2935 38.8516 cv
81.2681 39.1353 81.2798 39.46 81.1997 39.7261 cv
81.1792 39.9502 81.1587 40.1743 81.1372 40.3955 cv
81.0864 41.7651 81.1235 43.0669 81.1587 44.3931 cv
81.1772 45.0293 81.3022 45.667 81.3579 46.291 cv
81.3726 46.563 81.3853 46.833 81.3989 47.1069 cv
81.4868 47.9595 81.6313 48.8247 81.7642 49.6738 cv
81.8267 49.8892 81.8853 50.1045 81.9448 50.3213 cv
82.0884 50.9907 82.2378 51.6387 82.4312 52.2803 cv
82.4888 52.4248 82.5454 52.5718 82.6011 52.7183 cv
82.6372 52.8711 82.6743 53.0239 82.7104 53.1763 cv
82.9624 53.8867 83.2153 54.5967 83.4663 55.3057 cv
83.5923 55.5713 83.7173 55.8408 83.8403 56.1084 cv
83.9126 56.2842 83.9497 56.4814 84.0249 56.6553 cv
84.2183 57.1094 84.4995 57.5166 84.729 57.9541 cv
84.9106 58.3115 85.1255 58.6514 85.3052 59.0098 cv
85.3579 59.1367 85.4106 59.2656 85.4624 59.3955 cv
85.5249 59.4736 85.5884 59.5479 85.6499 59.626 cv
85.7192 59.7744 85.7876 59.9238 85.856 60.0742 cv
86.0259 60.3721 86.2329 60.6592 86.4478 60.9326 cv
86.5757 61.0967 86.6812 61.2813 86.811 61.4463 cv
86.9868 61.667 87.1841 61.8682 87.3481 62.0947 cv
87.4751 62.2832 87.6011 62.4697 87.729 62.6553 cv
87.9673 62.9404 88.2056 63.2266 88.4458 63.5078 cv
88.644 63.7588 88.8423 64.0088 89.0386 64.2588 cv
89.2856 64.5176 89.5327 64.7764 89.7798 65.0342 cv
89.9829 65.2686 90.1577 65.5469 90.3911 65.7627 cv
90.7251 66.0674 91.0532 66.3789 91.3618 66.6904 cv
91.5249 66.8564 91.6899 67.0225 91.853 67.1865 cv
92.1235 67.4209 92.438 67.5898 92.6978 67.8369 cv
92.9478 68.0791 93.1997 68.3213 93.4536 68.5645 cv
93.6372 68.7051 93.8188 68.8467 94.0024 68.9854 cv
94.2271 69.1787 94.4185 69.4014 94.6626 69.5742 cv
94.9565 69.7734 95.231 70.0068 95.5366 70.1826 cv
95.7388 70.2998 95.9556 70.3604 96.1499 70.4902 cv
96.3774 70.6504 96.604 70.8115 96.8315 70.9717 cv
97.0552 71.1162 97.3091 71.2314 97.5366 71.3701 cv
98.397 71.8984 99.2661 72.3525 100.17 72.7852 cv
100.567 72.9775 100.942 73.2217 101.368 73.3662 cv
101.758 73.5186 102.147 73.6689 102.538 73.8203 cv
102.679 73.8594 102.823 73.9023 102.963 73.9414 cv
103.347 74.0879 103.728 74.2354 104.11 74.3838 cv
104.213 74.4131 104.317 74.4443 104.419 74.4736 cv
104.749 74.6025 105.077 74.7559 105.42 74.8486 cv
105.836 74.9316 106.253 75.0098 106.668 75.0928 cv
107.289 75.2217 107.936 75.4131 108.568 75.5107 cv
108.799 75.5303 109.03 75.5498 109.264 75.5654 cv
109.571 75.6045 109.879 75.6768 110.198 75.7061 cv
110.44 75.7197 110.681 75.7373 110.924 75.7539 cv
111.082 75.7764 111.238 75.7998 111.393 75.8262 cv
111.559 75.8311 111.725 75.8379 111.889 75.8428 cv
112.269 75.8984 112.645 75.957 113.025 76.0137 cv
113.219 76.0234 113.415 76.0313 113.608 76.04 cv
113.726 76.0254 113.843 76.0117 113.961 75.999 cv
114.307 76.002 114.72 76.04 115.067 76.0547 cv
115.29 76.0605 115.497 76.0449 115.709 76.0547 cv
116.147 76.0781 116.56 75.9932 116.967 75.9336 cv
117.148 75.9258 117.334 75.9189 117.518 75.9141 cv
117.765 75.8818 118.034 75.8389 118.277 75.8193 cv
119.181 75.7373 120.056 75.6357 120.93 75.4639 cv
121.225 75.3857 121.519 75.3096 121.813 75.2305 cv
122.18 75.1582 122.546 75.0811 122.914 75.0068 cv
123.105 74.9512 123.276 74.8555 123.457 74.7832 cv
123.758 74.6943 124.055 74.6064 124.355 74.5166 cv
124.484 74.4697 124.611 74.4268 124.74 74.3799 cv
124.957 74.3213 125.155 74.2979 125.369 74.2314 cv
125.81 74.0791 126.25 73.9219 126.696 73.7666 cv
126.957 73.6396 127.221 73.5186 127.483 73.3936 cv
127.739 73.2959 127.994 73.1787 128.239 73.0654 cv
128.31 73.0225 128.379 72.9775 128.449 72.9355 cv
128.714 72.8105 128.99 72.6846 129.248 72.5518 cv
129.548 72.3799 129.85 72.2119 130.151 72.04 cv
130.305 71.9609 130.475 71.917 130.629 71.8359 cv
cp
f
114.092 73.1943 mo
114.083 73.1943 114.073 73.1943 114.063 73.1943 cv
114.063 73.1826 114.063 73.1748 114.063 73.1631 cv
114.018 73.1631 113.997 73.1084 113.971 73.0771 cv
113.858 72.8965 113.745 72.7158 113.631 72.5361 cv
113.396 72.2627 113.159 71.9844 112.922 71.707 cv
112.214 71.0342 111.385 70.458 110.516 70.083 cv
110.337 70.0186 110.157 69.9502 109.977 69.8857 cv
109.778 69.7998 109.592 69.6836 109.385 69.6064 cv
109.192 69.5342 108.983 69.5107 108.776 69.4736 cv
108.566 69.4326 108.351 69.374 108.135 69.3271 cv
107.69 69.2373 107.242 69.1045 106.791 69.0225 cv
106.353 68.9678 105.917 68.915 105.48 68.8584 cv
105.131 68.8408 104.797 68.8467 104.461 68.8154 cv
102.881 68.6543 101.318 68.501 99.7915 68.2549 cv
99.272 68.167 98.7642 68.165 98.2524 68.0752 cv
97.7466 67.9854 97.2388 67.8389 96.7563 67.6865 cv
96.4897 67.6025 96.2173 67.5391 95.9575 67.4404 cv
95.7036 67.3281 95.4507 67.2139 95.1978 67.0986 cv
95.022 67.0186 94.8472 66.9404 94.6724 66.8643 cv
94.5513 66.7861 94.4282 66.7061 94.3052 66.6279 cv
94.2466 66.5957 94.188 66.5645 94.1284 66.5313 cv
93.7114 66.1963 93.3833 65.7354 93.063 65.3271 cv
92.8159 65.0127 92.686 64.6475 92.5688 64.2666 cv
92.5142 64.0791 92.4556 63.8916 92.397 63.7041 cv
92.2124 62.8311 92.231 61.9189 92.2212 60.9639 cv
92.2075 60.7803 92.1899 60.5967 92.1743 60.4082 cv
92.1997 59.7002 92.2437 58.9795 92.2583 58.2803 cv
92.2524 58.125 92.2476 57.9707 92.2407 57.8135 cv
92.2446 57.1064 92.2485 56.3955 92.2524 55.6846 cv
92.2554 55.2197 92.2915 54.7588 92.2876 54.3154 cv
92.2681 52.4033 92.3022 50.4683 92.3452 48.5391 cv
92.3296 48.2671 92.3149 47.9951 92.2983 47.7212 cv
92.2954 47.4204 92.3286 47.1348 92.3296 46.8491 cv
92.3247 46.7119 92.3208 46.5752 92.3179 46.438 cv
92.354 46.0029 92.3911 45.5645 92.4263 45.127 cv
92.4341 44.7871 92.4048 44.4536 92.4048 44.1367 cv
92.4067 43.897 92.4438 43.6543 92.4321 43.4067 cv
92.4243 43.2051 92.3774 43.0156 92.3823 42.793 cv
92.3931 42.6094 92.4048 42.4233 92.4126 42.2388 cv
92.4087 41.8672 92.3843 41.4639 92.3921 41.0728 cv
92.397 40.8477 92.4282 40.6099 92.4224 40.3721 cv
92.4165 40.1128 92.3657 39.856 92.3735 39.584 cv
92.4028 39.2642 92.4321 38.9438 92.4624 38.623 cv
92.4712 38.3091 92.4438 38.0093 92.4458 37.7173 cv
92.4487 37.064 92.4771 36.3555 92.481 35.6758 cv
92.4858 35.5386 92.4927 35.4048 92.4966 35.2686 cv
92.4829 34.9771 92.4673 34.6846 92.4517 34.3931 cv
92.4751 34.1411 92.4966 33.8872 92.522 33.6338 cv
92.5454 32.4209 92.5415 31.1714 92.5688 29.9863 cv
92.5708 29.5796 92.5708 29.1714 92.5728 28.7632 cv
92.561 28.4751 92.5181 28.1938 92.5249 27.8877 cv
92.5356 27.6934 92.5454 27.4971 92.5571 27.3047 cv
92.563 26.2813 92.5396 25.2549 92.5454 24.2129 cv
92.5474 23.8345 92.5806 23.4956 92.5786 23.1323 cv
92.5728 22.7231 92.5571 22.2808 92.5591 21.8491 cv
92.561 21.5698 92.5903 21.2959 92.5923 21.0034 cv
92.5942 20.7715 92.5474 20.4448 92.6255 20.2456 cv
92.6255 20.187 92.6948 20.1968 92.7437 20.1909 cv
93.1626 20.1323 93.6919 20.0776 94.1411 20.1475 cv
94.6958 20.2329 95.2563 20.1431 95.8354 20.1465 cv
96.3501 20.1499 96.8647 20.1504 97.3813 20.1514 cv
97.6919 20.1348 98.0024 20.1191 98.3159 20.1011 cv
98.897 20.105 99.436 20.1406 100.004 20.1357 cv
100.688 20.1299 101.426 20.1196 102.137 20.123 cv
102.339 20.1328 102.543 20.1426 102.749 20.1504 cv
103.038 20.1348 103.332 20.1221 103.624 20.1064 cv
103.867 20.1113 104.094 20.1626 104.354 20.1631 cv
104.68 20.166 104.976 20.1348 105.284 20.1431 cv
105.764 20.1514 106.279 20.1548 106.774 20.1816 cv
107.006 20.2012 107.239 20.2183 107.472 20.2368 cv
108.159 20.229 108.874 20.2002 109.545 20.1938 cv
110.002 20.2065 110.459 20.2183 110.917 20.2314 cv
111.303 20.2261 111.687 20.1514 112.083 20.1543 cv
112.359 20.1558 112.666 20.1816 112.958 20.1826 cv
113.221 20.1797 113.483 20.1743 113.746 20.1714 cv
114.045 20.1953 114.348 20.2188 114.65 20.2446 cv
114.883 20.2329 115.118 20.2222 115.35 20.2104 cv
115.806 20.2285 116.263 20.2441 116.721 20.2612 cv
116.935 20.2446 117.148 20.2285 117.361 20.2104 cv
118.608 20.1782 119.781 20.2095 121.038 20.1978 cv
121.313 20.1816 121.584 20.1636 121.855 20.1475 cv
122.416 20.1328 123.008 20.1714 123.546 20.1328 cv
123.666 20.1221 123.781 20.1094 123.898 20.0996 cv
124.365 20.1465 124.913 20.0972 125.414 20.1089 cv
125.623 20.1113 125.794 20.1626 125.997 20.1675 cv
126.221 20.1592 126.446 20.1543 126.667 20.1465 cv
127.027 20.1592 127.443 20.2026 127.805 20.1987 cv
128.056 20.1968 128.301 20.1479 128.567 20.1558 cv
128.75 20.1719 128.934 20.1895 129.119 20.2065 cv
129.376 20.2104 129.669 20.1743 129.935 20.1953 cv
130.122 20.2241 130.305 20.25 130.493 20.2769 cv
130.644 20.2705 130.801 20.2642 130.957 20.2573 cv
131.123 20.2676 131.288 20.2759 131.456 20.2847 cv
131.619 20.2783 131.784 20.269 131.947 20.2603 cv
132.261 20.2563 132.56 20.2925 132.851 20.272 cv
133.328 20.2368 133.794 20.3071 134.284 20.3018 cv
134.515 20.2871 134.748 20.2705 134.983 20.2549 cv
135.138 20.2637 135.292 20.272 135.449 20.2798 cv
135.596 20.2808 135.78 20.2627 135.902 20.312 cv
135.913 20.3198 135.923 20.3311 135.935 20.3384 cv
136.039 20.4922 136 20.7769 135.998 20.9849 cv
135.994 21.6509 135.964 22.2954 135.993 22.937 cv
136.008 23.3442 136.001 23.8096 136.005 24.2217 cv
135.998 24.3569 135.993 24.4941 135.984 24.6274 cv
135.994 24.9214 136.008 25.2109 136.018 25.5024 cv
136.001 25.7954 135.986 26.0874 135.968 26.3813 cv
135.993 26.7588 136.018 27.1401 136.041 27.5176 cv
136.023 27.6616 136.008 27.8096 135.99 27.9551 cv
135.98 28.2095 136.031 28.4399 136.03 28.6851 cv
136.013 28.9375 135.998 29.1899 135.983 29.4424 cv
135.98 29.7534 135.975 30.0645 135.971 30.375 cv
135.956 30.6084 135.935 30.8423 135.919 31.0742 cv
135.947 31.4551 135.975 31.8335 135.998 32.2124 cv
135.989 32.3496 135.976 32.4863 135.963 32.6226 cv
135.951 32.937 135.927 33.2544 135.931 33.5552 cv
135.938 34.0957 135.983 34.6982 135.989 35.2178 cv
135.975 35.3354 135.96 35.4517 135.949 35.5688 cv
135.959 35.8115 135.968 36.0518 135.978 36.2949 cv
135.964 36.5757 135.938 36.8926 135.935 37.2017 cv
135.935 37.4277 135.984 37.6235 135.978 37.8438 cv
135.964 37.9604 135.949 38.0776 135.931 38.1938 cv
135.939 38.3486 135.946 38.5054 135.949 38.6592 cv
135.935 39.2441 135.883 39.8115 135.89 40.4111 cv
135.901 40.7012 135.909 40.9932 135.919 41.2856 cv
135.934 41.4028 135.947 41.5186 135.964 41.6357 cv
135.957 41.8311 135.946 42.0244 135.938 42.2188 cv
135.943 42.3452 135.951 42.4722 135.957 42.5977 cv
135.939 42.812 135.923 43.0254 135.906 43.2393 cv
135.909 43.5298 135.978 43.835 135.967 44.144 cv
135.935 44.9966 135.888 45.8013 135.883 46.6528 cv
135.88 46.9976 135.935 47.3027 135.934 47.6455 cv
135.916 47.8311 135.897 48.0146 135.879 48.1982 cv
135.875 48.5977 135.872 48.9966 135.865 49.394 cv
135.846 49.6094 135.826 49.8228 135.809 50.0356 cv
135.818 50.8442 135.831 51.6504 135.842 52.4561 cv
135.838 53.0181 135.781 53.6143 135.788 54.1787 cv
135.801 54.4795 135.817 54.7803 135.828 55.084 cv
135.822 55.2012 135.814 55.3174 135.809 55.4346 cv
135.806 55.6475 135.805 55.8613 135.802 56.0762 cv
135.798 56.5967 135.824 57.1211 135.822 57.6201 cv
135.818 58.2256 135.824 58.8779 135.81 59.5166 cv
135.802 59.6924 135.794 59.8652 135.789 60.041 cv
135.801 60.1484 135.814 60.2539 135.828 60.3613 cv
135.81 60.7334 135.791 61.1016 135.776 61.4697 cv
135.768 61.7822 135.813 62.1113 135.791 62.4326 cv
135.755 62.6279 135.718 62.8232 135.685 63.0186 cv
135.659 63.2305 135.63 63.4424 135.605 63.6553 cv
135.531 64.0166 135.268 64.5381 135.074 64.8467 cv
134.909 65.1123 134.63 65.2568 134.417 65.4707 cv
134.289 65.5967 134.143 65.6807 134.008 65.792 cv
133.759 66.0049 133.511 66.2295 133.23 66.3789 cv
133.051 66.4463 132.872 66.5137 132.692 66.5811 cv
132.326 66.7295 131.963 66.8936 131.589 67.0342 cv
131.248 67.1631 130.884 67.2588 130.542 67.3867 cv
130.459 67.417 130.372 67.4492 130.285 67.4775 cv
130.097 67.4766 129.843 67.5625 129.699 67.6504 cv
129.538 67.6494 129.365 67.668 129.234 67.7354 cv
128.986 67.7334 128.809 67.8057 128.608 67.8799 cv
128.544 67.8994 128.48 67.917 128.416 67.9346 cv
128.317 67.9346 128.201 67.9463 128.123 67.9912 cv
127.93 67.9893 127.478 68.0791 127.334 68.1611 cv
127.164 68.1611 126.953 68.1299 126.809 68.1885 cv
126.709 68.1885 126.593 68.2002 126.515 68.2451 cv
126.359 68.2432 126.173 68.2256 126.048 68.2998 cv
125.972 68.3096 125.893 68.3193 125.817 68.3291 cv
125.693 68.3291 125.563 68.333 125.467 68.3838 cv
125.358 68.3838 125.233 68.3984 125.144 68.4404 cv
124.942 68.4385 124.636 68.4072 124.472 68.4971 cv
124.397 68.5059 124.318 68.5127 124.24 68.5234 cv
124.041 68.5205 123.796 68.4502 123.626 68.5498 cv
123.509 68.5488 123.372 68.5332 123.276 68.5762 cv
123.217 68.5879 123.16 68.5957 123.101 68.6035 cv
122.914 68.6035 122.677 68.5684 122.518 68.6309 cv
122.439 68.6406 122.364 68.6504 122.285 68.6582 cv
122.226 68.668 122.166 68.6777 122.111 68.6865 cv
122.051 68.6982 121.993 68.708 121.935 68.7148 cv
121.847 68.7246 121.759 68.7334 121.671 68.7451 cv
121.548 68.7432 121.416 68.748 121.321 68.7988 cv
121.243 68.8076 121.166 68.8184 121.088 68.8271 cv
120.957 68.8271 120.806 68.8232 120.707 68.8828 cv
120.584 68.8828 120.451 68.8857 120.358 68.9404 cv
120.258 68.9404 120.14 68.9521 120.067 68.9951 cv
119.972 68.9951 119.875 69.0107 119.802 69.0537 cv
119.747 69.0615 119.688 69.0713 119.629 69.083 cv
119.478 69.0811 119.281 69.126 119.16 69.1943 cv
119.064 69.1943 118.971 69.21 118.897 69.2529 cv
118.592 69.251 118.328 69.3896 118.071 69.4902 cv
117.869 69.5645 117.667 69.6367 117.467 69.7109 cv
117.076 69.709 116.66 70.0713 116.373 70.3096 cv
116.119 70.5166 115.794 70.6182 115.545 70.8535 cv
114.853 71.4951 114.436 72.3584 114.092 73.1943 cv
cp
0 0 0 0 cmyk
f
117.346 69.0498 mo
117.523 68.9756 117.703 68.8994 117.884 68.8232 cv
118.239 68.7168 118.611 68.6504 118.986 68.5684 cv
119.688 68.417 120.365 68.2334 121.068 68.0869 cv
121.24 68.0752 121.413 68.0635 121.584 68.0518 cv
121.855 68.0029 122.122 67.9346 122.406 67.9092 cv
122.776 67.8955 123.144 67.8838 123.513 67.8721 cv
123.959 67.8389 124.41 67.7422 124.859 67.7119 cv
125.259 67.6816 125.659 67.668 126.051 67.6172 cv
126.406 67.5625 126.754 67.5039 127.105 67.4443 cv
127.222 67.4375 127.338 67.4277 127.451 67.4189 cv
127.997 67.3311 128.519 67.2021 129.038 67.0811 cv
129.214 67.0381 129.384 67.0186 129.555 66.9697 cv
130.055 66.8232 130.539 66.6279 131.023 66.4727 cv
131.431 66.3389 131.824 66.2158 132.207 66.042 cv
132.539 65.8916 132.817 65.6787 133.125 65.4854 cv
133.677 65.1377 134.28 64.7705 134.622 64.1895 cv
134.773 63.9307 134.914 63.5479 134.96 63.2422 cv
134.972 63.0967 134.983 62.9502 134.994 62.8037 cv
135.097 62.1729 135.082 61.4834 135.074 60.8252 cv
135.085 60.5928 135.096 60.3584 135.105 60.1221 cv
135.097 59.9971 135.092 59.8701 135.082 59.7451 cv
135.082 59.4932 135.082 59.2402 135.081 58.9883 cv
135.067 58.8896 135.055 58.793 135.042 58.6943 cv
135.051 58.6084 135.06 58.5205 135.071 58.4326 cv
135.06 58.3467 135.051 58.2588 135.039 58.1699 cv
135.042 57.998 135.089 57.8574 135.089 57.6748 cv
135.092 57.4795 135.042 57.3369 135.039 57.1484 cv
135.038 56.9248 135.096 56.7617 135.101 56.5381 cv
135.115 55.7705 135.105 55.0166 135.136 54.2607 cv
135.126 54.0771 135.122 53.8926 135.115 53.709 cv
135.119 53.0356 135.125 52.3662 135.126 51.6973 cv
135.166 49.8696 135.143 47.9204 135.181 46.0933 cv
135.171 45.9019 135.164 45.7056 135.151 45.5122 cv
135.143 45.4526 135.133 45.3965 135.126 45.3379 cv
135.136 45.1929 135.167 45.0293 135.163 44.8701 cv
135.151 44.7627 135.138 44.6563 135.126 44.5493 cv
135.13 44.3994 135.171 44.2471 135.167 44.082 cv
135.166 43.7441 135.084 43.4585 135.085 43.1191 cv
135.089 42.8867 135.122 42.688 135.138 42.4775 cv
135.136 42.3706 135.13 42.2622 135.126 42.1567 cv
135.143 42.0508 135.16 41.9414 135.173 41.8359 cv
135.163 41.7095 135.148 41.583 135.13 41.4561 cv
135.148 41.3115 135.163 41.165 135.177 41.0195 cv
135.173 40.8877 135.13 40.7788 135.13 40.6392 cv
135.136 39.8423 135.143 39.0454 135.144 38.249 cv
135.148 38.0659 135.193 37.9253 135.201 37.7495 cv
135.206 37.5776 135.151 37.4487 135.156 37.2861 cv
135.171 37.1982 135.188 37.1089 135.201 37.022 cv
135.214 36.7598 135.226 36.4976 135.24 36.2354 cv
135.236 35.8354 135.233 35.3975 135.214 34.98 cv
135.201 34.8452 135.181 34.709 135.166 34.5723 cv
135.164 34.2432 135.222 33.9546 135.217 33.6382 cv
135.203 33.396 135.189 33.1533 135.173 32.9097 cv
135.185 31.0303 135.114 29.2271 135.181 27.3643 cv
135.189 26.3462 135.193 25.3252 135.201 24.3042 cv
135.221 23.751 135.18 23.1479 135.173 22.6113 cv
135.167 22.064 135.18 21.5679 135.181 21.0083 cv
135.173 21.0083 135.164 21.0083 135.151 21.0083 cv
135.151 20.9463 134.876 20.9834 134.831 21.0063 cv
134.289 20.9995 133.743 20.9907 133.201 20.9834 cv
132.847 20.9526 132.497 20.9292 132.119 20.9331 cv
132.015 20.9331 131.884 20.9214 131.798 20.9609 cv
131.666 20.9736 131.527 20.9878 131.39 21.0015 cv
131.197 20.978 131.001 20.9526 130.805 20.9282 cv
130.125 20.9229 129.446 20.9189 128.765 20.9136 cv
128.574 20.9121 128.078 20.8521 127.949 20.9097 cv
127.597 20.9058 127.248 20.9019 126.898 20.8975 cv
126.633 20.8789 126.254 20.7661 125.993 20.8687 cv
125.917 20.8784 125.835 20.8872 125.761 20.8975 cv
125.508 20.8936 125.254 20.8911 125.001 20.8872 cv
124.625 20.8604 124.258 20.8003 123.865 20.7979 cv
123.572 20.8828 123.155 20.7412 122.873 20.8511 cv
122.794 20.8604 122.717 20.8701 122.64 20.8794 cv
122.339 20.8784 122.039 20.8755 121.736 20.8745 cv
121.589 20.874 121.388 20.8467 121.268 20.9023 cv
121.177 20.9019 121.048 20.8921 120.975 20.9292 cv
120.725 20.9282 120.513 20.876 120.276 20.8677 cv
119.673 20.8657 119.072 20.8599 118.468 20.856 cv
118.25 20.855 117.926 20.8081 117.74 20.8828 cv
117.671 20.8906 117.603 20.8994 117.535 20.9097 cv
117.446 20.9189 117.359 20.9282 117.273 20.9375 cv
116.931 20.9355 116.369 20.7563 116.076 20.873 cv
116.018 20.8818 115.96 20.8911 115.902 20.8994 cv
115.772 20.8994 115.622 20.9023 115.521 20.9565 cv
114.651 20.9526 113.785 20.9463 112.954 20.9292 cv
112.734 20.9229 112.5 20.9341 112.284 20.9331 cv
112.18 20.9331 112.026 20.8906 111.934 20.9375 cv
111.718 20.9331 111.507 20.9307 111.292 20.9282 cv
110.995 20.9072 110.336 20.7886 110.067 20.8975 cv
109.872 20.8945 109.678 20.8911 109.484 20.8901 cv
109.354 20.8789 109.198 20.8433 109.073 20.8911 cv
108.901 20.8906 108.669 20.8584 108.521 20.918 cv
108.172 20.9155 107.866 20.855 107.5 20.8525 cv
107.384 20.8525 107.247 20.8403 107.15 20.8813 cv
106.934 20.8794 106.631 20.8325 106.45 20.9063 cv
106.118 20.9048 105.788 20.9033 105.457 20.9019 cv
105.301 20.8994 105.088 20.8701 104.962 20.9268 cv
104.545 20.9297 104.126 20.9307 103.708 20.9331 cv
103.443 20.9141 102.93 20.8159 102.686 20.9141 cv
102.423 20.9121 101.969 20.8232 101.752 20.9072 cv
101.201 20.9058 100.693 20.873 100.148 20.8364 cv
99.9556 20.8213 99.6606 20.7563 99.4771 20.8389 cv
99.3696 20.8369 99.2476 20.8237 99.1558 20.8667 cv
98.9478 20.8638 98.6626 20.8208 98.4868 20.8906 cv
98.3032 20.8901 98.019 20.8433 97.8716 20.9155 cv
97.1821 20.9121 96.4507 20.8789 95.7153 20.8745 cv
95.5005 20.874 95.1958 20.8276 95.0142 20.8994 cv
94.7495 20.8989 94.1685 20.8433 93.9634 20.9229 cv
93.8101 20.9224 93.5396 20.8794 93.438 20.9775 cv
93.2739 21.1333 93.3638 21.8984 93.3696 22.146 cv
93.3628 22.3389 93.354 22.5342 93.3462 22.729 cv
93.3521 22.9067 93.3784 23.0913 93.3579 23.2813 cv
93.3579 23.5552 93.3599 23.8267 93.3599 24.0996 cv
93.3325 24.8438 93.3247 25.5562 93.3208 26.3184 cv
93.3188 26.5239 93.269 26.6787 93.2622 26.8706 cv
93.2534 27.0737 93.2974 27.2695 93.2954 27.4521 cv
93.27 27.6382 93.2485 27.8232 93.2251 28.0078 cv
93.2368 28.3965 93.2437 28.7852 93.2554 29.1724 cv
93.228 29.8345 93.1978 30.5449 93.2056 31.2466 cv
93.2153 31.5186 93.2251 31.7905 93.2349 32.0601 cv
93.2456 32.1494 93.2573 32.2363 93.2681 32.3237 cv
93.2456 32.4902 93.2271 32.6553 93.2046 32.8198 cv
93.2173 34.0083 93.1841 35.1436 93.1763 36.3496 cv
93.1743 36.873 93.2017 37.3564 93.1919 37.8672 cv
93.1733 38.1187 93.1548 38.3721 93.1353 38.6265 cv
93.1431 39.0054 93.1509 39.3848 93.1587 39.7642 cv
93.1528 40.5166 93.1216 41.2998 93.1294 42.0684 cv
93.1411 42.3403 93.1528 42.6113 93.1646 42.8843 cv
93.147 43.2349 93.1294 43.584 93.1089 43.9341 cv
93.1021 45.3149 93.1255 46.7471 93.1372 48.1357 cv
93.1411 48.48 93.0786 48.77 93.0786 49.126 cv
93.0747 49.4956 93.0728 49.8652 93.0728 50.2334 cv
93.0806 50.4019 93.0884 50.5659 93.0942 50.7305 cv
93.0679 51.9868 93.0259 53.1919 93.02 54.4639 cv
93.0161 55.041 92.9526 55.5439 92.9507 56.0986 cv
92.9507 56.3408 92.9517 56.583 92.9526 56.8252 cv
92.9644 56.9219 92.979 57.0186 92.9927 57.1182 cv
92.9761 57.2158 92.9604 57.3135 92.9478 57.4092 cv
92.9321 57.6885 92.9155 57.9863 92.9136 58.2549 cv
92.9116 58.5967 92.9194 58.9746 92.9341 59.335 cv
92.9409 59.4971 92.9858 59.6318 92.9849 59.8018 cv
92.9839 59.9736 92.9321 60.1035 92.9312 60.2686 cv
92.9302 60.4678 92.9829 60.6143 92.9829 60.8232 cv
92.9722 62.3301 92.9907 63.7822 93.6743 64.9307 cv
94.145 65.7139 95.0122 66.208 95.7993 66.5469 cv
96.3462 66.7842 96.9067 67.0537 97.5005 67.1943 cv
97.9409 67.2959 98.3745 67.3516 98.8345 67.4307 cv
99.1851 67.4912 99.5493 67.582 99.9165 67.6211 cv
100.266 67.6494 100.616 67.6768 100.965 67.7021 cv
101.715 67.7939 102.449 67.9268 103.212 68.0186 cv
103.571 68.0361 103.93 68.0557 104.288 68.0713 cv
104.444 68.1045 104.599 68.1377 104.756 68.1729 cv
105.038 68.1787 105.321 68.1807 105.602 68.1885 cv
105.903 68.2158 106.204 68.2432 106.505 68.2744 cv
106.661 68.2803 106.815 68.2861 106.971 68.29 cv
107.107 68.3252 107.245 68.3564 107.381 68.3877 cv
107.768 68.4473 108.127 68.4893 108.515 68.5645 cv
108.634 68.6035 108.754 68.6426 108.874 68.6865 cv
109.137 68.7627 109.377 68.8252 109.63 68.9248 cv
109.997 69.0576 110.366 69.1904 110.732 69.3213 cv
111 69.4561 111.264 69.5898 111.535 69.7246 cv
111.675 69.8203 111.821 69.916 111.961 70.0127 cv
112.254 70.1807 112.543 70.3252 112.811 70.5439 cv
113.141 70.8135 113.366 71.1396 113.655 71.4482 cv
113.75 71.5537 113.798 71.6914 113.924 71.7617 cv
113.924 71.8105 113.941 71.793 113.985 71.793 cv
113.985 71.7422 114.131 71.6494 114.17 71.6006 cv
114.233 71.5068 114.292 71.4131 114.352 71.3193 cv
114.991 70.3857 115.938 69.7188 116.898 69.2061 cv
117.048 69.1553 117.193 69.1006 117.346 69.0498 cv
cp
1 .68 0 .54 cmyk
f
117.513 24.6157 mo
117.513 24.624 117.513 24.6338 117.513 24.6436 cv
117.484 24.6436 117.456 24.6436 117.426 24.6436 cv
117.423 24.5469 117.421 24.4512 117.419 24.3545 cv
117.463 24.064 117.701 23.9307 117.868 23.7129 cv
118.177 23.9829 117.699 24.4165 117.513 24.6157 cv
cp
0 0 0 0 cmyk
f
119.027 22.1831 mo
119.151 22.0522 119.218 21.8921 119.326 21.7485 cv
119.417 21.6572 119.509 21.5664 119.603 21.4746 cv
119.813 21.4966 120.009 21.5278 120.243 21.5386 cv
120.243 21.5664 120.243 21.5957 120.243 21.6255 cv
119.934 21.623 119.103 22.6528 118.91 22.9136 cv
118.821 23.0356 118.713 23.2773 118.574 23.3521 cv
118.489 23.3945 118.386 23.3594 118.318 23.3164 cv
118.119 23.1929 118.268 22.9756 118.324 22.8325 cv
118.361 22.7422 118.369 22.6357 118.447 22.5688 cv
118.53 22.5298 118.605 22.4902 118.685 22.4492 cv
118.801 22.3623 118.914 22.2744 119.027 22.1831 cv
cp
f
117.046 22.8872 mo
117.096 22.7373 117.096 22.5728 117.169 22.436 cv
117.261 22.2573 117.486 22.2134 117.625 22.085 cv
117.75 21.9702 117.776 21.8135 117.875 21.689 cv
117.976 21.5542 118.119 21.5303 118.259 21.4678 cv
118.375 21.4678 118.494 21.4688 118.609 21.4692 cv
118.609 21.6147 118.417 21.7632 118.347 21.8799 cv
118.251 22.0381 118.156 22.2046 118.059 22.3589 cv
117.947 22.5117 117.832 22.6655 117.717 22.8193 cv
117.64 22.938 117.614 23.0737 117.518 23.1826 cv
117.446 23.2378 117.375 23.2944 117.302 23.3486 cv
117.24 23.4219 117.176 23.4927 117.111 23.5605 cv
117.046 23.6226 116.983 23.6851 116.916 23.7461 cv
116.796 23.8896 116.796 24.1006 116.638 24.2261 cv
116.498 24.334 116.247 24.4087 116.056 24.3433 cv
116.038 24.3433 116.015 24.3433 115.998 24.3433 cv
115.998 24.2563 116.38 23.6621 116.468 23.5864 cv
116.548 23.5176 116.666 23.5122 116.73 23.4199 cv
116.788 23.3335 116.777 23.2324 116.828 23.144 cv
116.888 23.0381 117.005 23.0054 117.046 22.8872 cv
cp
f
114.836 22.4756 mo
114.872 22.3315 115.009 22.2363 115.051 22.0918 cv
115.102 21.9219 115.04 21.7793 115.161 21.6416 cv
115.284 21.5005 116.034 21.6147 116.277 21.4854 cv
116.434 21.4863 116.585 21.4868 116.743 21.4888 cv
116.743 21.5088 116.743 21.5278 116.743 21.5474 cv
116.697 21.5474 116.697 21.5708 116.677 21.5996 cv
116.449 21.9204 116.332 22.293 116.171 22.647 cv
116.1 22.7754 116.023 22.9033 115.953 23.0332 cv
115.894 23.1729 115.834 23.3135 115.777 23.4536 cv
115.625 23.7354 115.249 24.2163 114.92 24.2798 cv
114.92 24.27 114.92 24.2598 114.92 24.2495 cv
114.869 24.249 114.885 23.9829 114.878 23.9307 cv
114.855 23.8018 114.805 23.6934 114.822 23.5483 cv
114.836 23.3911 114.92 23.2866 114.917 23.1128 cv
114.91 22.8984 114.785 22.6904 114.836 22.4756 cv
cp
f
112.518 21.498 mo
112.626 21.3833 113.047 21.4585 113.215 21.4106 cv
113.399 21.4731 113.867 21.4658 114.089 21.4736 cv
114.094 21.6025 114.1 21.728 114.104 21.8564 cv
114.127 21.9517 114.15 22.0488 114.17 22.146 cv
114.153 22.252 114.134 22.3589 114.118 22.4653 cv
114.106 22.9292 114.047 23.3872 114.024 23.8364 cv
114.04 24.1182 114.055 24.4009 114.071 24.6826 cv
114.063 24.6826 114.051 24.6826 114.042 24.6826 cv
114.042 24.6729 114.042 24.6636 114.042 24.6528 cv
113.671 24.6514 113.245 23.5176 113.096 23.2578 cv
113.012 23.1128 112.884 23.021 112.785 22.8833 cv
112.575 22.5903 112.198 21.8384 112.518 21.498 cv
cp
f
110.158 21.7197 mo
110.159 21.7139 110.161 21.708 110.163 21.7007 cv
110.223 21.5239 110.684 21.52 110.849 21.4263 cv
111.022 21.4268 111.245 21.396 111.385 21.4653 cv
111.8 21.6694 111.94 22.2744 112.106 22.6553 cv
112.213 22.9019 112.358 23.1416 112.477 23.3882 cv
112.555 23.52 112.631 23.6494 112.709 23.7798 cv
112.762 23.9116 112.781 24.0562 112.786 24.2085 cv
112.788 24.3169 112.806 24.522 112.704 24.5757 cv
112.622 24.6196 112.497 24.5991 112.417 24.5664 cv
112.265 24.5078 110.167 21.9033 110.157 21.7676 cv
110.157 21.7603 110.157 21.7524 110.157 21.7432 cv
110.157 21.7368 110.158 21.728 110.158 21.7197 cv
cp
f
109.014 21.4453 mo
109.231 21.481 109.36 21.5439 109.519 21.7007 cv
109.75 21.9253 109.948 22.1914 110.133 22.4517 cv
110.229 22.585 110.282 22.7339 110.395 22.8638 cv
110.54 23.0195 110.688 23.1748 110.833 23.3286 cv
110.962 23.4932 111.09 23.6548 111.218 23.8184 cv
111.266 23.8892 111.31 23.959 111.358 24.0288 cv
111.451 24.1113 111.545 24.1929 111.638 24.2729 cv
111.833 24.4604 112.012 24.6953 112.114 24.9341 cv
112.067 24.9331 112.069 24.9839 112.057 25.02 cv
111.897 25.02 111.703 24.9619 111.588 24.8726 cv
111.401 24.6826 111.214 24.4902 111.026 24.2983 cv
110.905 24.1787 110.764 24.1309 110.662 23.9932 cv
110.459 23.7246 110.309 23.4038 110.063 23.1636 cv
109.92 23.0239 109.717 22.9971 109.574 22.8608 cv
109.57 22.8564 109.565 22.8511 109.561 22.8467 cv
109.409 22.6899 109.354 22.4761 109.225 22.3057 cv
109.079 22.1128 108.864 21.9795 108.724 21.7886 cv
108.719 21.7759 108.711 21.7627 108.706 21.751 cv
108.704 21.7427 108.701 21.7358 108.699 21.729 cv
108.673 21.563 108.907 21.4971 109.014 21.4453 cv
cp
f
115.543 27.5195 mo
115.626 27.5303 115.709 27.5405 115.792 27.5503 cv
116.042 27.6416 116.261 28.0112 116.167 28.2783 cv
116.115 28.4209 115.957 28.5464 115.835 28.6401 cv
115.751 28.7056 115.626 28.8042 115.506 28.7949 cv
115.337 28.7778 115.409 28.418 115.451 28.3213 cv
115.51 28.1885 115.66 28.1523 115.669 27.9868 cv
115.685 27.791 115.542 27.7041 115.543 27.5195 cv
cp
f
115.953 26.3228 mo
115.855 26.3823 115.74 26.5415 115.609 26.5259 cv
115.432 26.5044 115.358 26.2715 115.241 26.1631 cv
115.112 26.0386 114.841 25.978 114.878 25.7412 cv
114.891 25.6455 114.976 25.5952 115.059 25.564 cv
115.059 25.5552 115.059 25.5444 115.059 25.5356 cv
115.254 25.5732 115.389 25.6729 115.565 25.7471 cv
115.768 25.8311 115.972 25.8779 116.184 25.958 cv
116.228 25.9736 116.247 26.0249 116.23 26.0732 cv
116.188 26.1973 116.052 26.2593 115.953 26.3228 cv
cp
f
115.573 29.9331 mo
115.534 30.1465 115.049 30.2358 114.881 30.1323 cv
114.633 29.9785 115.108 29.6709 115.21 29.5903 cv
115.334 29.623 115.603 29.7642 115.573 29.9331 cv
cp
f
114.302 29.7485 mo
114.22 29.7651 114.176 29.689 114.122 29.6538 cv
114.055 29.6104 113.977 29.5986 113.917 29.5322 cv
113.768 29.3682 113.811 29.1929 113.803 28.9688 cv
113.796 28.8535 113.776 28.7104 113.819 28.605 cv
113.855 28.5112 113.948 28.4678 114.022 28.4165 cv
114.116 28.4209 114.194 28.4272 114.266 28.4717 cv
114.35 28.5244 114.939 29.0933 114.951 29.1558 cv
114.989 29.376 114.479 29.7114 114.302 29.7485 cv
cp
f
117.728 27.8809 mo
117.728 28.0923 117.619 28.3213 117.434 28.4053 cv
117.434 28.4507 117.332 28.3872 117.288 28.374 cv
117.289 28.1626 117.563 28.0093 117.701 27.8809 cv
117.709 27.8809 117.718 27.8809 117.728 27.8809 cv
cp
f
117.18 27.5049 mo
117.108 27.5576 117.041 27.6196 116.943 27.6187 cv
116.839 27.6172 116.798 27.5522 116.768 27.4683 cv
116.744 27.3936 116.754 26.4512 116.777 26.3696 cv
116.81 26.2676 116.967 26.1816 117.038 26.0991 cv
117.258 26.168 117.247 26.3008 117.322 26.4995 cv
117.459 26.8643 117.556 27.2266 117.18 27.5049 cv
cp
f
116.818 29.1909 mo
116.846 29.1909 116.835 29.1987 116.817 29.2192 cv
116.817 29.3525 116.439 29.5903 116.322 29.4756 cv
116.155 29.3149 116.361 29.147 116.467 29.042 cv
116.623 29.0527 116.736 29.0615 116.818 29.1909 cv
cp
f
114.15 26.1118 mo
114.254 26.1226 114.355 26.1353 114.458 26.1465 cv
114.639 26.2061 115.221 26.6748 115.159 26.9058 cv
115.104 27.1104 114.911 27.2305 114.762 27.3794 cv
114.608 27.5288 114.422 27.7061 114.202 27.7319 cv
113.983 27.7598 113.671 26.7852 113.711 26.6128 cv
113.732 26.5356 114.074 26.1855 114.149 26.1421 cv
114.149 26.1318 114.149 26.1226 114.15 26.1118 cv
cp
f
113.471 28.4775 mo
113.358 28.5747 113.209 28.7461 113.053 28.7563 cv
112.931 28.7651 112.873 28.6792 112.794 28.6118 cv
112.602 28.4443 112.463 28.1016 112.53 27.8301 cv
112.575 27.748 112.616 27.666 112.661 27.5825 cv
112.739 27.3477 112.707 27.3066 112.891 27.1255 cv
113.141 27.2427 113.862 27.7754 113.788 28.1143 cv
113.757 28.2563 113.574 28.3867 113.471 28.4775 cv
cp
f
113.602 30.0762 mo
113.592 30.0762 113.584 30.0762 113.574 30.0762 cv
113.574 30.1274 113.467 30.0962 113.43 30.0869 cv
112.99 29.9946 112.514 29.8809 112.879 29.3428 cv
112.95 29.3525 113.01 29.3545 113.061 29.3975 cv
113.165 29.4746 113.196 29.5889 113.27 29.6841 cv
113.381 29.8267 113.55 29.8979 113.602 30.0762 cv
cp
f
111.583 26.3613 mo
111.584 26.3613 111.795 26.1074 111.875 26.0698 cv
111.875 26.061 111.875 26.0508 111.875 26.0405 cv
112.242 26.2793 112.54 26.7061 112.161 27.0938 cv
112.084 27.1699 111.963 27.2734 111.86 27.2891 cv
111.519 27.3398 111.663 26.9209 111.658 26.7412 cv
111.655 26.605 111.615 26.481 111.583 26.3613 cv
cp
f
112.256 25.811 mo
112.256 25.7822 112.256 25.7524 112.256 25.7236 cv
112.315 25.708 112.374 25.6899 112.434 25.6763 cv
112.798 25.6235 113.032 25.5688 113.336 25.4077 cv
113.431 25.4341 113.581 25.4341 113.639 25.5278 cv
113.804 25.7837 113.036 26.3076 112.81 26.2837 cv
112.561 26.2559 112.43 25.958 112.256 25.811 cv
cp
f
111.805 28.229 mo
111.859 28.2446 111.915 28.2622 111.969 28.2773 cv
112.108 28.3613 112.619 28.8467 112.633 28.9985 cv
112.65 29.1611 112.219 29.4639 112.083 29.4932 cv
111.965 29.5166 111.934 29.3999 111.898 29.3149 cv
111.763 28.9805 111.666 28.6133 111.805 28.229 cv
cp
f
111.209 27.9219 mo
110.926 27.9927 110.987 27.4429 110.995 27.2617 cv
111.203 27.333 111.628 27.8149 111.209 27.9219 cv
cp
f
114.818 58.2607 mo
114.818 58.1787 115.451 57.2568 115.544 57.1445 cv
115.592 57.0859 115.663 57.0391 115.728 57.0117 cv
115.728 57.0039 115.728 56.9922 115.728 56.9805 cv
115.875 56.9824 116.022 56.9834 116.167 56.9834 cv
116.164 57.1641 115.474 58.1816 115.295 58.2588 cv
115.168 58.3154 114.995 58.2881 114.845 58.292 cv
114.845 58.2813 114.845 58.2725 114.845 58.2607 cv
114.836 58.2607 114.826 58.2607 114.818 58.2607 cv
cp
f
110.37 58.1738 mo
110.208 58.2432 109.961 58.2002 109.771 58.2041 cv
109.774 57.9414 110.842 57.1719 111.059 56.957 cv
111.206 56.957 111.352 56.957 111.499 56.957 cv
111.499 57.1719 110.581 58.084 110.37 58.1738 cv
cp
f
118.328 63.9307 mo
118.14 64.0127 117.886 63.8506 117.784 63.7158 cv
117.669 63.5635 117.63 63.3877 117.572 63.21 cv
117.48 62.9326 117.388 62.6436 117.28 62.3691 cv
117.209 62.1846 117.068 61.9365 117.093 61.7197 cv
117.111 61.583 117.24 61.5283 117.335 61.458 cv
117.419 61.4795 117.48 61.5049 117.53 61.5791 cv
117.585 61.665 117.605 61.7607 117.638 61.8604 cv
117.73 62.1328 117.821 62.3975 117.898 62.6787 cv
117.989 62.9951 118.125 63.3203 118.259 63.6182 cv
118.281 63.6689 118.426 63.8877 118.328 63.9307 cv
cp
f
117.347 56.9453 mo
117.489 57.1416 118.322 58.0645 118.273 58.2393 cv
118.259 58.2813 118.207 58.2881 118.167 58.2959 cv
117.916 58.2998 117.664 58.3037 117.413 58.3047 cv
116.967 58.3037 116.518 58.2998 116.072 58.2979 cv
116.072 58.2881 116.072 58.2803 116.072 58.2686 cv
116.063 58.2686 116.051 58.2686 116.042 58.2686 cv
116.042 58.1699 116.122 58.083 116.16 58.0059 cv
116.301 57.7432 116.85 57 116.814 56.7295 cv
116.802 56.6396 116.736 56.5713 116.655 56.5439 cv
116.302 56.4229 115.879 56.5264 115.498 56.5127 cv
115.295 56.5029 114.832 56.4014 114.653 56.4814 cv
114.27 56.4795 112.936 56.292 112.78 56.6279 cv
112.739 56.708 112.793 56.8018 112.827 56.8701 cv
112.983 57.1787 113.222 57.4619 113.429 57.7412 cv
113.542 57.9141 113.655 58.0859 113.767 58.2549 cv
113.766 58.2666 113.766 58.2744 113.766 58.2842 cv
113.738 58.2959 113.708 58.3037 113.679 58.3154 cv
112.858 58.3096 112.043 58.2764 111.229 58.2725 cv
111.229 58.252 111.229 58.2324 111.229 58.2139 cv
111.256 58.2139 112.422 56.8037 112.551 56.6436 cv
112.551 56.6064 112.542 56.6064 112.52 56.585 cv
112.377 56.5693 112.228 56.5479 112.084 56.5303 cv
111.84 56.5186 111.599 56.5068 111.354 56.4932 cv
110.658 56.4775 109.922 56.5186 109.256 56.4521 cv
109.256 56.3701 110.25 55.4111 110.383 55.2744 cv
111.229 54.3857 112.11 53.5322 112.992 52.6636 cv
113.296 52.3511 113.599 52.042 113.902 51.7319 cv
114 51.6387 114.089 51.5347 114.213 51.4917 cv
114.213 51.4741 114.213 51.4526 114.214 51.4331 cv
114.411 51.5327 114.583 51.7319 114.743 51.8965 cv
115.006 52.167 115.27 52.4409 115.532 52.7104 cv
115.697 52.8652 115.864 53.0181 116.031 53.1743 cv
116.78 53.9561 117.581 54.6943 118.346 55.4697 cv
118.66 55.7861 119.072 56.1123 119.317 56.4795 cv
119.259 56.4873 119.201 56.4971 119.143 56.5068 cv
118.902 56.5068 118.659 56.5029 118.414 56.501 cv
118.322 56.499 118.207 56.4717 118.125 56.501 cv
117.791 56.499 117.398 56.4561 117.13 56.5811 cv
117.129 56.708 117.28 56.8467 117.347 56.9453 cv
cp
f
109.089 60.2539 mo
109.208 60.0498 111.456 60.2246 111.831 60.2266 cv
112.411 60.2305 112.926 60.1484 113.495 60.1504 cv
114.252 60.1543 115.057 60.2119 115.828 60.2148 cv
116.218 60.2168 116.648 60.2031 117.052 60.1914 cv
117.972 60.166 118.927 60.21 119.822 60.2148 cv
119.824 60.2051 119.824 60.1943 119.824 60.1865 cv
119.872 60.1865 119.876 59.9268 119.876 59.8652 cv
119.879 59.2822 119.89 58.6729 119.894 58.0566 cv
119.897 57.6357 119.883 57.207 119.957 56.832 cv
120.434 57.083 120.376 57.6807 120.39 58.2051 cv
120.398 58.5303 120.421 58.9053 120.41 59.2539 cv
120.39 59.4424 120.375 59.626 120.355 59.8096 cv
120.342 60.0869 120.421 60.4014 120.317 60.6553 cv
120.317 60.6748 120.317 60.6943 120.317 60.7139 cv
120.309 60.7139 120.296 60.7139 120.288 60.7139 cv
120.288 60.6592 120.108 60.6826 120.055 60.6826 cv
119.593 60.6807 119.159 60.7061 118.684 60.7021 cv
118.476 60.7021 118.188 60.6592 118.011 60.7295 cv
117.838 60.7295 117.608 60.6943 117.457 60.7549 cv
116.921 60.7529 116.414 60.749 115.883 60.7139 cv
115.647 60.6963 115.325 60.5889 115.096 60.6826 cv
114.705 60.6826 114.32 60.6514 113.929 60.6631 cv
113.843 60.667 113.737 60.6396 113.667 60.6748 cv
113.446 60.6748 112.956 60.5889 112.792 60.6709 cv
112.662 60.6709 112.516 60.6553 112.411 60.6982 cv
112.042 60.6943 111.671 60.6904 111.303 60.6865 cv
111.083 60.6748 110.836 60.667 110.603 60.6553 cv
110.525 60.6553 110.446 60.6572 110.368 60.6572 cv
110.282 60.667 110.195 60.6748 110.106 60.6865 cv
109.674 60.6826 109.329 60.7861 109.122 60.417 cv
109.102 60.3818 109.063 60.2998 109.089 60.2539 cv
cp
f
120.21 67.5391 mo
120.125 67.6611 119.864 67.6934 119.722 67.7119 cv
119.726 66.9834 119.685 66.2041 119.713 65.4619 cv
119.721 65.249 119.684 65.001 119.726 64.7998 cv
119.743 64.7295 119.78 64.6982 119.826 64.6494 cv
119.976 64.6514 120.118 64.6494 120.234 64.71 cv
120.277 64.71 120.288 65.0225 120.277 65.0869 cv
120.254 65.2451 120.289 65.4063 120.289 65.585 cv
120.288 65.8467 120.247 66.0791 120.259 66.3418 cv
120.277 66.6113 120.355 67.333 120.21 67.5391 cv
cp
f
128.976 66.5957 mo
128.879 66.5957 128.759 66.6094 128.684 66.6553 cv
128.539 66.6533 128.244 66.7295 128.129 66.7959 cv
127.864 66.7959 127.636 66.9053 127.397 66.9521 cv
127.233 66.9834 127.056 67.0146 126.902 67.042 cv
126.785 67.0576 126.651 67.0537 126.551 67.1084 cv
126.484 67.1162 126.416 67.126 126.347 67.1357 cv
126.28 67.1436 126.21 67.1553 126.143 67.1631 cv
125.968 67.1611 125.751 67.1357 125.618 67.2178 cv
125.548 67.2275 125.483 67.2373 125.413 67.2451 cv
125.129 67.2451 124.788 67.2021 124.567 67.3311 cv
124.46 67.3311 124.335 67.3193 124.247 67.3564 cv
124.114 67.3564 124.011 67.3252 123.897 67.2959 cv
123.897 67.3564 123.546 67.4053 123.489 67.4404 cv
123.292 67.4395 123.042 67.4043 122.875 67.4648 cv
122.809 67.4766 122.74 67.4844 122.671 67.4941 cv
122.476 67.4912 122.243 67.4727 122.085 67.5488 cv
121.957 67.5469 121.81 67.5547 121.707 67.6055 cv
121.518 67.6055 121.034 67.6553 120.919 67.5625 cv
120.73 67.4141 120.835 65.5586 120.843 65.21 cv
120.838 65.0322 120.828 64.8584 120.822 64.6826 cv
120.814 64.499 120.876 63.8779 120.56 63.9814 cv
120.379 63.9814 119.997 63.9385 119.864 64.0068 cv
119.669 64.0049 119.159 64.0439 119.046 63.9404 cv
118.846 63.751 118.736 63.0576 118.633 62.7803 cv
118.475 62.374 118.218 61.9639 118.164 61.5166 cv
118.156 61.4697 118.144 61.3916 118.176 61.3555 cv
118.259 61.2559 118.647 61.2734 118.794 61.2734 cv
119.138 61.2783 120.703 61.2813 120.831 61.0615 cv
120.909 60.917 120.876 60.4619 120.865 60.2803 cv
120.875 59.9971 120.888 59.7158 120.898 59.4326 cv
120.914 58.998 120.814 58.4912 120.946 58.0918 cv
121.939 59.1641 123.067 60.1465 124.089 61.2148 cv
124.185 61.3359 124.28 61.4531 124.375 61.5732 cv
124.63 61.8291 124.916 62.0576 125.18 62.3164 cv
125.886 63.0107 126.541 63.7627 127.233 64.459 cv
127.761 64.9951 128.317 65.5195 128.846 66.0557 cv
128.946 66.1533 129.115 66.2666 129.16 66.4004 cv
129.199 66.502 129.03 66.5547 128.976 66.5957 cv
cp
f
127.048 38.8916 mo
127.21 38.7026 127.372 38.5117 127.534 38.3218 cv
127.721 38.1255 127.939 37.9722 128.133 37.7881 cv
128.388 37.5269 128.64 37.2656 128.897 37.0049 cv
129.185 36.73 129.475 36.4536 129.759 36.1768 cv
130.324 35.5928 130.884 35.0083 131.449 34.4233 cv
132.314 33.5967 133.197 32.7803 133.993 31.8911 cv
134.197 31.6616 134.5 31.4707 134.659 31.2153 cv
134.801 31.4131 134.699 31.9326 134.714 32.2065 cv
134.751 32.8511 134.721 33.5498 134.728 34.2197 cv
134.744 34.5596 134.758 34.8999 134.773 35.2383 cv
134.754 35.5894 134.739 35.9399 134.718 36.2891 cv
134.734 36.4932 134.748 36.7002 134.765 36.9028 cv
134.759 37.0015 134.754 37.0962 134.75 37.1938 cv
134.761 37.3115 134.773 37.4277 134.784 37.5464 cv
134.772 37.6431 134.758 37.7378 134.743 37.8359 cv
134.697 38.3745 134.693 38.9141 134.701 39.4707 cv
134.726 39.7515 134.751 40.0342 134.777 40.3169 cv
134.761 40.4727 134.744 40.6265 134.725 40.7827 cv
134.722 41.1323 134.718 41.4834 134.714 41.8335 cv
134.707 41.9512 134.701 42.0654 134.696 42.1826 cv
134.701 42.4072 134.755 42.6377 134.751 42.8525 cv
134.744 43.1621 134.669 43.4878 134.673 43.8164 cv
134.701 44.2158 134.726 44.6143 134.754 45.0132 cv
134.736 45.2573 134.717 45.4985 134.697 45.7407 cv
134.71 45.8311 134.718 45.917 134.73 46.0073 cv
134.736 46.2695 134.71 46.5352 134.701 46.79 cv
134.713 46.9756 134.728 47.1621 134.74 47.3481 cv
134.74 47.4907 134.703 47.6235 134.693 47.7549 cv
134.673 48.0337 134.692 48.3159 134.725 48.5742 cv
134.776 48.9775 134.759 49.5054 134.718 49.9126 cv
134.706 50.0107 134.689 50.1084 134.673 50.2061 cv
134.66 50.4507 134.722 50.668 134.718 50.9067 cv
134.701 51.0439 134.684 51.1768 134.666 51.3135 cv
134.671 51.458 134.68 51.603 134.685 51.75 cv
134.677 51.9453 134.666 52.1392 134.656 52.335 cv
134.655 52.519 134.769 53.5674 134.596 53.5674 cv
134.483 53.5654 133.551 52.5498 133.394 52.3936 cv
132.234 51.2178 131.055 50.0225 129.901 48.854 cv
129.717 48.6685 129.56 48.4487 129.379 48.2725 cv
129.214 48.1162 129.051 47.9561 128.884 47.7998 cv
128.802 47.7017 128.714 47.6001 128.633 47.5024 cv
127.513 46.4023 126.383 45.2871 125.263 44.1904 cv
125.063 43.9937 123.608 42.5381 123.603 42.4414 cv
123.609 42.415 123.614 42.3872 123.615 42.3608 cv
123.728 42.0859 124.185 41.7798 124.414 41.5625 cv
124.66 41.3257 124.843 41.062 125.076 40.8257 cv
125.285 40.6104 125.513 40.4028 125.725 40.1919 cv
125.802 40.1255 125.883 40.0586 125.963 39.9912 cv
126.144 39.8047 126.324 39.6152 126.508 39.4287 cv
126.688 39.2485 126.868 39.0713 127.048 38.8916 cv
cp
f
120.342 22.6396 mo
120.438 22.5703 120.541 22.5483 120.625 22.4551 cv
120.685 22.3657 120.744 22.2769 120.802 22.188 cv
120.959 21.9585 121.123 21.7651 121.313 21.564 cv
121.38 21.502 121.451 21.4399 121.519 21.377 cv
121.647 21.3091 121.865 21.3418 122.023 21.3428 cv
122.358 21.3442 122.685 21.3286 122.986 21.2974 cv
123.134 21.2808 123.269 21.29 123.394 21.2349 cv
123.619 21.2388 123.842 21.2422 124.064 21.2466 cv
124.317 21.2754 124.584 21.3364 124.853 21.3374 cv
125.089 21.3398 125.294 21.2515 125.523 21.2573 cv
125.601 21.2725 125.68 21.2832 125.759 21.2959 cv
126.038 21.3281 126.39 21.3281 126.633 21.2539 cv
126.633 21.2622 126.633 21.2725 126.633 21.2822 cv
126.643 21.2822 126.651 21.2822 126.664 21.2822 cv
126.664 21.3208 126.671 21.3115 126.633 21.3115 cv
126.629 21.3271 126.623 21.3418 126.619 21.3584 cv
126.335 21.7344 125.921 22.0215 125.592 22.3389 cv
124.967 22.9502 124.343 23.5645 123.721 24.1763 cv
123.581 24.3198 123.416 24.4321 123.277 24.5757 cv
122.717 25.1484 122.21 25.7686 121.636 26.3184 cv
121.427 26.52 121.218 26.7217 121.013 26.9209 cv
120.897 27.02 120.784 27.1187 120.667 27.2188 cv
120.538 27.3726 120.41 27.5249 120.281 27.6777 cv
119.935 28.0454 119.567 28.4019 119.193 28.749 cv
119.019 28.9531 118.846 29.1587 118.671 29.3643 cv
118.285 29.7378 117.901 30.1104 117.518 30.4844 cv
116.859 31.1289 116.21 31.7935 115.551 32.4307 cv
115.333 32.6367 115.141 32.895 114.901 33.0586 cv
114.901 33.0693 114.901 33.0776 114.901 33.0889 cv
114.889 33.0889 114.879 33.0889 114.87 33.0889 cv
114.87 33.0801 114.87 33.0693 114.87 33.0586 cv
114.861 33.0586 114.851 33.0586 114.839 33.0586 cv
114.849 32.9712 114.858 32.8848 114.867 32.7964 cv
114.872 32.5942 114.833 32.3911 114.853 32.1836 cv
114.877 32.0762 114.904 31.9707 114.926 31.8618 cv
114.94 31.6616 114.869 31.4951 114.962 31.3218 cv
115.021 31.2139 115.157 31.1699 115.243 31.0874 cv
115.411 30.9194 115.508 30.7061 115.713 30.5723 cv
115.926 30.4307 116.193 30.3896 116.421 30.2778 cv
116.568 30.2036 116.684 30.0796 116.822 29.9932 cv
117.133 29.7905 117.494 29.6167 117.726 29.2959 cv
117.789 29.1675 117.853 29.041 117.917 28.9141 cv
117.994 28.8032 118.074 28.6919 118.151 28.5806 cv
118.21 28.4287 118.203 28.2563 118.247 28.0962 cv
118.306 27.877 118.417 27.6777 118.421 27.4194 cv
118.394 27.1948 118.369 26.9731 118.342 26.7485 cv
118.31 26.4604 118.148 26.2007 117.976 25.9829 cv
117.905 25.8916 117.814 25.8027 117.769 25.6943 cv
117.713 25.6943 117.769 25.6187 117.785 25.5864 cv
117.834 25.521 117.879 25.4556 117.926 25.3906 cv
118.125 25.0898 118.332 24.7627 118.63 24.542 cv
118.781 24.4292 118.802 24.2671 118.917 24.1294 cv
119.056 23.9668 119.261 23.8813 119.406 23.7119 cv
119.478 23.6143 119.555 23.5137 119.626 23.418 cv
119.688 23.3052 119.717 23.1875 119.809 23.0913 cv
119.902 22.9917 120.008 22.9463 120.108 22.8628 cv
120.185 22.7891 120.263 22.7139 120.342 22.6396 cv
cp
f
103.442 21.356 mo
103.729 21.3584 104.086 21.3999 104.346 21.3301 cv
104.555 21.3726 104.79 21.3599 105.016 21.3652 cv
105.194 21.3755 105.367 21.3867 105.543 21.3955 cv
105.786 21.3955 106.027 21.3955 106.27 21.3945 cv
106.378 21.415 106.485 21.4316 106.59 21.4526 cv
106.813 21.4536 107.075 21.3037 107.292 21.377 cv
107.551 21.4658 107.772 21.7549 107.969 21.9546 cv
108.284 22.2651 108.596 22.5728 108.907 22.8833 cv
109.113 23.1064 109.309 23.3633 109.52 23.582 cv
109.782 23.853 110.067 24.0454 110.329 24.3198 cv
110.486 24.4824 110.581 24.6636 110.732 24.8237 cv
110.819 24.8906 110.907 24.9604 110.995 25.0269 cv
111.165 25.1675 111.319 25.3555 111.413 25.5435 cv
111.319 25.5435 111.182 25.7432 111.12 25.8066 cv
110.879 26.0601 110.689 26.3164 110.609 26.6509 cv
110.588 26.7852 110.569 26.9194 110.548 27.0542 cv
110.504 27.2695 110.448 27.481 110.474 27.7231 cv
110.512 27.8804 110.549 28.0347 110.588 28.1904 cv
110.656 28.3506 110.721 28.5112 110.79 28.6704 cv
110.872 28.8486 110.91 29.0356 111.03 29.2007 cv
111.122 29.3213 111.276 29.3652 111.389 29.4512 cv
111.502 29.5322 111.549 29.6709 111.664 29.7568 cv
111.772 29.8096 111.881 29.8589 111.989 29.9077 cv
112.14 30.0098 112.289 30.1094 112.438 30.21 cv
112.638 30.3354 112.881 30.4229 113.057 30.5894 cv
113.172 30.7476 113.286 30.9038 113.401 31.0615 cv
113.504 31.1895 113.673 31.2798 113.749 31.4302 cv
113.798 31.5342 113.837 31.6763 113.843 31.7993 cv
113.849 31.9141 113.82 32.041 113.846 32.1504 cv
113.907 32.4092 114.012 32.7769 113.965 33.0537 cv
113.731 33.0518 113.243 32.4624 113.067 32.2896 cv
112.704 31.9502 112.34 31.6123 111.981 31.2739 cv
111.716 30.9941 111.454 30.7124 111.19 30.4312 cv
110.669 29.8887 110.107 29.3828 109.592 28.8486 cv
109.319 28.5605 109.038 28.2788 108.76 27.9893 cv
108.646 27.855 108.527 27.7188 108.411 27.5835 cv
107.457 26.6509 106.511 25.7241 105.565 24.7959 cv
105.313 24.5229 105.061 24.2495 104.808 23.9775 cv
104.264 23.4272 103.76 22.8818 103.192 22.3579 cv
102.912 22.0972 102.316 21.7427 102.216 21.377 cv
102.62 21.3794 103.028 21.3535 103.442 21.356 cv
cp
f
97.2896 50.1021 mo
96.8618 50.4995 96.5161 50.9614 96.1001 51.3604 cv
95.4839 51.9634 94.8696 52.5615 94.2563 53.1646 cv
94.0522 53.374 93.7573 53.5908 93.605 53.8262 cv
93.5972 53.8262 93.5864 53.8262 93.5747 53.8262 cv
93.5747 53.8848 93.5083 53.7207 93.5024 53.6768 cv
93.4995 53.4658 93.4946 53.251 93.4927 53.0371 cv
93.5044 52.3955 93.5181 51.7539 93.5327 51.1138 cv
93.5356 50.582 93.5435 50.0732 93.5376 49.5679 cv
93.5317 49.3921 93.5229 49.2163 93.5161 49.0415 cv
93.5278 48.5625 93.5552 48.0317 93.5513 47.5259 cv
93.5435 47.3105 93.5356 47.0977 93.5278 46.8843 cv
93.5337 46.5728 93.5581 46.25 93.5591 45.9214 cv
93.5513 45.7256 93.5454 45.5327 93.5356 45.3369 cv
93.5396 44.7822 93.5415 44.2295 93.5435 43.6748 cv
93.5376 43.5098 93.5298 43.3442 93.52 43.1797 cv
93.5396 42.9746 93.5591 42.7676 93.5767 42.5659 cv
93.5923 42.106 93.5454 41.6709 93.563 41.2236 cv
93.5806 40.8843 93.5981 40.5439 93.6138 40.2041 cv
93.605 39.4717 93.5708 38.7466 93.5903 38.0156 cv
93.6118 37.6665 93.6333 37.3149 93.6567 36.9653 cv
93.644 36.7798 93.6294 36.5952 93.6138 36.4111 cv
93.6089 35.668 93.6333 34.9097 93.6255 34.1953 cv
93.6177 34.0386 93.6099 33.8833 93.6021 33.7275 cv
93.6138 33.5435 93.6255 33.3589 93.6392 33.1748 cv
93.6401 32.9575 93.5981 32.7524 93.6118 32.5298 cv
93.6274 32.4048 93.645 32.2798 93.6587 32.1533 cv
93.6548 31.8062 93.6431 31.4502 93.645 31.103 cv
93.9438 31.2114 94.1821 31.541 94.4097 31.7656 cv
94.9155 32.2554 95.4175 32.7451 95.9194 33.2344 cv
96.0942 33.4204 96.2661 33.6055 96.4399 33.7905 cv
96.8188 34.1484 97.1978 34.5132 97.5396 34.9067 cv
97.6548 35.0405 97.7622 35.1777 97.8979 35.3057 cv
98.146 35.5415 98.4126 35.7578 98.6538 36.0112 cv
98.7583 36.1216 98.811 36.2427 98.9243 36.3496 cv
99.5073 36.9033 100.124 37.4209 100.711 37.9795 cv
101.272 38.5571 101.833 39.1353 102.389 39.7144 cv
102.745 40.0513 104.985 42.1523 104.851 42.4766 cv
104.811 42.5381 104.771 42.5986 104.727 42.6611 cv
104.465 43.1104 103.851 43.6162 103.45 43.98 cv
103.309 44.1045 103.223 44.2729 103.088 44.4106 cv
102.758 44.7471 102.43 45.0664 102.099 45.4009 cv
101.641 45.8545 101.175 46.3066 100.713 46.7588 cv
100.411 47.0679 100.108 47.377 99.8052 47.686 cv
99.729 47.7764 99.6519 47.8643 99.5747 47.9517 cv
98.811 48.6602 98.0532 49.394 97.2896 50.1021 cv
cp
f
109.68 64.0088 mo
109.428 64.0088 108.587 63.9521 108.438 64.0518 cv
108.382 64.0908 108.375 64.166 108.372 64.2334 cv
108.366 65.0127 108.36 65.792 108.354 66.5693 cv
108.358 66.9053 108.398 67.3955 108.328 67.7305 cv
108.31 67.8135 108.264 67.8857 108.2 67.9385 cv
108.2 67.9482 108.2 67.958 108.2 67.9697 cv
107.96 67.9658 107.749 67.8643 107.526 67.8291 cv
107.314 67.7979 107.092 67.8486 106.887 67.8486 cv
106.733 67.8252 106.577 67.8057 106.418 67.7861 cv
106.119 67.7588 105.817 67.7285 105.515 67.7002 cv
105.398 67.6885 105.211 67.6729 105.108 67.7168 cv
104.413 67.7139 103.764 67.5742 103.096 67.5098 cv
102.786 67.4766 102.484 67.4795 102.197 67.4287 cv
101.952 67.3877 101.708 67.3486 101.465 67.3076 cv
101.36 67.2842 101.25 67.2588 101.141 67.2354 cv
100.989 67.2275 100.834 67.2217 100.679 67.2119 cv
100.329 67.1494 99.9771 67.0869 99.6255 67.0244 cv
99.356 66.9873 99.0151 66.9834 98.7837 66.8662 cv
98.7739 66.8662 98.7642 66.8662 98.7524 66.8662 cv
98.7524 66.8467 98.7524 66.8271 98.7524 66.8076 cv
98.7974 66.8076 98.7739 66.8193 98.7954 66.7861 cv
98.9517 66.5371 99.2524 66.2715 99.4751 66.0674 cv
99.6802 65.8643 99.8833 65.6602 100.086 65.4531 cv
100.399 65.1436 100.736 64.8662 101.053 64.5537 cv
101.21 64.4004 101.368 64.2451 101.524 64.0928 cv
101.653 63.9502 101.782 63.8057 101.911 63.6631 cv
102.713 62.8936 103.534 62.1465 104.318 61.3438 cv
104.801 60.8506 105.249 60.3311 105.746 59.8545 cv
106.435 59.1924 107.116 58.5439 107.772 57.8525 cv
107.961 57.6572 108.155 57.46 108.346 57.2627 cv
108.471 57.4385 108.396 58.1113 108.375 58.3428 cv
108.344 58.7119 108.336 59.0859 108.334 59.4795 cv
108.333 59.7275 108.301 59.9854 108.379 60.2012 cv
108.453 60.4082 108.599 60.5889 108.724 60.7725 cv
108.793 60.8799 108.829 61.0186 108.954 61.0898 cv
109.131 61.1875 109.694 61.2109 109.928 61.2012 cv
110.34 61.1855 110.767 61.1553 111.213 61.1592 cv
111.211 61.4414 111.03 61.79 110.934 62.041 cv
110.76 62.4854 110.583 62.9248 110.418 63.373 cv
110.354 63.54 110.297 63.7646 110.178 63.9033 cv
110.09 63.9971 109.969 63.9346 109.856 63.9795 cv
109.795 63.9912 109.739 63.9971 109.68 64.0088 cv
cp
f
111.665 69.2021 mo
111.362 69.1709 111.083 68.9561 110.811 68.8428 cv
110.595 68.752 110.348 68.7129 110.15 68.5918 cv
110.141 68.5918 110.13 68.5918 110.122 68.5918 cv
110.122 68.5801 110.122 68.5723 110.122 68.5615 cv
110.131 68.5615 110.141 68.5615 110.151 68.5615 cv
110.151 68.5205 110.141 68.5332 110.18 68.5332 cv
110.607 68.5352 112.622 68.6113 112.805 68.4307 cv
112.896 68.3408 112.894 67.9697 112.895 67.8193 cv
112.901 66.8779 112.79 65.6133 113.655 65.1318 cv
113.781 65.0596 113.914 65.0459 114.049 64.9951 cv
114.29 64.9951 114.88 65.083 114.851 65.4043 cv
114.845 65.4805 114.755 65.4805 114.686 65.4902 cv
114.116 65.5586 114.004 65.8701 113.768 66.3135 cv
113.576 66.6748 113.606 67.292 113.596 67.7656 cv
113.584 68.2275 113.562 68.668 113.559 69.1357 cv
113.549 69.1357 113.54 69.1357 113.532 69.1357 cv
113.532 69.1885 113.246 69.1357 113.18 69.1631 cv
113.022 69.1611 112.883 69.2061 112.743 69.2139 cv
112.381 69.21 112.023 69.2061 111.665 69.2021 cv
cp
f
114.944 69.8018 mo
114.843 69.9248 114.739 70.0439 114.638 70.1689 cv
114.383 70.4268 114.122 70.665 113.958 70.9746 cv
113.948 70.9746 113.94 70.9746 113.929 70.9746 cv
113.75 70.7764 113.569 70.5771 113.389 70.3779 cv
113.213 70.2217 112.857 70.0186 112.652 69.916 cv
112.652 69.9072 112.652 69.8994 112.652 69.8877 cv
112.642 69.8877 112.631 69.8877 112.624 69.8877 cv
112.624 69.8789 112.624 69.8691 112.624 69.8604 cv
112.631 69.8604 112.642 69.8604 112.652 69.8604 cv
112.653 69.8086 112.699 69.8271 112.738 69.8203 cv
112.845 69.7969 112.954 69.7734 113.061 69.7539 cv
113.403 69.7422 113.743 69.7305 114.083 69.7227 cv
114.098 69.6641 114.114 69.6045 114.129 69.5459 cv
114.143 69.3994 114.155 69.2549 114.168 69.1084 cv
114.155 68.9756 114.139 68.8389 114.125 68.7012 cv
114.133 68.5645 114.139 68.4287 114.143 68.292 cv
114.141 68.001 114.106 67.6846 114.129 67.3877 cv
114.165 67.2217 114.2 67.0557 114.235 66.8916 cv
114.272 66.6904 114.327 66.4434 114.465 66.2949 cv
114.604 66.1377 114.799 66.1533 114.979 66.0791 cv
115.036 66.1064 115.102 66.1377 115.124 66.2061 cv
115.186 66.4004 115.139 66.6592 115.137 66.8701 cv
115.145 67.3721 115.149 67.8779 115.153 68.3838 cv
115.172 68.5039 115.25 68.6074 115.299 68.7129 cv
115.372 68.8779 115.442 69.04 115.514 69.2041 cv
115.542 69.2041 115.543 69.2021 115.533 69.2256 cv
115.405 69.4678 115.143 69.6338 114.944 69.8018 cv
cp
f
116.089 69.0068 mo
115.953 68.8916 115.855 68.627 115.839 68.4473 cv
115.984 68.4482 116.151 68.46 116.277 68.4219 cv
116.615 68.4238 116.947 68.4453 117.268 68.457 cv
117.268 68.4736 117.268 68.4961 117.268 68.5156 cv
117.16 68.5127 117.026 68.5996 116.938 68.6406 cv
116.667 68.7627 116.398 68.8818 116.129 69.0029 cv
116.129 69.04 116.114 69.0264 116.089 69.0068 cv
cp
f
105.997 45.0562 mo
106.001 44.7925 106.053 44.5161 106.055 44.2412 cv
106.037 43.9395 106.02 43.6396 106.004 43.3364 cv
105.999 42.8364 106.057 42.3589 106.067 41.8784 cv
106.051 41.5854 106.037 41.2935 106.022 41.002 cv
106.03 40.7788 106.04 40.5547 106.046 40.3325 cv
106.03 40.1089 106.012 39.8828 105.997 39.6597 cv
105.999 39.2954 106.104 38.9785 106.114 38.6113 cv
106.098 38.4072 106.083 38.2017 106.065 37.9966 cv
106.073 37.8809 106.079 37.7642 106.086 37.647 cv
106.102 37.2134 106.155 36.8032 106.157 36.3647 cv
106.159 36.0669 106.11 35.6118 106.188 35.3506 cv
106.266 35.0796 107.065 34.1738 107.339 34.0669 cv
107.339 34.0581 107.339 34.0479 107.339 34.0386 cv
107.398 34.2632 107.364 34.564 107.34 34.7964 cv
107.312 35.0767 107.293 35.3716 107.303 35.6704 cv
107.319 35.8643 107.335 36.0591 107.352 36.2549 cv
107.355 36.6235 107.356 36.9946 107.359 37.3618 cv
107.346 37.5283 107.332 37.6938 107.319 37.8594 cv
107.327 38.0552 107.334 38.249 107.34 38.4424 cv
107.331 38.959 107.302 39.5479 107.317 40.0776 cv
107.332 40.6523 107.253 41.2598 107.268 41.8257 cv
107.286 42.0391 107.303 42.2544 107.319 42.4688 cv
107.321 42.9058 107.326 43.3442 107.327 43.7803 cv
107.314 43.9863 107.295 44.1895 107.28 44.394 cv
107.28 44.7344 107.277 45.0737 107.276 45.4136 cv
107.272 45.8232 107.329 46.5493 107.211 46.8916 cv
107.173 47.0015 107.04 47.0718 106.977 47.1655 cv
106.883 47.2949 106.788 47.4258 106.694 47.5571 cv
106.6 47.6475 106.504 47.7368 106.411 47.8271 cv
106.314 48.0103 106.215 48.1982 106.121 48.3828 cv
106.11 48.3828 106.102 48.3828 106.092 48.3828 cv
106.092 48.3921 106.092 48.4019 106.092 48.4116 cv
106.083 48.4116 106.071 48.4116 106.062 48.4116 cv
106.065 47.8623 105.981 47.2695 105.974 46.7197 cv
105.969 46.3945 106.025 46.0425 106.043 45.729 cv
106.055 45.4888 105.993 45.2832 105.997 45.0562 cv
cp
f
106.546 48.6738 mo
106.69 48.3276 106.807 48.2217 107.088 47.9834 cv
107.242 47.8472 107.373 47.6782 107.542 47.5703 cv
108.29 47.0859 109.461 47.0894 110.383 47.2813 cv
110.562 47.332 110.738 47.3809 110.915 47.4321 cv
111.502 47.5435 112.034 47.6118 112.532 47.9058 cv
112.859 48.0972 113.127 48.3647 113.428 48.6094 cv
113.504 48.6602 113.584 48.7109 113.663 48.7578 cv
113.799 48.8638 113.946 49.0869 114.137 49.083 cv
114.411 49.0806 114.583 48.729 114.787 48.584 cv
115.012 48.4194 115.237 48.2412 115.489 48.1206 cv
116.176 47.7881 116.861 47.4438 117.622 47.2559 cv
117.894 47.1934 118.166 47.1284 118.442 47.064 cv
118.597 47.0366 118.765 47.0542 118.906 46.9976 cv
119.138 47.0015 119.369 47.0054 119.603 47.0107 cv
119.99 47.0718 120.394 47.2612 120.696 47.4907 cv
120.831 47.6392 120.96 47.7856 121.096 47.936 cv
121.31 48.1675 121.542 48.4116 121.581 48.7305 cv
121.571 48.7305 121.56 48.7305 121.548 48.7305 cv
121.546 48.7856 121.318 48.7598 121.258 48.7598 cv
120.647 48.7563 120.035 48.7539 119.419 48.7505 cv
119.197 48.748 118.897 48.707 118.721 48.8032 cv
118.518 48.8013 118.234 48.6777 118.048 48.77 cv
117.983 48.7798 117.914 48.7891 117.846 48.7974 cv
117.615 48.7974 117.334 48.7622 117.144 48.8521 cv
117.044 48.8521 116.931 48.8716 116.853 48.9106 cv
116.656 48.9087 116.243 48.8599 116.093 48.9341 cv
116.005 48.9438 115.919 48.9521 115.831 48.9614 cv
115.747 48.9731 115.659 48.981 115.569 48.9893 cv
115.43 48.9893 115.247 49.0083 115.162 49.104 cv
115.112 49.104 115.151 49.2588 115.153 49.3101 cv
115.165 49.8262 114.783 50.2964 114.249 50.292 cv
113.817 50.2886 113.479 49.979 113.395 49.5859 cv
113.368 49.4502 113.403 49.2612 113.317 49.1528 cv
113.28 49.1084 113.209 49.0791 113.147 49.0923 cv
112.942 49.083 112.739 49.0713 112.534 49.0596 cv
112.487 49.0713 112.438 49.0791 112.387 49.0889 cv
111.91 49.0869 111.485 49.0264 110.989 49.0244 cv
110.863 49.022 110.681 48.9985 110.581 49.0498 cv
110.229 49.0479 109.895 49.0161 109.531 49.0161 cv
109.359 49.0146 109.14 48.9966 109.006 49.0713 cv
108.494 49.0674 107.969 49.0264 107.458 49.0317 cv
107.278 49.0317 107.026 48.9893 106.875 49.0596 cv
106.719 49.0571 106.565 49.0557 106.439 48.9966 cv
106.439 48.8755 106.505 48.7739 106.546 48.6738 cv
cp
f
121.914 40.9155 mo
121.894 40.9155 121.876 40.9155 121.858 40.9155 cv
121.763 40.6851 121.798 40.4614 121.801 40.187 cv
121.802 39.8379 121.726 39.4863 121.894 39.1938 cv
121.986 39.2134 122.056 39.2397 122.097 39.3262 cv
122.184 39.5244 122.171 40.9189 121.914 40.9155 cv
cp
121.468 37.3257 mo
121.468 37.3359 121.468 37.3457 121.468 37.355 cv
121.24 37.3096 121.201 37.1313 121.326 36.9463 cv
121.446 37.0039 121.582 37.3257 121.468 37.3257 cv
cp
121.393 41.5879 mo
121.38 41.6162 121.209 41.8604 121.21 41.6987 cv
121.169 41.6123 121.181 41.4795 121.18 41.3774 cv
121.171 41.1113 121.177 40.8091 121.169 40.5322 cv
121.169 40.1641 121.166 39.793 121.164 39.4248 cv
121.166 39.1265 121.138 38.8145 121.255 38.5786 cv
121.343 38.6216 121.413 38.6963 121.438 38.7886 cv
121.523 39.1118 121.457 39.48 121.453 39.8345 cv
121.451 40.3169 121.576 41.165 121.393 41.5879 cv
cp
122.43 37.0962 mo
122.426 36.8213 122.375 36.543 122.353 36.2793 cv
122.346 36.1333 122.338 35.9878 122.331 35.8398 cv
122.324 35.7842 122.346 35.522 122.296 35.52 cv
122.296 35.5112 122.296 35.5024 122.296 35.4917 cv
122.265 35.4917 122.236 35.4917 122.207 35.4917 cv
122.148 36.0649 122.177 36.6934 122.166 37.2998 cv
122.16 37.5347 122.056 37.709 122.039 37.9136 cv
122.041 38.0298 122.041 38.1475 122.044 38.2622 cv
122.034 38.3682 122.026 38.4766 122.015 38.5835 cv
121.875 38.603 121.776 38.5669 121.744 38.4297 cv
121.699 38.2329 121.794 38.0688 121.791 37.8828 cv
121.776 37.7559 121.763 37.6289 121.748 37.5 cv
121.743 36.8096 121.805 36.0786 121.798 35.4014 cv
121.785 35.2842 121.776 35.168 121.761 35.0532 cv
121.747 34.9937 121.73 34.936 121.717 34.876 cv
121.685 34.876 121.659 34.876 121.626 34.8755 cv
121.626 34.8857 121.626 34.8955 121.626 34.9048 cv
121.618 34.9048 121.608 34.9048 121.597 34.9048 cv
121.581 35.3994 121.523 35.8438 121.498 36.333 cv
121.48 36.4199 121.46 36.5088 121.443 36.5952 cv
121.414 36.5952 121.384 36.5952 121.355 36.5952 cv
121.201 36.2119 121.25 35.7065 121.244 35.2529 cv
121.243 35.0083 121.268 34.7578 121.193 34.5522 cv
121.103 34.7104 121.109 34.8745 121.093 35.0757 cv
121.076 35.3091 121.06 35.5884 121.072 35.8354 cv
121.085 36.0942 121.134 36.3833 121.115 36.6528 cv
120.968 38.3252 121.044 39.9663 121.035 41.6694 cv
121.026 42.0088 121.019 42.3481 121.011 42.689 cv
120.989 42.978 120.942 43.291 120.939 43.5957 cv
120.938 44.0151 120.967 44.4634 120.959 44.9072 cv
120.949 45.3223 120.902 45.7881 120.927 46.2188 cv
120.934 46.2773 120.942 46.4258 121.009 46.4258 cv
121.009 46.4341 121.009 46.4438 121.009 46.4531 cv
121.019 46.4531 121.03 46.4531 121.038 46.4531 cv
121.038 46.4438 121.038 46.4341 121.038 46.4258 cv
121.046 46.4258 121.06 46.4258 121.068 46.4258 cv
121.147 46.1792 121.122 45.8896 121.13 45.6079 cv
121.148 45.1494 121.206 44.6851 121.193 44.207 cv
121.185 43.9097 121.123 43.5366 121.225 43.2529 cv
121.243 43.2051 121.28 43.1899 121.334 43.2051 cv
121.447 43.2358 121.472 43.4077 121.486 43.5107 cv
121.544 43.8657 121.48 44.2158 121.46 44.5898 cv
121.457 44.8813 121.456 45.1729 121.451 45.4653 cv
121.451 45.7842 121.43 46.125 121.464 46.4277 cv
121.483 46.5962 121.446 46.7588 121.494 46.915 cv
121.522 47.0073 121.542 47.2168 121.676 47.2168 cv
121.707 46.7354 121.725 46.1909 121.726 45.6982 cv
121.717 45.4663 121.703 45.2329 121.692 44.9976 cv
121.714 44.7666 121.736 44.5317 121.758 44.2998 cv
121.781 44.144 121.805 43.9883 121.831 43.8315 cv
121.831 43.6152 121.763 43.4067 121.739 43.2168 cv
121.693 42.9038 121.701 42.5674 121.703 42.2271 cv
121.706 42.0479 121.706 41.8657 121.754 41.7065 cv
121.769 41.6538 121.853 41.6069 121.853 41.5571 cv
121.864 41.5571 121.873 41.5571 121.88 41.5571 cv
121.984 41.6475 122.048 41.7397 122.071 41.8818 cv
122.122 42.2378 122.096 42.6816 122.072 43.0449 cv
122.063 43.1738 122.022 43.2813 122.022 43.4238 cv
122.026 43.7466 122.108 44.0845 122.118 44.4175 cv
122.109 44.5513 122.103 44.6885 122.097 44.8252 cv
122.093 45.4165 122.089 45.9468 122.088 46.5474 cv
122.085 46.9736 122.125 47.4321 122.166 47.8354 cv
122.159 47.9111 122.148 47.9868 122.136 48.0654 cv
122.176 48.0654 122.214 48.0654 122.254 48.0654 cv
122.372 47.8135 122.335 47.5 122.347 47.189 cv
122.359 46.8608 122.409 46.481 122.369 46.1421 cv
122.339 45.917 122.306 45.6938 122.273 45.4668 cv
122.28 45.2319 122.351 45.0176 122.359 44.769 cv
122.368 44.4028 122.305 44.0747 122.306 43.7178 cv
122.328 43.3408 122.351 42.9604 122.372 42.5801 cv
122.372 42.2896 122.375 41.9976 122.373 41.7065 cv
122.359 41.5889 122.343 41.4731 122.328 41.356 cv
122.324 41.1709 122.376 41.0205 122.383 40.8315 cv
122.375 40.5293 122.368 40.229 122.359 39.9268 cv
122.359 39.4639 122.39 39.0054 122.394 38.5254 cv
122.398 38.0327 122.434 37.5698 122.43 37.0962 cv
cp
f
119.309 36.5483 mo
119.199 36.6255 119.034 36.6577 118.905 36.6958 cv
118.574 36.7949 118.244 36.8965 117.914 36.9976 cv
117.463 37.1387 116.998 37.3096 116.574 37.5181 cv
116.277 37.6909 115.98 37.8633 115.68 38.0371 cv
115.63 38.062 115.221 38.2769 115.222 38.1646 cv
115.21 38.1646 115.202 38.1646 115.192 38.1646 cv
115.231 37.8574 115.585 37.6484 115.826 37.5073 cv
115.942 37.4253 116.059 37.3428 116.173 37.2578 cv
116.471 37.0684 116.789 36.8848 117.103 36.7393 cv
117.435 36.5825 117.788 36.4985 118.138 36.3813 cv
118.258 36.3262 118.376 36.2744 118.494 36.2227 cv
118.652 36.167 118.809 36.1099 118.967 36.0571 cv
119.088 36.0581 119.228 36.0474 119.338 36.0835 cv
119.564 36.1641 119.453 36.4429 119.309 36.5483 cv
cp
119.261 43.6826 mo
119.026 43.8242 118.709 43.8232 118.43 43.8843 cv
118.176 43.937 117.926 44.0151 117.667 44.0737 cv
116.801 44.2729 116.081 44.6216 115.338 45.0664 cv
115.247 45.1191 115.002 45.353 114.911 45.1812 cv
114.843 45.063 115.023 44.9409 115.096 44.8765 cv
115.386 44.6226 115.681 44.4536 115.997 44.2578 cv
116.346 44.0405 116.692 43.8467 117.076 43.6982 cv
117.197 43.6318 117.321 43.5659 117.443 43.499 cv
117.921 43.311 118.414 43.1934 118.901 43.0288 cv
119.035 43.0288 119.177 43.0308 119.291 43.0879 cv
119.526 43.2114 119.464 43.561 119.261 43.6826 cv
cp
115.19 41.3022 mo
115.89 40.6499 116.802 40.3286 117.659 39.9805 cv
117.93 39.8691 118.247 39.6714 118.568 39.6733 cv
118.676 39.5894 118.919 39.4702 119.064 39.4707 cv
119.064 39.46 119.064 39.4521 119.064 39.4414 cv
119.233 39.4702 119.361 39.5415 119.365 39.7339 cv
119.372 39.9004 119.288 40.0342 119.16 40.1196 cv
118.906 40.2886 118.6 40.3179 118.305 40.4189 cv
117.976 40.5283 117.633 40.6533 117.298 40.7544 cv
117.072 40.8242 116.843 40.8726 116.626 40.96 cv
116.234 41.1196 115.842 41.3232 115.479 41.542 cv
115.349 41.6206 115.215 41.7427 115.051 41.748 cv
115.011 41.7495 114.969 41.7456 114.942 41.7183 cv
114.802 41.5771 115.108 41.3745 115.19 41.3022 cv
cp
120.601 40.2075 mo
120.585 40.0342 120.571 39.8594 120.552 39.6831 cv
120.544 38.9512 120.585 38.2002 120.589 37.4976 cv
120.584 37.2725 120.574 37.0483 120.568 36.8223 cv
120.56 36.2666 120.572 35.7256 120.541 35.1904 cv
120.509 35.0229 120.48 34.8579 120.449 34.6904 cv
120.417 34.499 120.459 34.2803 120.471 34.083 cv
120.471 34.0151 120.49 33.8193 120.406 33.8184 cv
120.265 33.751 120.105 33.7822 119.942 33.7749 cv
119.751 33.7632 119.567 33.7271 119.358 33.7246 cv
119.138 33.8022 118.869 33.7778 118.633 33.8218 cv
117.552 34.0244 116.542 34.1807 115.609 34.6763 cv
115.38 34.7993 115.133 34.9302 114.959 35.1406 cv
114.826 35.2998 114.822 35.4995 114.791 35.7109 cv
114.713 36.2075 114.716 36.7393 114.698 37.2871 cv
114.678 37.5601 114.66 37.832 114.639 38.105 cv
114.635 38.501 114.633 38.9004 114.629 39.2993 cv
114.61 39.4551 114.594 39.6108 114.577 39.7651 cv
114.54 40.1353 114.549 40.5439 114.536 40.9038 cv
114.516 41.4624 114.549 42.0313 114.561 42.5674 cv
114.574 43.0801 114.54 43.6348 114.545 44.1709 cv
114.559 44.3169 114.571 44.4614 114.583 44.6089 cv
114.571 44.6968 114.561 44.7842 114.549 44.8711 cv
114.547 45.1182 114.596 45.3604 114.594 45.6294 cv
114.59 46.3477 114.573 47.2715 114.858 47.8428 cv
114.873 47.8706 114.962 47.9985 114.962 47.936 cv
115.286 47.8115 115.573 47.5605 115.875 47.397 cv
116.143 47.2495 116.434 47.1621 116.703 47.019 cv
117.03 46.8447 117.197 46.7236 117.623 46.7271 cv
117.744 46.6489 118.103 46.5825 118.265 46.5845 cv
118.335 46.5752 118.402 46.5669 118.468 46.5571 cv
118.53 46.5474 118.588 46.5396 118.644 46.5278 cv
118.953 46.375 119.676 46.5161 119.986 46.5942 cv
120.14 46.6338 120.296 46.6724 120.453 46.7119 cv
120.53 46.2617 120.456 45.751 120.443 45.3115 cv
120.46 45.0601 120.476 44.8076 120.494 44.5557 cv
120.497 44.2378 120.472 43.9175 120.478 43.6201 cv
120.494 43.4639 120.511 43.3081 120.527 43.1538 cv
120.546 42.7856 120.526 42.4331 120.544 42.0742 cv
120.555 41.8657 120.588 41.644 120.593 41.4326 cv
120.601 41.0293 120.614 40.623 120.601 40.2075 cv
cp
f
113.65 38.332 mo
113.616 38.3955 113.51 38.3994 113.448 38.3877 cv
113.274 38.3506 113.143 38.1919 112.997 38.105 cv
112.829 38.0093 112.657 37.9146 112.487 37.8184 cv
111.582 37.3594 110.559 37.0933 109.57 36.8193 cv
109.286 36.7402 108.915 36.7588 108.669 36.605 cv
108.468 36.478 108.464 36.2075 108.639 36.0581 cv
109.065 36.0601 109.407 36.1958 109.782 36.3076 cv
109.895 36.3296 110.008 36.353 110.119 36.376 cv
110.364 36.4429 110.6 36.5439 110.833 36.6372 cv
111.04 36.7085 111.245 36.7827 111.454 36.854 cv
111.551 36.9082 111.653 36.9634 111.75 37.0151 cv
112.036 37.1479 112.319 37.2832 112.602 37.416 cv
112.78 37.499 113.757 38.1079 113.65 38.332 cv
cp
113.536 41.9766 mo
113.515 41.9839 113.497 41.9922 113.475 41.9976 cv
113.463 42 113.455 42.0039 113.444 42.0054 cv
113.241 42.0352 112.417 41.3608 112.168 41.2446 cv
111.875 41.1055 111.573 40.9941 111.27 40.877 cv
110.864 40.7202 110.469 40.54 110.012 40.4795 cv
109.838 40.458 109.667 40.4355 109.489 40.4111 cv
109.25 40.3994 108.879 40.4536 108.704 40.312 cv
108.485 40.1372 108.626 39.6743 108.913 39.6753 cv
108.913 39.6665 108.913 39.6577 108.913 39.6479 cv
110.201 39.7378 111.315 40.3281 112.362 40.9155 cv
112.643 41.0752 113.374 41.5156 113.522 41.8101 cv
113.539 41.8433 113.592 41.9775 113.536 41.9766 cv
cp
112.838 45.1704 mo
112.34 44.936 111.807 44.7471 111.27 44.5791 cv
111.084 44.521 110.891 44.4966 110.695 44.4575 cv
110.411 44.3994 110.115 44.3169 109.817 44.271 cv
109.485 44.2188 109.147 44.2051 108.829 44.1357 cv
108.792 44.1206 108.756 44.1064 108.719 44.0938 cv
108.457 43.9473 108.453 43.436 108.833 43.4399 cv
108.833 43.4302 108.833 43.4204 108.833 43.4087 cv
109.069 43.4097 109.245 43.4712 109.448 43.5142 cv
109.659 43.5601 109.875 43.5811 110.083 43.6318 cv
110.258 43.6963 110.434 43.7612 110.61 43.8232 cv
111.13 43.9907 111.605 44.1641 112.092 44.394 cv
112.208 44.437 112.322 44.48 112.438 44.52 cv
112.715 44.6436 113.118 44.939 113.319 45.1787 cv
113.395 45.2646 113.518 45.3179 113.518 45.4478 cv
113.274 45.4785 113.036 45.2637 112.838 45.1704 cv
cp
113.897 36.3188 mo
113.857 35.8877 113.914 35.4336 113.671 35.1084 cv
113.215 34.4917 112.592 34.2676 111.926 34.0176 cv
111.747 33.9565 111.571 33.894 111.393 33.832 cv
111.191 33.7939 110.991 33.7568 110.788 33.7188 cv
110.478 33.6416 110.122 33.5771 109.792 33.5605 cv
109.323 33.5552 108.859 33.5527 108.391 33.5479 cv
108.252 33.6104 108.025 33.5889 107.934 33.7261 cv
107.844 33.8628 107.891 34.3931 107.891 34.5957 cv
107.887 35.3848 107.852 36.1724 107.847 36.9868 cv
107.844 37.4629 107.84 37.9404 107.836 38.415 cv
107.809 38.8145 107.782 39.2134 107.756 39.6128 cv
107.745 39.8975 107.86 40.1567 107.852 40.458 cv
107.839 41.043 107.827 41.6865 107.815 42.2959 cv
107.793 42.5488 107.776 42.8022 107.755 43.0527 cv
107.747 43.5723 107.784 44.0576 107.774 44.5713 cv
107.755 44.8242 107.735 45.0757 107.714 45.3276 cv
107.713 45.5728 107.788 45.7764 107.786 45.9995 cv
107.786 46.2617 107.737 46.5117 107.735 46.7856 cv
107.84 46.7886 107.948 46.79 108.055 46.79 cv
108.135 46.7505 108.247 46.7314 108.346 46.7314 cv
108.428 46.6919 108.541 46.6763 108.638 46.6763 cv
108.708 46.6646 108.776 46.6567 108.842 46.6489 cv
109.12 46.5259 109.875 46.6826 110.158 46.7271 cv
110.516 46.79 110.851 46.7769 111.202 46.8506 cv
111.614 46.937 112.238 47.1758 112.594 47.3853 cv
112.72 47.4595 113.438 48.0146 113.502 48.0146 cv
113.502 48.0068 113.502 47.9966 113.502 47.9868 cv
113.688 47.6782 113.67 47.3789 113.723 46.9976 cv
113.783 46.5669 113.792 46.1284 113.81 45.6553 cv
113.833 44.9849 113.874 44.2964 113.876 43.6128 cv
113.871 43.3218 113.865 43.0288 113.857 42.7388 cv
113.888 41.8979 113.88 41.082 113.899 40.2583 cv
113.924 38.9707 114.01 37.6011 113.897 36.3188 cv
cp
f
112.077 10.6636 mo
111.634 10.7158 111.19 10.7705 110.748 10.8232 cv
110.364 10.8828 109.989 10.9507 109.572 10.9658 cv
108.666 11.1396 107.76 11.313 106.854 11.4863 cv
105.581 11.7466 104.373 12.2842 103.206 12.7671 cv
101.016 13.6689 98.9536 14.7173 96.9673 16.0273 cv
96.4966 16.3359 93.2124 18.6377 93.2134 18.9956 cv
93.7476 19.0381 94.2856 19.0811 94.8208 19.123 cv
96.1089 19.1982 97.4556 19.1499 98.7349 19.1499 cv
99.5278 19.189 100.32 19.2305 101.112 19.2686 cv
101.423 19.123 101.92 19.1982 102.3 19.1982 cv
103.382 19.1973 104.413 19.2661 105.446 19.2651 cv
105.977 19.0415 106.836 19.2373 107.402 19.2573 cv
109.149 19.2578 110.896 19.2583 112.643 19.2588 cv
114.6 19.3027 116.556 19.3477 118.513 19.3901 cv
122.125 19.3423 125.739 19.292 129.347 19.2441 cv
129.618 19.1475 130.018 19.2417 130.328 19.2422 cv
130.956 19.2583 131.585 19.2778 132.213 19.2944 cv
132.538 19.2783 132.864 19.2627 133.192 19.2456 cv
133.806 19.2627 134.486 19.3247 135.147 19.3047 cv
135.291 19.2988 135.701 19.3271 135.85 19.3271 cv
136.292 19.3271 135.494 18.6948 135.358 18.5396 cv
134.902 18.0264 134.397 17.6724 133.855 17.314 cv
133.534 17.0586 133.213 16.8037 132.888 16.5488 cv
132.23 16.1069 131.568 15.6689 130.91 15.2275 cv
126.781 12.7344 122.794 11.2627 117.664 10.7554 cv
116.919 10.7412 116.176 10.7261 115.432 10.7104 cv
114.348 10.6938 113.178 10.6626 112.077 10.6636 cv
cp
0 1 .62 0 cmyk
f
91.4751 20.6079 mo
91.0259 21.0654 90.3599 21.731 89.9106 22.188 cv
88.979 23.4424 88.0493 24.6963 87.1177 25.9512 cv
85.1606 29.2524 83.9644 32.6875 83.1206 36.5396 cv
82.9829 37.1538 82.9858 37.7642 82.9253 38.416 cv
82.6235 41.5898 82.5376 45.1577 83.0444 48.2876 cv
83.1821 48.8057 83.3208 49.3228 83.4595 49.8364 cv
83.6147 50.6904 83.7427 51.479 84.0093 52.2734 cv
84.2778 52.9326 84.5474 53.5889 84.8149 54.2451 cv
85.1372 55.21 85.6265 56.0791 86.0864 56.9717 cv
87.1743 59.0928 88.438 61.1084 89.9731 63.0264 cv
90.1968 63.3027 90.7573 64.0801 91.1548 64.0801 cv
91.1548 64.0566 91.1548 64.0361 91.1548 64.0107 cv
91.4644 63.4248 91.2495 61.6514 91.2271 60.9326 cv
91.2231 59.7236 91.2192 58.5137 91.2173 57.2998 cv
91.2153 56.2197 91.1743 55.0752 91.2271 53.9463 cv
91.3374 51.5376 91.2427 49.043 91.2798 46.605 cv
91.3081 44.5444 91.4146 42.4233 91.4126 40.3164 cv
91.4106 38.3354 91.2944 36.1616 91.4634 34.2432 cv
91.4478 34.0298 91.4321 33.8174 91.4146 33.6021 cv
91.4126 32.9985 91.4116 32.3926 91.4097 31.7891 cv
91.4429 30.9521 91.4771 30.1162 91.5112 29.2788 cv
91.4556 27.479 91.4673 25.6494 91.4087 23.8193 cv
91.3647 22.5342 91.5239 21.2974 91.4751 20.6079 cv
cp
f
137.572 20.8042 mo
137.475 22.0361 137.68 23.9478 137.66 25.2451 cv
137.618 28.0386 137.608 30.8135 137.609 33.7061 cv
137.614 38.4248 137.615 42.708 137.619 47.2666 cv
137.622 49.8154 137.493 52.3584 137.618 54.9502 cv
137.608 56.001 137.601 57.0508 137.589 58.0986 cv
137.592 60.0264 137.813 62.041 137.409 63.8945 cv
137.383 64.0049 137.133 64.833 137.331 64.833 cv
137.99 64.833 141.022 60.458 141.446 59.7598 cv
141.75 59.2021 142.056 58.6455 142.361 58.0879 cv
142.53 57.709 142.697 57.3311 142.865 56.9482 cv
143.453 55.9053 144.129 54.6357 144.523 53.4873 cv
145.35 51.061 145.847 48.5674 146.197 45.8936 cv
146.31 45.0176 146.276 44.1699 146.291 43.2427 cv
146.313 42.7534 146.334 42.2642 146.355 41.7759 cv
146.31 39.1587 146.005 36.3901 145.331 34.062 cv
144.663 31.7627 143.622 29.5254 142.475 27.4536 cv
142.074 26.7295 141.578 26.0659 141.13 25.3613 cv
140.534 24.4209 137.967 20.5098 137.572 20.8042 cv
cp
f
133.369 68.1641 mo
131.576 69.5107 127.853 69.6543 125.483 69.9434 cv
124.875 70.0205 124.269 70.0986 123.66 70.1738 cv
120.703 70.3154 116.81 70.5908 115.747 73.6279 cv
115.636 73.9551 115.648 74.0244 115.538 74.3506 cv
115.489 74.6396 116.855 74.3662 117.484 74.3652 cv
117.664 74.2744 117.959 74.2959 118.184 74.2959 cv
118.322 74.2705 118.463 74.249 118.603 74.2256 cv
118.953 74.0322 119.493 74.0137 119.93 74.0127 cv
120.222 73.8662 120.619 73.8721 120.98 73.8721 cv
121.364 73.6631 122.302 73.5205 122.794 73.5205 cv
123.63 73.2354 124.467 72.9473 125.301 72.6572 cv
127.667 71.6963 130.184 70.7314 132.209 69.1104 cv
132.508 68.8701 132.886 68.792 133.369 68.1641 cv
cp
f
96.5415 68.7588 mo
97.0669 69.3916 97.813 69.5361 98.4653 69.9814 cv
98.8384 70.2568 99.3853 70.542 99.7544 70.8135 cv
101.186 71.499 102.268 72.0615 103.731 72.5479 cv
105.338 73.0811 106.913 73.5908 108.645 73.9053 cv
109.229 74.0127 113.217 74.7373 113.366 74.3643 cv
113.606 73.7598 112.306 72.2793 111.854 71.8955 cv
111.432 71.5381 110.92 71.3115 110.458 71.0576 cv
110.011 70.8135 109.486 70.6709 108.994 70.5371 cv
108.342 70.3564 107.713 70.1494 107.02 70.0322 cv
106.356 69.9209 105.701 69.916 105 69.8506 cv
104.392 69.7529 103.786 69.6533 103.176 69.5547 cv
102.387 69.4482 101.598 69.4561 100.811 69.3594 cv
99.3638 69.1797 98.0142 68.8477 96.5415 68.7588 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 14.0.0%%For: (Susan Halcro) ()%%Title: (2Line2ColCMYK_CS3.eps)%%CreationDate: 03/12/2009 11:35%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3_fZLISi]E9T.U]>;bQrJA=WK:Eq3.Vg[KX1;XkJr#E:Qi>0Ob&c_2L"&DPM!1:),8_A'FL\56+b]]^SdoXPJMK+(ni?=%81!J-,gHT\TnC@]fX%rA1*k,]L/aCI8Ii,)U-+_!i$Zo?Ju?D.=fFGqM=(:f=/q.k?:J[%h-Mk(q'38!-c.ri,6[JRAlJORQu38]%O$G+9(k9XdRUTUg[Y0*kNtUq"8\Lo)NFqR"d&MoXA<:C`pm?Lr4^ReH=.iXi]DVH.?#:'di]64$X<"ablQ1Gi]qF7U@_WH3!#$Nl%*&Asda2[p$K1(e0&lFqr^P'p3Vrb86>`e%Bi7/`Z^*16bJ<rY\cKHh[r-AbH^[T.;ptk6-]0a7U[@c%2ad'hGV^_7,KL_1-]`]Q*%6\57lrh6\&W'K_o,f)tgMVnM].5K&n6p/OEHo0.=A<:9B.&C<>8%JE,+o[Z.GcisYIAp;7O`fNZb#hD]qk_=4!8_CDLls=*_Y&pE%XShd4ckO)nm7(I&;X0@15<k9F@P\mtZp+%T!Fh3Ws,m.R\NsB^^5ID)4Ap5#EKCSU#iue'bG+Jrm-4\CFi8H+\jj#dY]Q+@3Im)K%+/N[4*i&g_&o<XT-jVLFKE9D$?5\qpO%?g&fG3aD*<@91F:OW9XP7u<[$)(G8e;,h8-&M:JEC/Fh*t*d%ZUlCj<"Z#BYs8"=9$Au%#>"(Q`O5gST[q>Dh@Dn?:J,$m>e?;a>&\<Y0o",,1>79HRaShG:AZ'F!M9l`1+_YXQW"3t"q(b6%%O%NM3mhr!5'e'V*X:Kr?_]b%WL?cuKB4^jo(V'Fjd0*:Y6Dhd"9#^WT[=RN6DLmLg(==c.gG+%i+)DWqS1loB>lgF`;8Zfdp2dZfT\FODRCiY],&$k\fL7B!FrTm%D@et_H7h+)K/WkIOl!SH%&6ap?O(%2CtEu:TCSW:ro@_KrKXCE.([6:GL3AqbECB)\i%7NH<2/_Vm-,AN,akABV2\D":^Ef1pDuC%KYu<!!a7[H!+&EAmhqhPCqOtG:;'N4)o1UL2Nn!`%q5EN<MX6%f@&p*nDmj<p)DPZ=SgM4M_2Ep+?&'pm2@*8,]r\39!&R[."\;,%ck0-IrH]Nm/86-E?[uN@MS;X"9.$Al#Z-4_!o^2'>A/l$+A&^>LgUSf]DX*2!<9#*$U"1dr\stoquVrY#r9>\i563?XMM?3JI"Uu%>SNP*>`^*h-HZF#TEUo"^s\)26pcB,1d;.9N$Ns[:c*CTn6#"OXj$2aTW6NQfItE9$&5-]#FoT2[$8Tf_f3b.&st$:6^H\qLFgbM%b!S?f-loMuOpu#f%QHX<.NQH_5#9+"7X<)E1]ngHU'/I)g?0.lkN'Z/*N,12,Yp.8#<]:rli>*0h?'C;(gr#5UC%G5U&-4)"HUF8%'&jQEbH;"YV1'5\ZZ%srWWM5C;X,KRC+Zq%)K(+UBGU+dQV`6@BgPrGn2S6\$0<n\"dN`5L)Z"NT(,K@HUas4!KVMd<ZX%')%WeL%%$op%ojNGP@3[c1qh4[Vg(]L<i7.5U,TjCarrd>Z7;5f!&FcAc31OF"4ADbn,Y2700gJZBGo10c"cE\U<EGaqF&q%9/Ah[W?K8Cb%N\!U&D.bOgkh%:T,S[O08V0g4A"sa*L]SU?,nrVC35mE>+SGEg<>si;?o=T@,h.SVrPCEenAES,f,]gfd#?+FPWB9`3Dk7Ho*KWj%dQCo6AJlmsSNX+7)rO9S^]OL:TU$]<?@GR&$'hGl)%VQPc#J^=OGk\#)'C0(.T6?5>A6\CUrn48,,+X#;Z%?H(+35*E#]15UNG-j%(6K&NbS%S"E^4dj)%CsX7XN348Ap(7$'n=7.gJKnJdulf!nRU`"b;bLQ/Q+%,BFUhD@&^ikTS+t*<:j"kQ:Q7QV\NT#FM<P)5okC%r(:_Qib;DaUZj$P\H@^3OjN-=RiZ4i$n*7<Q%o?-L/oDE^n7e[1Z2D=,uHq9P6qGCi$eC=6'J[uef:`LP__,8NHiRTMF3+mW#>sj%),>WOOG)Bi%J0Y",*iD8S_O5dV%\[]iF>.?8m<L"W")#P(%q`;;/rEY(Q\/k#O2^_>=-_E1a!AuNSkrnf2PY"<Z30hCFW3IQAB=&%,>O=M?5#.3ZmDKhO_>`/QQd/6+T\@FPfIbn_(&\Y-4hn_LC(p,8-&Sh5e9="'@AeW.<5QR.t#Ejl*I1>f*J>('jbA_P_'4g((cD@%_CYJ]FH@V)AHiH--;j8oj]R:iH'ZrATK'>d*\;n(!u\je[L'&<Jl(EXTqmVK!llFj6\Zaqb)LI_YR*GqQsl88"OAhq97g3#!B_\H%<Jk`(9dso[5:Q@/g7/]-,(,!#$"Si=bBPEm<>1PU87`i):^'/\+]$-Y<$nuo3C'KW04&-^pb3:]E>D?3l9e<I?T_:kC'S-#J020$%?C_*5-^A9+'ldY9Cr&Jn95#?aQ&1(45fEn,E2gAD:f^uA31(\7O^'/r)08VN+T):TV3<A6Y_qK_,7@P++uf]\`u6u=.Y(Qq.56S;%lC8LrO\jd&/>_<l6dTh'U`e>@k_Z>\E2r8[K5h3$C!3`faoIsE_VcU4SlQmFqY(;&-&-YrPFDW%aJitnkN#Y+TTW=N3Y&!Pg]@>*%k1$gJV6jgoPWAidG4J!q0olrDj7-:X!21lS-s?MBLT83\#-7<V<QTul!EiHg%X9bFX8#_[&(E!WZN7C)Rt2b8'P^Z]TP.oXm]^%%%/lj9=8hmUo%QIc,$oB5RFTuiS;;:XJ'jiN4.hBH\`dJ%RTctI)*uP2f<Cm`);B[Y@gGj>hj1O(H&#?3T#D)--:tk1?:W2?)&jR)Y%.`&,'$+?X/3Pd%Q>9!:8/\'c5_tXA8g0u$jW+uB@Te'a<9Ed[_.V&Z&.!8ss`"3pjV6(@X6Y[:-1kJRZV)i(IEb-*hTEiE8l6/JO%WtL'oTWT9qLC$S^04bY@!Grudm1h*+6idT,p80S].J#9=R*^rsD/8p.!lfl8`tV#o.f^VhXL`or)eYGE1rh,qU>iIUOan45DBI>t%ecE[f4HK>=*l_3Z6NOMdIAgg<`Br-;:a)S?"U#07!u.Y.MiXnLj/UTr5(hVk%0aDM"=WOX5E'B8T8^t)35Ij[9<"5$>Qo\8dMg!1%ftq-J8jmYQRduQlJ7Vm6Th`P6\,ZM[Om*$3Uj-`[d."YJg+kLa/NLp$D1R&:b.*,k4=&plA0)dCcDb7XkpuQQXgI3KK!NNd'TkZl%)9m=r^rV<]k'9Fa!Pguf?#iF.iZPf<7T$:Dbc1^,VD`i`N:/H%>Gu?m^`"nrO=_RD$omXoVXU;,nc:8ZCYo5RV1s^;ZD*#C.M&3g%;Q.ZV$#GsOG$usji'K+b`,ul8+[fOtFWbUo<LJuB.2=U<H#[m&9LY]@b6)ZUEG]t>3*`h"DGtQ.:#hr#WZmR;j02UJ!36s'NHeu`%a^GFabD18NcspH+TXH-(AmcY&&!>ZV+3$0j+5iN_Pn#4p<YjO#OM(o),R%bc/<I\LZH!E]'p'T'&s%]XL>2e=i(;#P+;?$@FG)`=%/B94`9`tlP#aU3Vj_'Bq1FSh$`Zg5K49:I1d4LMI<c6\`L[Z0SC,RQB30,?&5cp(%?SFYk@ge5+(.RuqJFGu-!0Ng['UP$f2NlJh%.GH8V7n+]WN249tM0N:n!*K,s=.2SZ=7gnBk[#-Ui)Gmcnd&BoVFV'>89W(*W0H+@!1+$)0IGi,X[-<X&CZjV&QUG'i3GV36[>V^%"P6FM4WG]%(=DIT^_)+@iF<_%6k^[C*&KDW3#LtH6OJ@n3#V\aHe$^-Tgp2+L/L1t"OOJ?1WTQ8PetBGc1@ck.KU/>JOC8u9IRn)%A6:iQ$8K?7<B1=^W'7!l9+.[>/eM0i74W,9"G0G[1sf(hW/@$O-tW?::A%+BgUQsE=02P._QpcXB+#qM$>XEuV;lQ,!ar;JUPoAu%5uhs48h20`Wa8F1>bgKdD,mkq3hj-]?r"LL</?\^PWh[K7BQ4(,WOUXiAicA_B`ZI(HeL)*u'H*ic3Lr"GR1$<$FI6V]/5jUVn&0%S/a!:i&3QgKPKM(Rg1!t*2QIc,PtDsF.c6$[IcF9TEo$r^pd6J*[[S6V'rQ7R`e('C7p2S.&K-M7nT='0FqmZU"V"G9*i'1+;n^h%%frGMe`f]E2/#!BI2HU2"l$g<;Jf.,37Xi+dXYBP;Hiueo4+F=B9cd@?F@2V@oBa.@2)JAFC5?L)V*5?3CYmlTOcE.?!7\-_OM#L%h)&Lr7L9iMN#VgaUmFolkFd:'#$fm9oP-SkLUl,*AW$T)0t\Er<29?[1KKKn!@F!T5<tGfEMXsIW0.-ENiR.95,#p!H-P[82<KQ&%=k.*C.Fhsa0P^,9T[_uD$lFSQ.rA_9;4];Wb,PT+3Q%nK9N&2rGSh`.4&F1K.+[J+#3\>.?f5MgV;abJ\9U*--U3R5Je.N(a'oXh%#Y$]01uFkRG0G2JD[Z+CWOcOen>cO^Wn<3L<Jpp5BR(lK&S-RKQ;Cg+_!3aYKkgkN$".j'D.PfF&GQFDYq5'iDqI;]\aWdu%>$sJ%J[,Ec)s)j>k2RfH7\A7_@]VlQ=Z4icj!o8:MqNW+0P\[jUQtU$P\RR;TW1s$_bd@/`Gu8BL]MliocY"_WW6&+%<D,4e^[.dOKrl)%"JpZOAi,,N=cB?d#Pq@.FR]_,nBd]QQCUj!2+(32%!&KPHn`2K]Y+?\U#_uYEMj`Q:G'@s%J6N2$U!%DR5Vjop;JIiN.#]jg&js"%U#TemJMG!>><M32UA6MN%tXC'>"hE_a*K-#Tl"dZ1T21B^hEs_lOYLPA4R:HZMR33BG4cra^*>.Et_\sMHWl3OY(Pi%[:P4C^1$D%%iQ)#L4:=B*&K70aY#NJH+9n`DYP//N.^Rj=^*D/dlajXOn!@WV$VJU7%&S9/[V$]e:HI*@MUAcN"]#"=uFXU^]HPrC>1sbnFa3o%<2j_a#>A7Mk$Z'@3a95(JcT7!$ML"t65&jidWH_jBS(+'1$r&XOKmQ(ii,ljiNFS'FaUG/%0,'s[_]!MQr^[n)>(lhA6H_7?,=s`%>&Q65>nO=u'oX0Aqt`DLU]1QG]kdni6jUkdX*16F*i`\cf^QAs*69`3\2T)R%,6>)r'@ZX<]L)tL?%00J:f-:+o/$5ldrD8;-HaQ%7!5d)?LMBVUc/6nQr8\mWFi%\]TBXb2/3?/lMqE2oAuW9-qi0R>`T9?)\Q^17iQfk9]'Yq5Vt'%Z9RPR##2@.'lhVGIu9(!Fe!B#%$5];:fGc[;=]92:jY0QA!4<'6ZYEkB/`MttnWPU2X=]_6NIKDFi9Tn*:hs1LJIeF<S$1H&;'M#.>t*t6q6'KQ!'H*VR972?O['D,%O=l(9$[RHd'[&sci]_"A<L@60d:dmrTi(3n[U2dG-#(`.M?Q"I*?QgS:jiFB?LuVhOZHrQkY#2tGk;N\NGDA9ILg#[HSWk'QiJmJ%4NEIn`OFdVgtS;.39K)SoKkBUhB"KIpAP`^hHO%]Aq'>NC@pZfhN[nafK;1gpSQ9o_[`<`h7^A22g>#YmbZaTo0XT3lDHUhINY&!%Q]Lr^/tWZ1B#s(,Mnd5CW@l\rJ,[GGhs>STZKah!n4uoOQ0,kL(&hT2W7S4a`SV+NjU9gA0RiY22F0VGoQgt?SX((2<buL:[Ai,c%iS&M>@=1?0[;bLpe?C#$0^[:^H@+t7rUa14Zu9FN1BcYF0mjYg/MKi%MU$>AV_5S9R.C&K'0h_[[%9)#(pNWn@eFQq_%3kb&Wd,R%aT2MQRR/t-Db"Q#D1'uj5Q#gUr;rCLg:b3S!g*86?Oe?)?;,:aI1rViW@I\*+f:<4aZ#'<"Sf_R''"fF!+i`o*"g?>ZMY4PQN)B.%%<='YgAR`Y^A*_5Uf^OU:f/r"B#l#3.>BPDHO;s]L:J&k/QU5GP@WC#!Ofu@JM.$f^-_nY"%)#M6@T([fW+ec"(WW!jAZ6@&]ld0%_G%]uSpk8H,<+PMNBTDZs/5*TU"ee_>@J\(V>dg4F*;qBs']Bom.X3^Gp7Fh7>T&'14oF]Nh<fsIr>D[PbCr!2a3BbVELH(%ENVr%dn"MN0f0O]6Q&I1VRrSt5O>MdH(>52h9=H,OAY@Zo<(o*%.I,g2ZG*_m7/ILi<)uq#NRt6&fZp8EAMA>GS0%5FtldgDPmst<r=a@%Y/q1gCHk:UiKrV!\M3o#KnseY2O2-1nmc]YI8o6$\IA(2:,1![$lb@T`pLENs)0^:['Mp(<B9_gO)H,dM"-(f?TLD?@2QfK5",LA%)X""HI(<GO8Gk1RT"g5$2-#!<-/\?-V#2@[MG7Y\Y?A+RR2*u8_VS#3e:i'MCmN#:=S3=F)#j$JJ\8qXBcRr0i=E[t%qQ]n:/e*K%/[=+r&NV_DN*6;H$@=:A(;(k9W;[SQqNWo9M@2<<%H$kXRnp;bS9jSamo[PCem@!jbZZtS"3['-<:M[no$.JO9fnDD46TVh,M8+%%MM6gmJG_80Y=o>u^%k9SH>>@,IPQYHhltP]Ut_7*%4CBZ!"k\"#_+sq*"sRjKs!((PhU]$3J\,C"l@LX*s.X1Im(VV_c-0Ll8S-;%%_fhN`"nPT?)`N2#uKZc0@.KNjZ6Z#n>BsrQiL=(qM#W\[O>NbN)YLCogGh=K;X4g%9ipOD!`L`HSPi_#p.*?1OScTY]WAKU;-u:%<bq=H^O6*[IIKr`M9p.IKPrpjG#lq_M^7H,0N7,e<I[[t$pGrC(B'UJ_b<Y3f*AWU459e&A/K\bAgX1']id&8L9V+gc0paaVo(JF%&%;Es)sK%?V"iH;_u(Y5qI@r^n0+27h)\>eRA[qrM_b,>Ur/;oQ#mib14S#cf8iLY_1uRP!^a5]%c`2IVO^5+9KESG,dUt=9j9[&%<:Bk2:,\.DQLcUh^1e$hn^KfGH%>KdphQr"pJ)BiJOT?\'DSH@BE->ueDX%9SNcW(0Cjg.&C$5m_@MsWaJhTmo$$Ir3B;/;k!PlJ%s(.%A%K'J*bpD(KU.r0dbB:XR\VW3\B[\T\6qF7tGrD"%3:^m'TZuTO>b94%g$Hm<j/1+[^KpUV-J#DPrt"MUc.N;VD7KU$gL(+J%B:Cp9S2^E^S**N)c\oOF^hM#%q9J;X^A:A)+rJAGSs6.!kp(c-nAQqM^96+O]ZS9-l`?HK&Lk&+6jeb]cjZG,&gXq7,"T_i:Eg)D%D1UT\s)*B(_4R%!N@>i[r;`*h#9KRj$fh-bQ2f\A.UNTfUKnPj)XRb.Q6eeN..ji0`2DRPWBVM;>&:,ZGkGObcXl-8SuM/`Q<D>[%T*HpE>o`XrM4+&mF'g,"b/IRbC3?<n:o%_+%q_FsdGT`Ug"nF+W%0eo!WbAVpjk(#5/'Aehuhu$/n>*<rf1(f2BX%`)Z_+[)A%t#%5pIMr2ZPUr%6a).EtgJf9<.UPT,[RUZ/]_s?Z1dLI(Sc1X$^N4Mdn#iSJM;&RD=23GnSlRr_AcL`_aj+44t(Uq0)<_>3=S]oBkW7%G-\5hJK)`GZ/nX*bdW\3C(#<9#=iaIKfn6ZrbAoU^4e+dJ"UJhKfn1rY5&k(oSS9n[+AJs]Y+dDD_mf);;`+X=cip@a4'\ch)A^]%Q2DZoDu+-npFVZLbt)^0QFHCND<SSb#P!l-CeF`c_V&b<fDFKSU^GGc`<Offg%6nmbX_YgeF_!JkV`s_c%Bo*r:lKD\WoVIepCI4%gKVGp'=WM$gj#0oIQ+("f\btO[4S@.[,8,kD-!BNIal1r,W?7UI6DE<OPDrDpXQi,J\C@nr3+KdoK=hi1K'^rrl^.X`J-s#Jj4X:%HjjA0>J)?<5Rpm..^\ZeLrmfb?r9e$1IUdu.I>RMLfL+M\j%mdT>V8k-qMGXgB#<FO+>7>LYo>0mh\UR@@Q3dVg0k,0^o9OVCrHO%c/U_R\BUi.R`B9B3,YKZC#ld`'#[)pRsEe$*k.QXD<>i-H/*!Q\!ccr9iD@3r.l&EGnB90#GFbICHI/GW#o.L4@2#B*atP1U%)2p%_^qCQJUc%_Pb4Y#&'1!-Tn.\1aSZI+WD$$WI\libmke`:qWC2_CR8N(FQWMfN+ph5oCJlW9m=n/T:.[o3KekMmJ>;8WgOUP3Bq`Q%^T0G/B7&Mp[Ed*gnhYi8)Z3*q3E<'e2<gb/rC'fJ*&of;P3>,Z]"kCL!SHSMbq&A"S;"1#eu\hd:RCqL%7Gp]LkdN=!qPfE97U`C%B%#F<:[CH7k__6)EdD9Lp.an'L*6G52uo_Wl;.$TVI`cAAlE+B(1cj%9q?&8+la_NP/Ogc^;J1a!su]8nJucWaUm*dr6qV?81.A?%Im$1V5"'P@47gf!P1oiW@FBcHo2E$Z6&cb)"+F]UK:N6)VUcGVr03iY4s9Hi`XKAlo:X+qWnhqs@i?Zh4K'tFC.rD>"1i)m_+/Cd%gbG:4a6]oY<;T#R<,1@SU<=Wg@R_C&MrC]8]gSHqL;[GXA;X#OnKF;8Ii8:=U\:@'"rQa:O-;&PT6rY0D5l$'oW'&';.Dik[OsM-%4odEfoC^e`;=)c%.RHqTGK%mZfWO3qf9WUP8Ls_O_iBO$p(\Ko$"(57hZ1ep4h'Z'*HU:/\@cs\(-_Jc`a9hP_A@aoUPiBnRibr.%QPA$KkbA*ud7&O2BN-$p.t]11DR1-Lr*a6Api(GTgi8sY9Cb#EG4n;*pj#$OSNV]<a->bI&O.mlbQgNlPWP`mlPGVW"6S>Pda-RC%kSroq+1"N>U&&IHEU<%`Gsm#s_!d;>'@Ra1T=]G7g>2?F!p:'Ngu4_aI+$g/Rlc#t=bdOB5aa]]1[X]1e@`/\kji/S;DECkVU+AA%?G*hh2u!+0*oGc5RsTO3%T`?R5+`ofVVLKqs#@4.#=LB/p"`/:mCb%.bLjAK2q'D:O1[`p=,m!>fC/XU'/-TGTD=<[?S2oPa*>/r%1-b;<9Vnh^"7[UHoDJNHW>/o]9jl&b[sf\T9qhEg'pKe3*MM3Ns%3%m_Y*bTReSUTV=iI'E;R3)I+gU((GN289R00b1W2rH*,%.q%JPgo%1Zd>uLX(+fr$4St%4ZNBcMj\[p9_oQT4Dp<^%$3e`IUg(Ajlo3-eS%qh)D#WQE#NYMq%CHf13ug*H?@E1K(j:(VK1s1OA06%n%Kd[J*K3IKpsd-&)Kf1C_$W4f$C4;*G%/"8#)r"Agr7*db)bor3+Kdpt4<Kg4/or,?jt!7prUS#=aPEn;"2TZf-g\Za$eF,km2=%-KB;\%=gG])-g-oeD/dT*XC'l*PJdg,2o0jVBR2XDb"Q#54"*a&#WLLWcRiM/.I(g[ruEA'V*oNhet0mc)%t]KKFsP,)'[V?M]f[%d3BK'F'ET)17s?GeWL^'"o5s#"<ZME#k.lb3!I>.#X-G(`.piU,9Z&HYD>\8LCk*[)Z]E?'f5MTo1.pQ2]M^:U#G*0c^rDr\rD0P%-2P,^A?J"l9i=ctm_f?@b&o)Gb*hS@WHDgM?[qoP207;.=.N9m3bKfM4hmh5)Ju1_/eVf)/cOT0Ar%"Il;9r6n4r\_mpgr^7Ie]B%R[`,#QKH6Q::#1`$(rg8',bCJY`h@>q9SIfm0PDdkVmlq;k)*`n=OlH<WJcc]JGR[\,6ffLRk@P3%GX%#9$?%\Z0Lq`5hMU;?Y`0%ReAO$,!Y4OO"Uf-I5+E.oA_R&<<S8p1t04AinK!QG!:M?H+6i8+*`b;4I'j=7)LG&2G5$C?.Ltc/4AK)HTjBs^RUjDUc,f4'>+'0%G8`dne$@8ITn:&!ZOkKZK%R[W#ki%`&PLS3hffddTO#7$+_gN-W%?'pM;Wl9c3eVRqaNUks"!([rEUj!aOu,eoB!.%m_*&a+u)7Q%5%5tY["gt;Z.3I&rfic89.\G84QJ^J%mcV)WFg5>l\rr;o3>!S'DSH@I9lje8fa)59<MRLY(;1cipb(5WRO*:?(b\",4ad$ptf['%?Na+c8g!7skte?(2$;f1YndHm/H)mj+G)'3n+NBh+J>X]h#7>(*._IGJOf_CRG^[+iJ@ik@*?_Y,XF+XP`A[Q0L=(UBS)(^_,_\q%nU)P'1-B&k>VnZWW@/WsB_^64M8Ni:P;\ld)>H]iH13I!#F#$=[q7m@.RCq>,RB9d1,Qle*Z*(^*@Aks;1]X"Cmq!q3"@!NFM^(U%LWB6Zh>eO^!<Vm"0oc5XK?$5$r%kAbo`An-eM6!B)$]+N&:+AoYA]ToTpK_O!5l_S1N74mSZ5]qX\5Xs7;bIGJ7i4#12^k.2Afa.%hVNc1%er:BlnDmoU#Q9gYf2L]"!'%\(HMmSPB)%ZS5ahZfHGn+<#\"%W,]V^.UdnlU<eC*'"dO(+M`=%0']O>#i!]62;A`a0%TFU%9o*1./P/ZXRl9mc$\LoCep#9\G]ghZYq$4+;.OQ2IWO?cJ=gK<WiSHF<KenA0\mcAlG4.-/\I"ti*!Mn'S?4oT_pPi1n0JKfnWI/%Q2t[(+@u\trFk[/ka@gd(*N:O%D](NJ\N*(<g2CO/-&$PVuX&$dYDN-JYB2$,jGGiq^8ffN6:&ZI$fGR0TmD`?%Y`/)R/]a#X%m3%/e7nG6@h?l=d,P0`7I]6%X2;u3XgMh@(\E6]P9eS?NYA."kEY29OgBXK2e`Xs)X[@s-]7@gbKb)(hYV<n]8ml^e@Dj-BDIUG2/D_%BqmlmpFF*(FpdAd9MloMIZ*LG)"MVMm@&2KAiN^*)XX3Q+Kq/6E7Qb?aemlaV7oe)E;q=<oGU`i(D(_lT2=bGk#kc"]4lF(!)-;j%;QNK@X)%4$ge7`#Ll;C0NT+,OUo\?BK/"2KL(0]R[Nq4B0IDFWF.q@g2TVu^N\,e2?NDi*[;1CahZ5X%%jB0b7,iq):%MW_`8#:9%I9)P-RtJE>W#;mUEE=3i1Ef6Rf)[HUJ>SfF]/D^G1%`-h'-7/Mbk9:&V]LZUrY;I93!Jq@\KBES3_JUbNrQ!G^a5F&jJJ'drEUt1%rqhW/B*Cu[f@d=V$*%N/RK*`5GOhf5d-(J0Q;oSO+=d"(2LQVs2u66E_MNn"/k#g!UaC1J:adecZKedR@^iPZ3+TsMKLXQ1oVhJp%<TDu%B%m?_;(BjVYsp$A)G2rCL>nhUIuT$A?F>XP'/@eD/p71!+0n`jTg"[$SH^>N"a6U1%,O_@/KB8SS9t<4KgE'FA.Y$&7]Y"f%7&?.t<7Ac_F5*-1o%KdhF2MOM%1%n^h#d4*,L;(@#Wt%&M=X>i<".:GK@)8uJnoA\$Ws#*cDq.O_DgZY@Jq>U+/\!3G030CVCVo-%K[3Spjg3E@OQ?5qQ+YPSTX";Ir!7_6J.85m7fSK@:j1a<O5Y<GBao5#6pJ,$&O:&89hb^"i>AsB5B[=Eq1#7AU;^3")`SA(!0EJG%K9k0XB8+&"6NHE/aSV$$U&ii[25)WZ)iFM6=/D*+98Ck%VhPCjSOQS-6u2@f,KP0272k7$H6&u'#oL%&hM2^aJC0!WC=&<!QU23:%HK0Lmd02_dJR2B]f4YV^L7j;KDZTTi[A*HI^K/7g`^g=V">!f?KPiB?SN75:ZZLfMg8J]-#jpM9YGBEpNQ::n@o%WJ/)#NnE!R>_%WH`@R,VWjC1^"Gg!RJr3C&HAEWZTZ^++3NLK8q]a?*D$]S;=uV<,mVR&\Jgo(]td3EJgG&cBG+jn"PWm(-&eG+qpi!S.5<80N%S4%:kkS=E,WE7FCEQOQpIJOel,#Dk:C^3H`i/*37##OE2722cF[O]m/@cQAb"Z,0NW&^KhA,nkl4Ku1O=#!$u-b_')R;VYUHm9#K"(i%4I8+o&fN[=L7->,Y6Y=$jP?QFho,`pGM(EmWPECU-hJ$XC%kq_$f0[*_rf3^SZ1$.T#W1=2Ns`sY8P;S>A?7eW#62r"G0#5\sa;W%6>\_+_Aj;n8cso;&d($W*.YLn&J3gg)-]mMq8^F,gU:_X"Uk;6%'/D"^?;NA&u-h(A$\44qTT]`_5e&lIAunQP3hYb@Bq7G<sIBE%JAlKLnZVOQag6Nf/#VqO\?u#(cP10TDe=W.ZVd99=WC#[1o$N2:4W>[=kZ*t/U-;nG_.'t?LW1[)Bqu9]AZU,;g2(;C"1N&6D!*`%%;,[:\qk@.%@Vn&nsb2.>t-2l.T.A@!\c0Fenr'p*(!HJL;0,X]oN;fS2H^h]+3`$pjmbfmO>N]^/+oTd(&]*a.125)EYg0/jj.@%n\^2cCCFC$Yg(X9U8qR],N"1=5&IPTLJ%D/h;&F%9U(>O':(g[L\X6BWHN85G'dUBn9-e`63Q2QSu^+*-WlY,_>/#R/&$XS'Un4W%R#^Eh/rE(dIZ)aje.#H3VLT0NJtESaK1LWDZdBP@IIUYJ.?#EVUjrcF\/5K*!#-uA^W!)I`77%uBEPL%hRK>8R\\hM[f[kdHJheh%Q\D:>5e.RjK4`FQoN@J@L<-:gh'J;NL:9N.Le3,]`9)Wt#>8']W^7B%C(J"e'/j#uJ1n0SQo2</^+Mdj(li>i]eg@HLA>]&f@ms!%A\Q`4+&bKF)9eY<JnGi])A,aK;hm&GM3b&M>TUb]<EUOTO,4Fj6t3`\Nr>+jdAk]LnR&WPYr4o^(7IrJf+59Aa_O6?h4qU=8#&u`%eGlf93jgT5j_dkY:bEa=r6t_HK!k*P['5"YIUSW:Q54%c]2qL#jfn\1"a'l$/?-8rQ5)9tcI&'k/J`'U4_RJLG6Jq&,ZL"3%Mpj5%OFLp^/i%@$`\LA6AJEg?kp3l;;`T@L]9\.Og*j=%OajoaTe"V2:_!m#R^*Z9$+ZPBo^YL@Lmq@FrWn4bXWMh`5XmRW%ckXT8/Q5[%bEPJ$aj"(PAVOE,mL?ZD`U[*e3;*me(i5nHANT%U2S7A&<3s_g;j2)N.WsXDFc84NBT+2V>G5OJe@n'"rH=ShC=Hrus#:B#\P9Kf%lauo?D`!INAOC;qn#_Xa:Yi@$BiBS?`hQ89.s7A[r7::+CJE9@fXC#R.OnE)h+54m;n!ibkL,8h)N_+,S$^.Y!N'572QBC:52&);%C""?$//7qJ/7`JHWs_0_(i1)E<m[j\M`iTb)I*0pM43cd4(Nt%d.VOP3+sFWWffl)SdXb\6#GQ#%(:QOcG2^&!H\b(<@g:i=ps`+%\kd4Is%t:,^?i^@/VDse?U[W8i/Lh>;AbcD[GYQ)FE;X)\/,!Z;uURsVULge)CfN"p-Sk/.Q2Be_N=ZSei,:=6mOrjb%%CM?G@A[%aZUimXkG0EaFp07mI`?Rq5.)CQts.8-e52)G:kP<p'$kgje,@-g1UKp%g\$$5$lFH.^e7UkMEMFa%R,!4U5b>jX>eOAq=h!Od*0S%h4)qHc"mj5Rb2Dg[gfkgFqgiWU(ns]iRT5gBHUa8G!`C\kdL[2R0/r$D7UKm^e'(Zq$V9C@/>f)<+/GE33AiY.9E>oFeNLnGRP*$%^&\hGB(+tu4P!QS%Nb<nLIMG'C^M2$CI;h!@Nck2/#"dB4T:Jn1L_JT20$>29@elDS'#!1<8<f)@8jtid/5^'9-'o??*FNP=?N$p%%>f+3V?]daW<h=O$Z^AO#&obl5%$4u6j,t`K93l^D%mYbA+Q#5rTKY^NR:jt2+CffX>*ltB5K$UbqKWR@TKM':k]8nbP#ABq^/`,%QlT=@/LWo2mUQ>L0!T=QViYn1B?51s!X\ZZFtMTk6l35EABE@\HIFM6j>`K]0kB9g>P05q9T"JUlT(#bN"\3d<c.eTPF$S_WF&`o%#?ui`4lp6Y_)@29=(Ee!02S<Ve-/EqTq#:(pG'P#GQJMV(9IE?B"Pje[lGJHqRsuTF]-X7OliI672+Ph,8)n$q0R8sS<VaS(rPm7%,+!2GmW>In3BU!RZQb&C^1?r_<ZX0-Dg#0jK\O`rHK?]@hX;4`p#LIHi@)IF).(QEKP5:l]fO6>9?I.5_X7`:QRk>'T'UY+<A'o=%:(e_5@?q1nQi31th^"N^\"9A\qqIU2hL=p\M?Q?D>K)<!g?>K-IQt=jmVamj.FZr&X_+?Ueb>c2MR>N"*gb-,P2(JZTDeGIB'pn5%WKpNMV%-/sqSk/"1rs<tjdYnGk3>Y`P^Od:.^km"F8Qu$IIZfo.VGL-c@[%i-(jn?5OqVIa^2?^OkgETo&2q&/J(7ib.kZ\%C0nJ%2dEr)hn2[tV<e(RS\$7Dk]gCT<ls@arq>46NSG&3E\I%^r[`WX<^*jF[DR]?,k5Y1<Ji?8jZ2*'[6YqRrsE[DF4L%S3)aHr[^K*X%H=\=L](rqBT38kMB>hX_me+t*IB-Nd52^@=NSIaC/rr[=0nJXKQ=#i8kG)4l);8;SF>k6GWFBT''@))EJ*X%.#=@e.p!\Ai?!V;a%m$qn2\CT\8KB$FS2`fKk*g.Ha8Q+lZRQ]qA"13'K,'QBf[:CKq'>XI--Tg;.VO27Ak:IR']4,G<F1Ao*PM>0Y4g6Po&+%^sQ][ju%[]aHW8ZK)gKY#uVLB'TOm.q?"OpC]8]kBbqmA<,!fSDk_f<leg4tW=9A&@q3IUV9N$V+XaMeCNIC(^daQ,Q)prP#P+hc>3\^<%D=%bqkj"=1L-PN]I<=HV82AmcHF,m,%W"da-1`p/^S4kqcL7D8Ms\ZZKFi"Z/gnBbPa>-U<E1/n#ue6-nNul0JdEF]Rkr1$h(#X-tMN%Ir/`R@`P*$6!.DfZ^%SLm=XcKDQ6sFp/C.teWWt#U;?,m\>Qqbn4i:6GPes1cqkudXbf`D5P356c"Qi:?*HC>qc:ki&3`Ch_V3#t%dajDj6EoW<./-&G>c4"EU\oSM>JFX1-T?BcKbEoFQN`;V^:BAlph)*,c%$c'Y2W#Z=P-Ur['d.p#j8Ng1//b-PMer^BZU/=Z5%)'%X5%&UQ&kco@8pE2dXZOaiGZ=9n6$XMZ-R).A]<-VOr*`KQ-NR1c<fAj.`D%,<pXug$1WCU9:L`r%Lj;p6L*Zg7+AXcH-J]O4cX+b%IrU(aqso=c8tW6GeCep>,bK?D!aac(V3]HW>'EM^g8mR`h.1_IoY0"-ET]N6:gVk\bTRN!ZOkHgKo_<$L:Z#l&r%aiOuLhYCp!*)%i4$s[TsIk[q2Huge:Ngb6XZd&)SH=_V.J`HS6B,X4OBeU&sFgt^r_pYOM"=HG)l!Oe3Vt6JK1H$gJDn'd!r%&;Pi!?CojlTcH@6@%XWF^Gnqm"QIpG5Po!u]XD'64!60'(EFEDPmdOCGg@?\0.bm/X!qXM+j%Y,Cl.EI*dj^GP&`8f-XlE])G2n$=0%Y4=YA[oq[H8Kbl%=)%t,"qe#PJ(ZJr.qb:0B:1TUN:iJ&>AEiaU]W7@q3SLC3W]E)gpRJj.UKBm<E:3Us"J.*_q43>M&)oBB">JTY]t-i)#JK%@s<^)%dG%W7F2+8[1bNMSZj#*XS39&"Luc$dnMTqS_XbFtQCF4:p-\*,&J9_4oq:n(Qe6)T1],dh(jCFJE_0<'Y>Y#8_K(Z?>COkZKhQJ.%rjE2*SD5:+8og!J$to:@B=i_Vq&?jjH3XCC6_Tl5+/2!Q;N\P@Dg0R[g&N#c/1l(2g5b7)GU.W-^"dgPYfSebafmdQOO](X_a^PM%5Op4A4ED>9g>mIc0=F[j31FtG,r>i,$g8ra:Bc>!!t6O\Yu?D'[SUW5.&[M(MVs`d#"="k(kXu;bfE30Cr*RdN'/2HEaq'h)2mnV%XU>RA-%o'2P\gLRqVpnR/hQc`=I(*AZ7L\,%7HN=2Za*?ac)6#"I8s6l:N#+T[+bm19]fB*QbiEM*,AARg,-?W;`\gA%%&A5o-\E%;1hIg'e@POYW*hB7tq^tNf&i;*G3t!bRUTf:(;k5'^f)=e8UR-GHkeP9h,-u]sS9KXGbAJ#)Y.;lE3miW%l4Yb(`p)Zl,HN_F#YJ%)4!D%,O-$\eV6)odL/B%=FGuqXm]OW!Jj"i=OS?0U'6Z6[]L!hk'4upaL*hrRuDe*;NAGN^&\96McTHkT5(8VhqjEF=aAf-.#_.$%qRE*R-cqE7W":Gk!1_!FXMHe4>_KQW0E(J<rYBLfY`ZQ34]#-]AD(?c(p!e>QXjn;-lG&MZM=Q$n:nb:,C/4O*2hIi@/?ug3-nNY%epT9FU-Fs)O<7j7BEL7#JP\Zo,.Llgo8Uj5msQt2;:7+,lEX^,8sT7.XkZB#(,ipEk4e[J7s-:6f6$1K*oQO]r0]UhUsG_DUKCSL%'4QIs$EZ!<U]t=]gT"RcVRX[AbNr)MrRJ''<;b\=0Qhba!UO?.Alk[e6LRV7.]-R89`qg%(tF"hW4VNVmQ!Pu6M2@,B,l-g,T^UU%/pa?rj88qFc+2/ZCi@ePie+j!jQHpS6:PTYVbdYfls\eKcLTXq2_UT=0/g93edB(mqf\M538&`A\BC<D-Pt1t,K5Tn24sND!$s.d%r?T^@?.\':]@lr"g7CFB"hjd?%(3Fl9RYqR'5Qt&,aGbmj2pA?HiUI5k&j02a>)]nS0&mGK0e`J(d'4h1p7Ig@3SHA`QG>Wk;i^8%+#JO]U"fTZleaBnr^/fn!.\f'q:Cs=5$PPWhLI\ZUBmm8S63D:=BKpW3%6VBjj[^G0=#Lt)[.@^o3#h1QBO<?H)a[Gn?UtuhHp"s%i[ZY]r3X2&ca="]</>H=Ph"[J>`Lrm\8(O^I;ut3@(C'D.LuI9/sNq,/R@PGCGkd=:@-C9_0l_Ak="jMda<JRCWq@@rrDAJWBW!\%2g,Q^0.LNr7DT=#O4,0u)o/gFJ(&[$#pV%JkmqNA6%>R3!f1BheKge#3JH,"f:sA%j0KVMdNcr$d]&@O44/tG]kcS**MCXDD]R^e%!r&t6@.*nC<@ZLIJT]Z1;YsN'4B_io!^#?A,smcA6SEs0gT1&QBT`)u+B60*cN<=)grmBQaNFM5eS<SF,bsAD`N?Vcq6*cn9"4s*%,b%4$EM!HA3J_@sfc%X3K_T.cH?5et;JTE9\_#IO-MPs.Ln[!2&epg=a]97`jN5)iM*UKW#F(`c4)]#uZgiBWA,#D*ICMcU0Ak,n%dD3H[i_(<N'<KA0HSif505H^KjQWiY9gt?#`I'bBKE_JI767&=,9+8Ng/mgT.`Uc5o..al:RPH2];%pDS"2N<o2N;D[L9I0am_9$%dUr[Y*h`A8QePVTh[CDrV`RFAm./S;@R#/0g":U4W4_RHDtCuOA;Mo8mX-;l65k2to8Yt!I2d:;dZOk<5J:D-lZ^+/'g$%sA59@%%7:liiUU%r%P=9nEm^cOP"%B].S9lF5:YE3tp+6iuD+Z1.<.$q'OK4s3f.?'I&t++XI/ni@064bYl#j"2gkT^e7trD+*T$6Spd+3C%1A6rK4=B"$MVkLfFYT7BZ9$]r!K&>/!s@ZT.fZeSO')^aG!B2=Ol$uK5PM1PrW97Q+I/mIhP9/Joqq9g/2=BLb0-E>Hs#C[/?d,e%nW;22d.AiYnnBB*C_:T9?9[f1h;m8Fr`4e%LI"km_0#c1\\s3/maqe&8_.XAcf$5FOY"?+YN@VbqiN@@"Z"n-/0tR:o<Y]o4M,:$%"Z&]:+Y#hU'0Fb!#J`1LPLO/hs)XPcQ?nt=c:Mq=R1BVj*d_,4S7\qu2!^6'oF&.aW'4`&X-`!`k(`.3/c>4g!`0rV76Z++=6'l5%o6nR`<YdCs#jn#83aPRpA`&iG(bXKuAq2nk=P(/O<Zg\p9p?dJ4`%;RLL)*GDs&UTqi9A#Q=lL3Y:Q%202!fA!8ke+meKr!MIM[b%pal&YQ1TA^&5&O1ck!*rH"Ff[/:3.U[m_T8V3",C(;f@/Nt);5Ya!J0Sq)[-Is;@^=E_"jf4'L*D#',kY+4MHbBKP'9t(+aBu7+]%<!38EQ.@/Hc*CrQ!ACO%^%\eH^"^'u]!C!9<c#>YdiYXhUGR&$G]g7^aK/i:WgJ(/?Gb)[36K;#.<%LlP*,4cI0jZ+,8f_Li5Y"-%i$-tJH5B..Z#H.=]0#JZNpk&X@F1S*dos32i\ujD(1:`_+Q^p5hKAWE$Xr;-*]J&<[X0/*gl57s=8%V<C1]!^N=]HEm;D)cc1W=g%LK`mFX?PF^9:fa)O4iRRm?h^i;&?'"5"E>@o?#MDU:R!V@3GBh0m4q:g.eoI:-<kO1daY$Vg5u\E:\/XASEuJI(5OEdaH?)gREie%]DOk?IfX?AY2gDM2bDrE?GUQ)$?-LR$J9;N@Ha"`&$O+#-!06#e\/$^OEpRp6,HYdI+V']ouGOXI.mK6PRhmR+C&g&pO,)Ncfi$?%QpKXhh7u@(GU]f&PY$FU#Q*8<kaLleYgH&D#)aQhUDuG@@nRmm-ChfmKmT(4-qHlZZA@B"4^%m%\</kn;+eea[J!Y0m=JS+W^3!I%3$m,$er?8b)lFmc=$8`K_UjD.%qlaZXqd3:8qk;PW:6#Oo^X^j2!u1O:LNkiQ]W_Kp*cW*bjM*6UM'7:"4chFRo4]`D3G-8&/,,J%`-rA:2K"A!oig%#@umdOO;^ItHW5H0F&@/>LM4o1[QCn+I/(4e)]'C>lG_crI*kWQ.\/NO>GTojpN11*n]P;hm2pF6<NajE$QA,]%hA3W'MmN"SBlHKM/!P9;He<**JD*W)^^Q]Krq.PT4'M\tamD`OZ'/@2aaUd#Rj,[AZ"gEc*CN$DPuhjpEl./$@_/tP@SkE$N>\gY%^!g2idLF+.]qmLeh[MjY(!>8==N#jb:LJ2bSuN\HM9fPbe_C#ETHg>%5oOu/^sb4:jJYX#S,a0YRVSdMrAri^*nDt?fqWLG&%=h8%jaEn';eR?'.+_fd>YmpS)?=Q#fQ]"%=g3c$gKggF]%]naXM4`E=`'9jEI9V,'8I*PD$rQVYQ+d%>#(YQ<sJKPB;u,LN7Ko9mu=-M%,Gkq0+7ct$LCj"G!0kB<3;^/4=^q9KrLNjZ1E&'/dWjVr#HQ6VkE=.1-+G&(@9j[qX\AnMJ.Y]'lDhdd2oi1&U<r5DZiOR]*=B:Q%]sZV6m.&KPB3*f:?ITc"g&/#^:sj2%+?giVCpJ)iK)7G'Q3Y^c_*S'srtNTDYDQo_AfQ^G7@#X-@rMoWo7!L,!97o3$MTDJA$/^)%h.5F'.h.F/dKGmdZSX6cb:.!oEbI$++g_E@WBY3Kk#:I?S`E@\+IPTL/Gi$0Qe?+CprKTs@T@<8cAB+/\&4^OSjZ:FJE':JW1/H>%+qe17Z&f#">6na%pK[Oe+I:=`;J9;*!a$GCO_hb&3W])`]U&QLg5[QcMP\@;+Q,kEE_T?bOJSZ!l,@*m^6Xf\3EAdbh[S"3H!alU%YcQdN.Wm0T?eO8][1B%U$uqeDh(IhJT@1O4B;q1<S41L#](`H10XgkhI[$tiMO/kJFq4q(0:c/i,;o17^q@*88t9i*#k1B6M="Uh%liGRJ%uBH0cSV)R)BGY,_L4sNg[*I9/I"3-C,6qU_n^3)\D5:L/\DZb#iruGP.gjB9-KR^%i)XNV/NIjTX"F;rHgX'-9Z4=d#i2C%=qUGl"H3hW$\N-U3H]_aQI&\TV?!^[We8:R`7Y/sk3:-cXo-B)Fj^>Lek\:R=k'mjT@_;64hh>J]b@7lCE7NL6;%+@`F*l0=n\h7%[q+9rece>08@Uk2iA\<p(Vp#5afcIHq1G!q('+[)AiZ;Cg/s4O7rJ$eF4JEF%;$4-:j^@6f&@$Ap_RVID4;a*:Ybs#F(C@^B=Jc9%Fk2(u*K(1P.4+-LaiV6CiRHHXf$dWfCEJkam*khF"oS<sF$HOF#3<aK%Id_7)ZX\07<A9i6F!;`,=NDLphQ0YC:pn7aPB"E>DT(b%ola&3k21*g@'0a=KJcJ9)@I(VJ6t4cX.NO(3RUC^4hd"\-\5(?=p4!e<M][?V]h6&^KiF@Ne4["_6XWqa6Wu9W0eR$!m1c#SnIXe%Po\(ZQK2Z/\jU$=VoEgD[D&dhr"`'4c$lG:'N=/Z9oe6?4\O,VQ[T"1=0:5p@C%sZREe\h3-kaaI<mEf*X$_43K`#n[GI0P@TN?'%/Y>@?/]tE%2o;a0[nHOMBS"(EB-"iEkB?l1Y)@ie5F7fJ[F!/VnQ;@])6/5.KDC-GpdaUu'_MNg\8>Crk"1VOPKptNndJ.<L"XJc%ani2c;BaF<iapQf(QboH3]8U`^3#.7as9uLI_4V]mkb$qAQT*@>0?MXUQ&>s?s\,'0K1JF333,fBY640H>-HRi<@r\o]hKH0(fWY%MK5A3*G"'+[`+PQjoNc+Al/F7Wh-VdWck4rcn>`U`%GAA\Hd=.A;MU4Ce;S&!gVU,8(FRgdlVAIJ]tJT,mG#BSLia2/5?T<::h8s%EiCh'MCko^@GN8I-gX?/Q*a&dLQr2Uap]?g$>;%:FQC>H)_/_(\>RCsK1.C1O"tmMZJcK+k6-1Y;bJfI76/*ZO*fubg:GcMJ@3jK%.@jLj.!HW4'3JZ&>l1V_#8S:<9]tZOlMf5)!nUCdpFd[AiM*\mXH@N+Z.p'T*ORH;I:49P%BZZm)5N6\?&hVoSQ[qAO6fTFg7]A?%0OFE?<2`YPeC02rF[5F^0Nt\f(P>=c9+W3adX3_C:L.cAHbs\l8O>LP[.0dh$OT&l=>s40K8$$c0H09jr%rWk7iDLl^toD"BctR"%Knbo*H\](31e\!g#/O^$VerZ6_7g&aW/ACq3laSn2MFBbZtut$5`X!MVDkI)iUdW7=]A>"G9`1"##mAYZ]j8<i>]JgT`"m%nrMf#%&a6g[D05:.=TS)pckjmu6*&EL)GR\-58+K9knGffJ4p*Y;4Y3p*0AE(@cb0Ere!9IKDja5X3>l!p#HuDI^7M9DDMM!bTLO\N>Xe]%i`$1uQ";lq78]N=!4L1H<Y.<\?&>K$m@\GhJW/Daf:S?_:t2K10aG;`7.p6bCLuQ%G]k/_BEY0-;Ca*s%qUM?U\TXHm\emB!;/3r%rFf1LW7"PF=$(5J"Q;KN[YG=^ehXXncrQ4mfGYf6^MUl9jT6Dm^5;q432=1q+C#eVfN,S#m)EDCNP4XMN/2>@XDdIUq_\51@^[qQ%[.`KGq[L6kUA)h/FS:\IHlO\CmKhK)ibhhE95X$#ZLro/qI!qZ&mN$XKGHIh5IMBZ:@J"4c$BK)H@:](C^cK'L!>h9lp?@bTnq@H%>o4"m?c]<S0KlF[![a94@.qlPGNj4$:9aJ/lQ0&uTG1&t/TL8(AceZDGB]sJg?b=Nm2tr5h8I/'9f+NZ1Y92*j#rO<cek#Z4/nc#%\Xqg7ascoQ`C;2[IL4"EZ;0?#!(H,r^C9j&XGr+NDKi-_#(p_5&i$7/K;$VmQcSp)WFtI*KrD,8B]Lt_g[5a&gBN'R"rk1.KbX_M%>*nSG1tG;6R)J1=0CWVJ$,4-sRKn9-5+OfBfFM0DT&[r1kG[d@cc`6*5fb^^4t,/F/qiQrh-LA2HXs'j5Nk-'a=L62Fa_V%80>:L%\p4p.(c5P0$`eJ3qa$XXa,Os$h&b"`r%eul/R<Lf76=V.I/8*F@8M,]\_UQGE>\?9RE3.6QLmI?AZ.M'@:=M:4F/I2%U(ibb)Y\^%mWZjXBM^sPQ(3+oDZD(J%X*bLfX9[<%H#PD9l^[Ob"+mq<$]o7T]`AVQ9jR$ek8LT<2X8PfU)#)]j5duFC/Fdr%_tJkk!ZsV:2(B%J^?.mhKlPaFaN)H[o=.sm0C>GXR1Hh[u,?]DJV1o]DA1.?-K+O^3@>AAj7\bG=U_>im`.u`V_g,I+b7>limoPM#>_#h>pZ#.J2"O%aZ'_Z&;AB\C\pC*6u#^1F*D<E5fei@rmKr#1?`!hCdIRI.C5eB2u!*02[t)J9bb,D#mXbF$lTEE((Wfi]bDY)(maJil*pG,0/sB_%/o_u@r3OkF=lNujM+<2m?"5[lLS)]e?es1(gHeJ:X0go[a'slPlir0,T6Z5(V3eSY4'6if`s:Vg_u3ckG0oR*p:K@XV>A/H"Uu@U%%E&$=+Kgbeg\-78l-NFZIs]4bd*C%5h4R"[_dT`U$B'<;"@&Cg2g`SJqa"#$F"biU:J\EO5+R*AU-YK%)2@h9?+cJI)"]OK4S>-T%qa"#-F]rF*K!l'p7R=r+*(JYB#k!F>)[d..hH^`(7dJ-=d)9X/EFJkr!ot182Yh&uR_]C+U't5!f.9V%G$bs7d@f"SDYV!UBp!XG%:T!'CS,/dc'K@Z-p=H2loQRmt6$q&&N\Y9tDo2Y@_P?V)-4cQZ,7i%NE3n<2g0F]RJ754j;X#le?j20pqEq"H@$-]Zh'7t*(.#I`%@8:B.6SBfCa(S:/MDFO=[jtG3E)=D,BXaHD-'`q?(+b+3ikLY6VV+UK6nRV.Pf20o5d;D!iIs-blJQF==\:`h]t5Ckf1p8M`5-5&%TYDM1r'9md<uepYCTt+,;<RUFj=G6&"SkqrhY',G6X7aAl\i5qmq&2;I[GM)I%-e[041:-eqN9e%:d<E;q/s<ea[KrUV0/X^TF$>%D<Ysj(h8oX(9<]&LT_?r.gOg14o+L"l6gNGp1g@r)Q.N7@WD`a=-]OYg[;a+jg#gI?,sE5Th9.;q<_ZM\YEWXk5B)ZR9Oi^ql>5'%3H0BCED<8_oX@1)COP8fT:N\#;nCV=42*kPR,(tZN.n;!8u_%Houb.oiT%N0gKa$>,!*G$U@o?oB8iZ&W9(F__qXqeOkX#?@8;Qd%/8mJi(VMunD'li2jiW5HCLKB&^Lql:k,$`5b7M)3LQ!F,?:.H^[\L@-q3STBHI>^[<;t,fa/JtmoIr'/OX'i8GaQ7gn4+0Vb:d[D%0/N+<%J&C5mnK)[b':d7>*XKk7;?u.4JKo<i9-KoZ/$^P'mt8U6G*=^*<SgM:(lqoi5a[aJ7r4n!TUk1CZ@"c)EX3A+Is9hh8*k`%@M60+`BZs9(3qqNK<e.scZu`:Pe"DM*#'f`?_kX^1W##3*QLI>b,[Q4=u-Z2P^ng2(cHB&/f=kqXfO)<K-KVg)jIe((L$hWUkP[[%d'Ysr]c)Y`+aAc_*#)QU%YFh4&6StYqOdg('<FuiK)u2M)!=2Yp$XkR+9_*3\im.L$W4B!MlVkj,+Cn@'_8tP=D1Wt9rfc7lL=!r%AKfV[pU(c3]B;J\D<-,#QL*&_F7/bGZX(5Hd%)@4dK&FMPTh]7=SF].K%RUj"DDuMK<?D'<_E6)NfQ&`P+2</h+kI\<h+:\P@T/m%\$NO!d<Z4r/p@&Cj^2[:]6rQ\$NufXK-SjVBMsTBc%VB(RjX@S!&B,U!ArODbQe-WdubSPU/+&@V.4X&)q'1?)D,PIAp1%/cGEEc%7W;^qp6:pWR.AcfGd%5Yg;1@X*SG=3`3B>po+a%_[>5ch0Q@d;L!U?$O>gc)a_juur1R\"`[SS0<WVHVCf7<\KHZ@f#mVZ=")7Qf%80<1%*WAk^00Ab`n?"<&_A<LB&>C8,/#]UXC!h;+Q8JBf'cOE2&/q`R0$(n:57,`8lrd^?bG@"84oHo"fMqp,gf7m%7=7su:0/d%%/5oU.n^B_bD=J*pRsTjPa2U6,^?:R4nK)X=Q<Ej]%?$h@S6>L2NhRoZ7Cp%M_laT&g6>;;>`hI94mnp##q@EV*Tj\rgQ[19\0Kc%%\@[YM3/VQ#Y!he>>L;dRrI\_3@L+r>n%*o+L$HPFMR&^Z4-Ala"Y-8_1I*7X7otr**tk>/0Zpfa$QqM;")%qLF12A/C2@RZo@LAb%0Y,r>__Q(P87?f:!6mfio8e\E_HBO`V2ZL\EX\1kJi`UrOgpt8FbT=&f]?6XjuX`IbBNAZ#BZfHGWTkMb9_3#MVNkL*]=Fr'LQC3%,\&fXCq#o7A&\\+5JVm9J`pOr!:X]#E0rQ/0!m&Fk(R4-(Mm`m>H%1aJD;Njr`*dU$6*:ah;^TM(g`A/_932''g3Xq?6J=-QnW>G%]eQa'*r:n3.1l'V^'0=V"96r9*UhSeAiX^\X:n0,]Im.Jmi=FRb-O`P4ual0R$+dAV_26tKXZQKbBGfp]PN&G$FW=)L4t]]/"F*@%Y%1-GUU*i;@pX[9YrXZk'Yj6;GBfCumbF?M5<p-h]!4!`d[_N#bS&1`]K517bU_9cEa8LR]b.AVe,B`Bc[hWCk[`&o.VL;[>@6l]%@g3%iSh'\bM\G-no^1hI5=\l5Nu_EG"1Vo?e8YRREW=\%>?o!e4uD$BMOiRpVNsB_#kj#3JOM!>nr*5tmIo=@4Ng,,8fjR]LD7Om%LrHeB%4<35DjZ@I,B#Q?W:pB2\pj/-PKTGYjs20'[tf:p<MG4u2YcYNdX9?\!"M:(?jSHqfJ'bn_gt)`h9CsFaNpZJ7MGi7BaIr1%W?6.^bI@W3:_s,Ark:19Wu*5qi$$oe.sT)jXHpL?lhbf12t_&85ucN$R="36FNIq5KsPoL*.2clqfNgD5*[-=2e:mR\>.f2]Hi"Y%T.FkHQH%qJ$[S6@Lm].Y#f:%_EEfX$41YQnFqHAoiYG0HZA)nlZZ-Ap=s>5o,I7RBi"UNnA-$?J7T*:EGF7Fsjs?PUL,UqBaZ>]^%JQXRc&DdD/n4=dR:o;C^C>l@]7Ai2bI0(S$-sc-EDXQA@(&*8mnW*9F7"I_<#%EA,U1Ao31dr<D-<#5??o=b]*B49;'q("h9LC?Q%>>8fr\<H;71nTm,HuS*Ro\L=lC7toc0BPn>*a:2SdJ,#5Z/uOb2k;&Vb"pJ>,=J:ga&]n:"Ag6%6Ks#DbXudf!O-b_M?c8p*"ObW%*^TXQ7FaEOZ2cs%7H^M&N4,erMa>n0c)OcRrW\#_4Mr<H8$4XEEX'`8l7_9_%.e>X:>;1\7Bs<E6"`s_<kE%Glrc<e>@D/.R*XVr%!_a75NP.o7<m=q3"gIkY4-KSTU[3i\rJ\pNE\Ek?WV<.0A3^%ff6`t$Dpt+gLX;Y+2=D'Y,3r\oCpl;Z-r"h.3t*!kHl<99ZQY(7%JXoY8hg9_\7Kgrs>fT1-_>HuUR^AG^U@g_$L*Tsk_n(DS+jk*N,T2-"rQfI0g6F;<<:A@u"`NeP>G;9TGE?3FUJ!G'.gstW"=+mf%2*6ZWS+f35r[$8plpC,QI#/&S)1V)ip#E=s[$_D>]/[&\aNb\X.A:P!c%@ol*ST6rbiY`^h\,]H6a:Y+CtoJ%<PQ2KIQEB19Znsh%q#%43a38Q,hOg/=SR!oD'!d(MUR3&Vqn^M#f>s::H/bS9-t(RV8PMqm`k*<Te)%>G'Sc_fN1U0&H?!o&/N`FXrKoP"0uM0m]*YFB%8]7W?>mTBCJC]EW)hOuMEU8#SOU@#5]s0`7gDep]Q6CG1W"!Zmg%Xnh=P2=%pAO$LSM'Q8`Sdcl%quJg1"af3p:[.99c&hm`DAcW%p:X`bReQ*o&$@g4f7cc44FW<m%8FG'`O\j(7KH:4P)]\,O)5r(U+8s[;gK@:UFku`F]f>%.Q9)*hemAQM,dd>r1LB9\_Aek)r>ba%[<BA'QFX'!,TOeF,6DWu`Sts*h9ueJkB4upEeTWNB:4o-7A/EW:\M(DVG&g%Um<d`(m\NcTpVeND9XducT-'k_;>JRU[V*:_-E8^%jK`VgB9%<t>-nMnTcS;F05hjI-P7L&(utO^(_/Q^E$\kc=><pg1C%O,F%sB6.3bG)n$+3n8J+>6V.aD-F`i,@)aA&kH5=XATPD$o%qa.*,nZoBErL@)JV!)Gn2j^kOTT`/h)8CpOW5XKAkU[H9,M1;Q=3r+Y4FnD3a$EQ+SR](#cPek=$9D\)i&ET9mM0gjX)Eq83qitB%;mkO#20A7$F=u*q^1ule/*Kg;humfYgtO9ceRR4X%5G#bJkkng`iPkTYFn8VR!0"1.3[B@_X)Y-DeEoKkJ0/\!a1[l0W&A"l-4N%%DQi*N9B@`ho#SqW=f_42'-+fIoKHg1g>:`8)><j2eqB$Fn[,]A,$/ifW2AUm35o:b0CdaHLgo6$F6h%5%grn3'^P@jSAU*-'"JqC%(OW%!r(kG.o$J\&jYeEsOuWf+YG+$.=d-1fK'9a.rX,V#^/@8Xr%Zr:&H?0KVk>b*)/SYaeQl_-*OGfYZ(!`edViM);)28FE?iJD%Z('4NNS-tq.X#n,:YdrL%+6ooRLEYG9tf>DS>D[j<%3dXR5kG/*8[s":nM'ZO*EEQaSU"(&Q_$(]bT6]L!j%Z.B7eX_5o]ip?_md%m.R_BHYbZ`jqTlR89?Ck'(G:RD:7bV4&uMTZcfT\b[;l&lbGX-0'kX5JQE>oO#k"4=8g=*.;7gJRc[iXj).I"kJ4:he<c[P[;T-@%l+DJ:3Uk[("LWhAJn_iG\931UY#e>V)_m_ddpZl&Wt=[`4!.4_.=O>LVKdKIR00O#@a)/P'H]kOU5ag\F5WBWhqgfGM,";A`-RnF%/j*?].-<VXAne>qBcjg+YEuS;iR#E]U0/_qFR_sdPOQVn.sE(C3.%+7kMbd@+(.0W:*!GX'M%B(lY%!:cJ#69GboF*Xj@I7X^>%k%`h"biM48^N+lF9%L/hpt:>?E6]@Ft+4Na0K[QG-emRNiOL>49q4#5J.9'$Rrq\U_?m#3o$nukE1i>ik=8[ajG$KQr;NcRWghc?5-%@#l>fEkK]dNqV,/6\"&8k;#,7#1:M:Wd@,P!Z"kSR07n,A5#oWeK]]<;1?A(/lOM]ZaU]k_%VG_-26bJn"MeN.9Y!bLg&fQE_4\)%+u2Y:+u<hs)R+m]0d8Bq*hPrJc>k\O1/:6Wi9qbI+-?REKO(lFI$C=a&s4'3(*#O_"3]%B&K.L(<3Q-\``GRJ2U6f*;4`DAS-)FV%!5j(\11'eu]W-T<)p?:5Z0[u>NajWhHWM.Z(rY?=PLqme9I9jHQfQ-NA:ciBZt.f6V\c6>D8ZR#UOIatABrRK+6@!"W=-/bJmNSB%^6</a1K74W*G3$WCL*L)FO[-bfK0@bm!;3fJU7j7V/**fq=%O_n/8*t;et6\&sFY@%gPUm6r';"4e2QDa%!%`ZcdqaDb[eaDN$Ua%+8'Sj)6/n$LP&Ii0f]f?*mWn9:rac_dHfabfhgrmX-9]AZ^s6.=2[hE*mXAAJ;MdnR<GYc;CtD>LU6hd:>7h6P&:->HDoaKQ4jS9%1?V%dfp4TXOk14H:8A]ppHIe\c%$3pO;P_N*VHc'[JH9hi7*lKp*/7$W1OAqEXcS8\E(GP9/KaUk8Y$Pc?D2%A`JmB]_]0&PjuE_%l*1d8-?P4?gg6&ZL3iBP+f[4K)hQ@?O-Qu6@ubAMf>2#c(Mb#MgRl5o95'ML%2ecuO*r#5O[22F.>5pbn?eQq5L)b#4.N20P\*(+%,d?HGB]c8#jg<%8c/BKT/3\,>fZDU9egaS>`DI::$nsa`/3Hg!Wj)8M;+-:EOX_n_E'aaMV1')W8:CE+9LUGtB+brYY[2/DMH&6O%,Uu]#5Bt46>?kXL]KX7VcA/:n:,6"2.'%8u_qVHLcr(3`0?5DF$A\3J>r-dR;$psJ/e]ml)a/(Q`gFC,m_c4JUD2!u"q`>>q^\L^%2Go1C:^UhW+2d`smbA4<UF7gfTBoVR<-QPd`AnOeCl`/%*c;R-U)3/GNYPF0#U%%1S56TbBu:?"1@04+_,-,?LUi-!Fuh8fj`W+L%+2tk%fihJOk]e)-<B7#*;&f2$o.Ra6DUWJcAI[!$Qb-o'6M"B*aY)*J\NIX>s-tb2T',fWrDb!9oAr.'%UC$F^!Ciq;[7.7.$KZl%1RW@O(g]O*lDWtre20s(M)^o=Z0\L9TU2J(-p9QASL#nOk=5"t(V=NacVBG8B>^D4qKch%6#s!0A+"6jMVW#%a$GQ03UKjU(HQ?%%#Yp#d\dVbun:j62[91P1SfnGR/TtWAlUC2Q6;%X;@b@g8NJq$F2;cH`eT.[oA!`KFftjF^Z.jn8eQL)/_G2SI*=#k!MY3FeTVD=3%Hl'9;KB>oN$BF=UDUVfC:4ll?/*tW_!es^J7_^BoT#>HSA_0\;.[XBpO%$,kRC.+HSYA0'XGnBLWd77Kq*EK0:u,U$(b)q+$[/9s%_d_=E3a\!r;qg9&Tk]RU38\6=M(p<o^6m*>]TQ4,niUIOFcn]*fj-[KF/B:6FNNns3F>XnLFdV+Udm9f3YTq3?D#gqEis\9q"3We%M4>f<G5&^r>rI9BTD)UnfLYbJB>ehVg)0S)iU]].FM<RP1#3T=!]p'HmjQ_.UW$[><n#at!U<s\PH1Ru4<J1ZC-&toTTrm(YGSY,%V&Qi5dCG^k/f&AtBg5?MSI$kTce=sT2HD]+>ur'pKT&`%2kie8=\WP<:S[0sM,i$Xe^>?6rQ/$fg""MZk4\SKVR)2gX#I7YY+!XR%F]"rYU=F@/`f2]sF>DBgG-uE%Vp19"9fG22qNA1]1hnn=ST,PR9tHe=DZ+CWTuO12ZZbGUVsm7-FAB:+A?4ta0fDcaSY[k&T(mu=%ksiOWmqOo8)QS]pe(N>R:V*"?XogB#KWFA(G"XAHn.VatZP*j]mr]8nF<3Lg'<7r$eh<5cVR&XEDN.GlRa.ssCGOF^G-uFPp[O73%!(M&8cud$iYG7SWDt+a[UsaQJ#A2rDV['PtOO$HmGM.q(?es(nqJ_d6deD9P>8MO/l>Nd#_NU!+;^Nckan.D@0M0&ZT\rZ>lng07%P]0%l`pIg/NN&&;">L*-jm1W3[jfuX;E.8c(Hf65]BgXqTb]G27!mulcf,PabC%@j@WV:bS9A,&gI6<r?ZTj>k6fZ`+6AqQa4o^9%Z"fOXYIS_SjMEFC_b-#0cVN+F\f5Ri$?mM\>@q-8<*7c-Gt&Jk@`H.E:9e6_0=i,"RQJ(Rc/YN[]Zm4snH@.JUA(f]pI3$(ZT+OY%MGiV>2n;G]jT2%AXPqU*j":kTT[#@fd#1(r)'*gj>pJi@Klf9lblR8?6g#^)m.s%&MG)ZsO!HK:*QQO!R?I)XfE*9NX]k%Ii1[-1%0\`--jg<oD3,adYfO`3[!^u.4&!!1i"hO9K+2cBY!hJ:]FLrnY,M>#<b/a%]6K!iT0#rMnX,kpEf%mKP]biN:8sA0ueB:Z7]5=CK%G:boA%'-V`kmdu7@;Vu,>Zb3F:[V1If\&YF1.F))Ar@nXN4R1EQ"<$VHJ\D]Q:&>L]VPudnV/iu>s32**,;bQ0p0TmmGqdWQGd`D%`PJ?f0Ea&SS[XE[H2l%=7Fb/FDt)boZ-<Tc(UpJ@+8nmkPQ87dEGqnDHVp3XmY!rW\Z/^JKab\=Gh4iif^KfSO9$j55P>P1C42r-%*Hra4ThTRHW:s?i]A_&;no5'r<!c:0iGKhuja#DjiSB_WDEX,*;r7:ck]4S3\Ln2d5%KlsmbI5WKm2>J^Yo[s<-)1?1k&m#j/6eW%3-h^[KsdR0D_ibkA*D!Xdu@C1CTVuCNuL<8on=d%jj="P\O-7R+?,)$Lk,FtUn712_"5N-qf/cm[1k>!]T/CFfB)h-Dmq6+1@C#d%!O4Z'L<6[?6=@a>e9g(,bF!7+Qr\F&Xe)IWMrBmTR=Y!dSa'Kplf)$dPRM&%W4TY.)HS9'3*_;=`3d,)[Mn%uqN\P(MO9nhLu@*G%/t1@`@<ej&n;_K<^Vqn63@s^o:;-g>&iHh[W:Qutd!tS4,Fu%(*YBlmmBO:F*DL[3G2FWGj*Km51mNP0VUG'Yh4r"bH*Irs>RgV1%V.!b24aYejJgk,04hK7S.M3f5&4Oln4Os(V'lO==jm35?8]Qj/Z:j1S.1jYiD3W1)dd%)FIOgq`lG!2`A%kF7mOi*_`IgLhL=id%%S#H\^FRRX;W2Ugj&F(iQhjk]R<T\Y\P*q(eLO-Hfk9@S,i&+)pA[8-@O'$V+rF;1[\]_B.V]rcDa$B_WMtmkM#V/bS]"`8*FS2jN%I<W8XD+u*OX5q\@Hlf0oK:5H^HE5hYIZGUgWH)5Oml`Mp"q?5.Jus7BREG"%C[I`+]uSmj%YM&[+m(WYWlJML'lblZK,0bUk<TIl%9D<U^U3kc1#H#pAl_'S^pBVgI3tIe'?0+eK?!u;rpjQ0=9e!q!XRF*OX7+Dqc4H$'N:iISlZt=?dGm\olK<7H$"1JWX@B+r=eeB3%bfVa%&gu6E*G4"N5\bZUm08tr1%S/1`6cc%mi?1PP@oQe\KklK[E<J]OHQ.^Q,+ndnh+bD:$Q=+'[ZN_R0>O4P]]d(Ea62LRp!N,%,sNhlDH1nHP:+DL9(U-NPd(q<UF46^QXBNpW&:Zgo6nfV_j#n][&j1WNHAN1>(MdiUn$J`rh]goV/r5o17t8q=Gs]34moJB2m7;?%GG^>]8q=Vd0oj!ALqu:<-?XRn?"=!)KL:]5,hMN@mOlh,DOco(opWgm,ND6CG-g)3p3!P2F)Jq;ZM>2/=9U\P+gcE*`AuM-H$M!Z%B>qD@5ka_&F4,lh(9<PkFl.bVKZR$67i(Yr#rCkL[p3n8`5cQ3b5;#re'+n5Id`@=\rY/lWks,n,nPGL])M(/LV'0ZGA`s1#Q5C#%%GbYO`jKXNPt\o,XE\+8*#PP`WILl^gg\<qf!oEdL/`S4\(\X*5"bo@Q8(ulNTXQWPQH/:C$`*RqTaGii*E:69am>7NGWU%n^3cV%/NTr`l<9P"/6ZUIN-X"Fhud]M\Ju8mT(hLE_H;qGFQdP>>hI=_<%p4>'d.B'+SIf@:'G*/21R=4knmEN\2AfSnROjaJ@IIe`Y/j\%<rq=3!2?FbaAma;;K;4\Xa./MWW7$S!$T?OY6*5Dkq4p=2-,1,!-)cS2'7+>.R8b<%FkFspFGA$$puoOV0r%sZAioST)k7mGU_NH%<8k#cb3*mlgLMquPA<YC%@$B9jU6`XXMTg$au=]4o&$sAchW%N8RBPpFarL4Qgu#h$?/nEj.mA'H'JRqhs*0"fhb2&3#`4r?9bNt%TuOgucN)Z%cA$ANf?[fqd\up:\_l[2db.GTp\MEjL$UsBs7cBC';+UD:a=c]k=s'^\C]%i1IR.+NHq_"=!cIO!kPPDq?94"!kOEd%qRM5jM-Z'fYFfMQ6auoOE!(p`]mfALfk%+BEj)*P3MP9-k4jbKY*?=W$[RJQrS13Jde:W"][tJ0d:JCTS%u^dmU9O2-W%A/lf[^$%g1EX3E3Gm>RAA,Sj5%a7JXUdip\MGp!os3B\C]&T6R@9=cT$XIer%sSn+F"A2%@%k)/j.1`jjXH_M3a><^5'$?,"K\#jkq_caq_b%h!=-PX.Ml'A)?P7SoAPF80.#&5J;NhNYX50>`F-7T0!+:"Zq9^rEOTLpH_U=5/)16?EinYo=.O*q`_a!me,%TZ"5#leJpsNqRP*=%G\5]fIdcrN\)cM)#Eu[LcUin!&+:d(<kj>scDs$`?>ShJYFk]@ZT3qOoR$P\fX?*aUYa&S01j(W5/%?-O*7S]q"O=;'JXm(hCtJ#%iU86[CIRN5p\L9ZgI&IHaV@2'hs72*9"Eb.3qg79mUhI]NVU<?ci$nZYto47me%MTeq\OS+%G)P"Rbr(^X^[)I=*8>iEE&=n@a:G%(W.20oeVO^f"HOMTk*2cISQf2q7YD+4h]%5`C@SncTT[t&lT_E?9ap%1#2'WIP)W>]mc`s/^5.(?h<@:=,q:(T.[Y?DY4r/HdHf:%T.<>ID?(RC?9`YO;"e59^XpfF+BHn2A)HTb#1@guhiL!UI?Klk?9`'I8@Dqh:9qaLf+6&Z)>d`)j%9f"i4)b<3q0'G]mfCl_6o/A%@Kj$BhN-?gLO1s!mHhtZj262G<*_[bd@r/-;s2N1HfD`8CsbXF.ZN])2nM-l@i`3%Ro4tJRl"YTdLejbc9t^NkGcQ:/bWT>)qCuB%!4?jSYjl\D9Z1g534TX&Vcm1dffb9,iV#U>qTr[7DZ(uugO/!6Y1CLQf%Om81JJk%T;Io<#AJA?;5hn#\(CRT4L'%5EcUl!)?9WE%HO,;7Ga,0S:@bmAj(NW[?7[e6l-#-g]isZR]r@@;e+i*K=F=>e8Za`#?]4$hj,[_lqc4@(_X5YcmPEAKDmQ>L2lD#'bB180L>Es]%&(_$YV$BJ9'U&mmUY=#LX)dHN+hI3V^HfJ^?>jZ/X8>:KI@MYTDq-),^ogpc]<?UlgIp<Ap6M<'8hXLr37fW3b8WOJaA%mOnr%89%gTO_gpF*l$k4g75[X)&1R-I>RmY``GWd<'D%^gH`,eQonn4JGd;u=NY4(KLF!-%fcE*_\h"\2Zl7:TG%(!i5Ln&r>dm;=Ji68@q]%V.OS<"tN9+eDei/_.JH_L&#I2D,c_/ONNp5+_"TU+b0Ms17RVN$i9qNc813L3Bc56!"F`A4$;l8U!+Vjb22=#>BGF.k,E<FbFW<\%Mu0dYp<e>j=51mh9-<?-Rsk,NTWPn3BO9R[V@M74$L$[L;sdW"4u5lMHuQ<Sna:[PX17[!C&?=24_h%P?dShH9e^g.9<-G$0\C8=%KP&5_@;LZ00S;+GhY54lm8nZ',F+jD[f_2*AL4UjT;p=Y,b8A9UIX\$c%eMLP&J)2rqi<n^@U1dp[P04iAZ6G5go'8RIr5P%j02>%En;@>!#sn'a4cBR`Im@NTDSlhNn]BN+5:/o-"d+a%Hj"KgL"=#_B%cWcaQj>j$sP<4Qm=4]ls-FGce@)hKP<)?TJ/@h$`saH,X-9%ra-3)*.Ru]Fk9sB(YMVAmLt*7d/X(6].^>_p(&f_T)R],B+JA)45^)&nET^CiRUL0?LIj_b-gUYQ=p6smEPV@Dtri5TA$O*Hh#O=%D-t;nJ+)mLoM>7j^#r^+okbs,[@[Bh1AZAQI.HU<gBMokD9kg6rr1)Z0<Mj)?(/A%jgUR2Z>[,oJ+9H*rUI5iqM:';XUsK7b9()>%dGmaKOLOl/+2@^\L@$R2cb/q$Y=2@T$\-'\0-drna3q<Qimedts1;@AO+rQGhtXgtnok5LhnJd$_7,bK^3TY$dHt"B3VUfGOs;"=%E7]%lc0DqV0&FA?_MOU;)>j$/II$+9n_.4;nXIjRIIEA\b-s=eq<cl(mX4ZWRuXQ??,&sOpuJn[DqM^Mq!$31mG2n'K\J0Cj1Z_o%^WN5Y\)06b=nr!(^&[#69pth\\$Wj;8!GC8c]d<8r+WE#V43P6?MLDqG2n;<c+EAH=+7jSfsh"\m`t?l5?r#!qWQ#rqV'Q1IX"u0%]_fR:r%\3Ifo;Van(bI#maCc(mB=:<hB_pZ:]Gb$P's@DkJm2Hn(!mlhS8[j*rHN>Hfs8]H_:'PJ,eck?T2:^QaTobgYL35qs_Ro%5CWFIkBCjbO$`]toafoiF+!)'X#Jr7a)@<H]BQ)rGQ,mSmcEVL^%(mH[Qsh_Y2+QgQ1jj\.i4f/Yk_?br8I.7&+fP)rr)WNGPSoo%NpcT!rSV-(cbGg9Dr#^+X!do>"8B9A?[UikH0pQfN?;Fj-,hi;-g@I'mf%Ctb.mrS_7;)bI<t)3Q.Ommi7u<'5Ith%lF#g0g&'Os%2fT2^h`H>Ub/K_)4a6G.+'q!PouFQ@H1(7n6,h7Cm!.o=Enb9nH1Ac[>T<[f5AslDGkTO&]<hIsMdNX\m;K\Rm>l\km.&`7Sd12G%(BfdqC$tsh/ku*dpt,4(+9$ATSaZ@nk<?HRfu9"ZKp$e:3S7%i?[1\dG98q2OMlWmV&`I>pY48@k9$Ua0:IalqQ&>1a8b'>*ji-3%7o/K;gl>0HPh_JW%]MVe6JJ-Hr;P7Xchr%>?hlO.h&!u0:$2%opCBLgroR;LUHdZ$)r1+E3*KX`ma\bWi\cVf*aC+1f"QR-8_.+l%h"ft$#L><UI/&c9o='2Dq"SJ/,*uC,q+CGTf(ZYGDc6K'HN*WO(]X<MXgcU5i>gA%h`QC<\U3;cS,^/"O%UQZb=/b<ruKBC>MH'f%N/at!$(#5\E458uXJjtN1q"(gmDi&ehV'F6E:bZbWspSo=XArHcQ/?R-fpYt3;<3bYN$@954OO'd_1;+rlp5dX7JR4Ie;jCT.\Cb%%kl+TiTb2G4_^'!0%:Du9kBU`EW4Oq\,.\9T6oQ4\#rH/n97+,kD,Xf&NP),M<DF!mCS]+gbBfR6MD+(Sg[ToNd^]dg37K5G^4T.%KblqNkYh2!'FXPY]ngtNp"X_a1G/qta6FVV\[_X`0%9gY_<\F9^h\JJU#/%`Z2JfMX*s%,94,&+H24U\O%(ptX@1I^&"An3^[]":%U>\&GBq`2U)nPr'B[;IGKfLc',PJsaT<@"4lM'MnLEC`BY:5B:55Y%<gS.j>2;RiAD:WlaTEaB(Gn@j%DiI'XBHDa=pPJLY3t9#c%jmo?<TtA9.mt7iNgBI]Gq>TFa;\[,*LZ%:[huD>ai0(7+Snt[4RprI[Rf:JZH"%>V*.etKGM3#`gbo;uemCXj%[p:^KX9dujm-hK%2Sm+Mn^ScfpHLZ_k2-^G&0+q<;[s?V@AmJlGhnu88l'_d"UUeJMgb<FIKdn7rg>ZL^ApFm:VD?4XoGo,D!dkoM?hb:rL)@.=6a9)%,tH1Tq@C]T^N+SunqgptjuD">H(l#ar71hsNA"U_I;?aknIN@X0DP@iD/J3erR(T.lEd[=^>daWmbPX#Gnd`uo^S^<Qg&_gDZ+V'%7dS`>mf(sJ5,A[J-Kj\J5(!9)#tRuo0)Sii4'E/D`s\IgA"VUsInn"Ts4;rh.qA"fMl4_M.5*@mHf>c1Q`p<W0qI(g6oR<SdnlVb%@o",%DdU0NLSf.]r5i$q4*p&;IiO<C[@sRK-[3:RMZ)CLh#$a%oV$ZtFO!`)J+).b5HadZ\)HN9V[E.Sq;:"fqp4-/p;ad"1V<S`%X*=U!g:3c8r0_D0`In3#2X\?XG5)SbGkBEA5@/;YI=1PBL&".1?[d>#57?#jg@445QS1S:%Ij$RXVLiYTDa6_<7;58T?UI;ghmFr%c,&j.LZ[F`j@OH`%fb/oJ"dB*^[grUN#gf*j2V#cD`tU%@tBZQE9fmk$GZ.Y?&0jJM"o-mJd_+%"0jZMraH]'#m[3;UOTf^nUpuV%<Ajal>_jaIM!Z_m)_T)/%:A"V0#SDVm?7A`]+?Xa3Y5H)jf`kOSo>gX07UYCnUq!an,33C$h8lPEUWg4ksE;uZb$N,:K_LsI-G8%%V,8'+@(uH#m0=_\Ioui"l[qu_Fk=?Wk2=s;cb0)/nn`aLfXV@p^Y5R3[N6@5j?L)fXqrN]D*u!f^L"\1^2j8,J&;k=s2pF[J$s"H%K:L^]@%7t2E!KnX6&,L4kPhkF3*u@8OOWH:C3I9)?bJ]h,*^O%LBHt-<b4(A^)WNBmUk9_Z+kU%o?lrA;+JpN042]HHdu%mpWdQ@%BVn6S03ru(dVr!Vli4Vs\7^'P_W)TeIspgi4.$!?_:s1J]_9<c[skjW_h-e%3$B(1qjVdn^A[`rO7+o6\Fd6gqq&QlPAe0^\A!GC%?;*RfludUIXoJ.D??*e'39U$o>O29r[t";6lUPkUqX3,,Ib_]Dp\2@:2dc+S_2ht%FSF27?bcL2s*]:lVrQYUIf8<erTj@4DSC2e%at"dprqcDfYJ/j@M(!hEVc$=ufp_)K3Qn8#Q%/\#HLLb.Is_(305c:"5()Uj_tj,#hu*]gB=O0Z+!7";GNH075!F0:gjSA@L&8Vk%_-]EkULWraaaiO:Kd1X8lUSF5]6!eUU\@Q#Lf=H@kO78SEUWgrpMYKYp5Nk&If%!iq_p`cp%Cn"hg=P+[E%\_T#)75gkj`\dH4AZ%duPQ(a3U<gpql>II,sb44l-UDF3i\qf?R[4GiOO(cJNs1FnG-Fr56_@Y23Et3d9\n&+6(%oZQ,5_=q5I2r/O@X(ji9mXFk4(X+gf%imtUepNa);^;[[/mh\(YYmBml=G5<$=4jhqlqdZ\)YLc$6#QfgHdMT?lPFO6gt1s$;YSRRYP@7rouDJL^Z)\cg"l\fEUE)N^H)>K%62&&/6JTk9.2]faKS[Aq00_GJrqbc:mG4Df0)"F5l:I>r0)"ri$6!RlKne#QC!+pED/.sUiu5A;/+!GR4PTl3J?QY^agq--a31mB%hYA4]^q5p\9gCo'&!+0?lKA*r'_[TjEr!K>h">T8I/ZDn@b-$)d;MI(mX=TUb`;!'\O#AVXbAt\DJqZ)I7d91h/DY6W;4Gks!Vg9%EprFUkJ)K?p+'L`Gg9@=LEH;2["iqE$l=Eglu+4W++CJTY(&0af9^D\V6Xm:l^&-bRFm#bJb*4i]lLCVl!nYPe!H\]Qg-)pc./.f%J?6UPLVJ92o;sriT0$q'pq]H[_gfE"qR:tSm`q0f55,Fr5!Ao@qEOE)r8EQhrN@#DHK"I:T0>M?\=`QJ(N7%e`f7SH?G0G5.;AoK%?[VUE'>_W=e'3)T^\c3FM[t:8fA-hTs#fMCq9/3oV2JCbDLI#nm2rUp^O']h0`:E"hL,(2429Quqo=VMG7VH6e_bW1jU4V/)`giF%n#_Z.IGrA1hYYoapV(olp[HpUIm%EH%%Z?:IX^h:J))C_mA>M"2s<Ea:^i6!dl8$h(_kRdH/ke1D7b5`+1Em%n-J-ue,<KpgqgTM%(_h<Yr0&/Wj"JnE/-5#mh;^0<4P6"LFcX:6o@TuX:ZrjLU#s`Jq(1@^9[1J22lCZ4Afb*&Z4P8ufQ`<];nO`tps,G6Se@*2iDl$.%pu?>gm[*675S%;;^\s=EH`b'BoCF>:n_9CKrj'KacTV#"pr=&1`tpsf3$OCoSr>d\pa-)^it_*^]-gsj]^kUdMKe]M*h&.YF)>]:%5C5S!I!@.dP'!CSgp[b+J!&A)KB8F.rVi5.#V*k<\mOi`Hoo[S4)]ikI1#"0_+#ZBI54=kIX(AY=])pAQ_,2hS".0)KtInE3]#ji%HNIO+YrB/?J)cqp$$Qipm9e`g6h&EI#_)[G%Es_>_MO0^Xuq+DjG:D;eqFJi"CJh>`fnBA/GcCin#>j7VaUK.Zi)!8F$AQm<gA]C%LH_=GrI',&+BuX)k>HripBm48rkl$$KjWft\p*s</,i?aAms>;J`c'<]jaBls7ha4IB4GZhd?6oZZ0EFN@/;KNS'?XZXipL4<*lB%Id^+ug(YLM586oN?EoL-R;HVcH0YC9$+@HqqjfC\"Va1m?n]kOC6rYIHYZ=QLS$[PA(r[:9,X5nh#CEpg6$@D?acZOfUlF=(Zo`4%04er@M5P4(B>/mBPfJYG;bZ@USF"8.>gF6ZaOns2im5i'KFd+i8*oT)GhOZCgOE"7_fUc!nVT,'r9p29Mq_M7f-I(HpYXG+T_%9%%=%j;(?ZfkJ:3H[`p.)`7f#DiU)tqRLI)USATBDf\rQht>(#db?G@,=R[.UC1qn44oBj73ZW"%3nH0OQ@dI1bd/=$7kDL#r[b<LFc%Bt(bILZJ$52CK3JrUlApfDi,S'dV>qLTcSuq=VM;^1P*DEHBJKE?(S72H4tV^W:D>VV?(`p&/UFiL+T$q($qhi:&S4@FJZa3lg3I%DF;Lt?fj=1dqq(Cj*udCn4^=MhI#M,4O\-q:[_ZO3'>Z,\9Ip*F<$n:2M?;H068,)kr.<Ys+_SLfN7)!A9dOrF(De)8)7rFg/,NR%od)W`Sq$:$9;970iHBp4X]H\,NiuPkIfI\0,42iK#C`lR(W>hCqUb1E6/TFfqhfmc>.B"Rj3(s_$p)7*#2bECJ:u#T/0''+eVdIj%/De'`HI@&mQ+E?Wl9I!ccut>4qHmIn(G8t]432OcS^8tWI!YaFNo%8iLB$iu^ASF`T]);#R#)G?+1g5,Gi:%EjA,?.QYg9fG19f\%Y@"`EP!ScL`brJ4/"OHPbcRZ;DnUMhm;K^eFShQ.+2;fQ=FAt;s1sDYmY/,VFl%QAo:7E#IWOo%VdFiOiN43mWu$,Uldu12db`m9%C3deqcgL`+eJnqO4+FsfmsP*/\"E2Cpt;dQ^]!T@UG)W0lUQ;N?iP-55PX,@pO+Ie+ia5B#k[?(]aOc*^;%1-o]+g(c`Z)Oo_A-(%a,e"4l,PFurQkIc5TdX^o\c"hqq(T8gX"Sls1WuV[DmXGIbk"f,3"ZU[2+5"kOri&s*jHep3tc.oNV4A)m'kC+;H`m+KkSXhRr[\%]5P?2B0VWbs55*Up;-KMcC3GcniuLps(HoWGD#n@rjr-`rl:Y@rNG_A\+e<sOA#9D=+)\+aXqN4iIhqi:qV_`.38U.M>2_RQb&g;%6-c0!aRS*s<`AnEd9^hu+m7s'N6aE++2h(/q$Z.hM:n!AYV76&XjQ6^D[rkV3eh3_mu$c\4!/XNHk;V;`.l6Qi-im9>44e7q_9/A%Qm7]?i7G9CpGZp]9:E)[)%5hgjG!8>2_5sP^L01PEo;#`ph"V3$<`ZuJCLu=+_rRk;et]^U1#dYX_#'Ab-+-0BVQ56lXPnfd`/"$%/?YcTCZAS/W[iA3Eg*);[3sS&a_pgSs"7)a5Mg0XY%c_Vc\.:_B\9o!b=Tq.:c,K"LBZROs"r&"qfU+kSr_o'm^@Cf;EfT_qe#<F%""XX!T'sa;HtuuUlqWqiaO,YuH-WOSD;cQ2R.;M>pm84^*I6MX9Qp#Ri19UT@j]M^[]c#Q@CaKaTiAJpetpXIL2?Fn@;U[fL3%uJ%9P2pq0@("B>!m]2mH()L*BB^[[>DfPV,K*q[XGJ'KX0b9$Y'`&,oFN/:eQl4_%-dE<XaFk?#/JB"u\M&60gg>Qa5K[mlSB5PdYnh%ZKu[R_FB;qP6RB>=kMqKp"2MgV#B,'^.3.8-`$KVK/NbbY_'!fD%6HoIIaknDrS0WR4)q.3<M)-.W%O$44lHA?+d%s+6#.d[UbCn%=[q-YCCNBSa`5Xd#>K'Qq#GC(Ba0V:fQOPH,e[fL9je"T<n!]QgY@/-KI<X.Jr\T\m6L0*k7/R#J@1q7P`c@>9,UQ2JurUN>-j[I%+2jPp"Q:Tcb8i]S:Mfp^*Zf@R#L^5m)Vf(s:gC$`q^RrKL>d::T_dIRUW.a"SUoIQ<c"BiRn,nenV]7M[gdXN[WZK>=A'=WergOU%%u)nKs42d=.8AGs2Hu5;`S,n3>VM*aeObim!l)TpJH9]di\Kok9trYiCWJS-_)0Qo=YPb%48../&<-!%%IjSRekC't!qBigSGfT2%bA'_;@u')XiKlK[2t6%<AMC6KANa-f%[,>l/NAO`'&%SQogR&4Bd2lA,F$QP\;a?iG"i^/Fb3d)_K&I>nN4Jn9a+-qT4h$%4&Ed`%_I;37+Up6YAtb2qHe':G!Jo4sHXCd:`uU#(_/9#Na4?jhNr?@WhLWj3>IY1oZlGS8m$f%X6`nV\F%b0$f"5M`>[A)r%e-k`%,\J<%[:*q^C?g)CRbeKgmou6@'<-8:h^sb@NU)LPRV/p_Y2j$/[NV3GG#IBJ]QdY'*=>O%p)sLeYBGYB!k6Q]b!E#'SdB:%\n$Zh1o*cZ%MnJcFT$n1tO0&`CcE.Dk(?='2[Nj@o]kM6&G'ND+[]`EcE[o_.a0^#Y*m5d@H_RX5VXC>FfA5&[/(>9:*MsjdMh*=fE#+hgaL2QE%J2fR?g]V#E#=D89e!595hsKY<3*PA>VKEYfqmp.$f!(^?)Gj2pc4RBKXj-7rg^#eLl8#g"UE-T'Qq`S%_bG\@fiq?9cd3B8Y3W7W%:#I@1D%q)P9c0rX[r?8")df^_#?*f"K`2K$B,?6tmTOt+SR^F5OP=A&EQ30j3.Y:TR_bqdqc%B9*&*8Uhtb8'YHH<uODQq3Vhs@X%U[<8@;]Va3o5Fnh4>m"o8&I14c2<GRk$<Pl!P@^6bXtNV$J5M3@2I.!k;-u)f#?.5Z8Q93Ji<"7!k5jZ_YRg%aBe_FrD,#5->N[\%M&Eug*SdN-)mAWb@oW>32Bci+iFrr\buSgi'5=@Wn:e4!5YgtV[dRjF9X9YaXDrcKe."#`=.prtBKO5@[5SbC=``F?NX=KehHJR=%TmA&q%7`MD;@P]\Ud<Su4rb#g<JFY>o$T]1h)0CN^F^VsJgK^;PX`*7e\HW+`HDZum1`CfF_B6hG*^*if:&5GXWsZV,P?_h21qqD%B7S69$"4$d1MkbW@RDa=!:@tdVBj3Z)',;,UYBn"D5n%tClDeq[(R"i_$h@s>RHJiDP-uM[@#4U('Noi'@;'^']YG#KH8=iAt09G%fHq',-1@3;9bhm/c0!1=hY?;HR@n7P3#tCg@ibgTNf>rWmA-i>`fih&*5$E&2HTC^-LCQh.Fu^B5A[&m_7o0`d,f.]3mE*_9/QU(%p;mG3L=-9DS'H\TM1RB;AUASf9J)[nDutg99t`V/*&\*gk=[i:[YJ+lSVW"-`kSs)Z+h/!R&)\DZgBLUa(2)a_D*SS4Ih>Zoa)&t%Ci1AgVYZ\A69TLXk$b.2E^.d4;\m9X;LJ@p9=r6s"SQ=6:asS8^''Lfo#*8k$_$R<AglcPeu+$F;1V2ZQusuGf]4rAg5t\5gG"F^%?eYZuo,$,NoCXQWi\WN&';l`',fdqhN\f=pf6*LhVpOe/2'hd8[^3j>5c+FY*=(sV)[K4f?IJJR[QTs<ca+^.DhGR6ok6-UJu5p>%U2A::K._iFhOrR8R\^`sgiZulJpf9*qdKhN(\D;*K2&ah$5a`2FSrjW(,X]'bqk\tJrY&Nb.se$6k+2#pM]Nu;p[/mOJ3H@<$r51%R>6D;g0'RK3[\k8"C\st&]7(T@$9'$\%1&?maBU#Ho$Eq2e8gBL)li9i,)1KoV`X)[^)Afd`-N&0W[p7_"OcS:?SW8n7EZn%a]m/%'QgW`Li(f8"LXOI:.NY&]28>b*H.F?VG&O4_Df7gBN2-%1KL!2O9O1=i2`i,'cIW1"(,o&<ofIF>S9<5%,e'r(H*[7*;-+Y:q^o8%+aS(mVn4h5e[Cah*YENPH+3CWeqI:4f;s7>2eY;!#cXk1bo=E5!ZeTF/nGMtmcS[2l+"%4%>2@/@7M!^q^'Ipp0Fa81Zr4]6\dk,%-.qJ,SZHtaFXn"'3nbj`c9H$/=Q6EhpMdm7TXKqAHH1@g)!)1CpW?s*eu$;sN__lX]JQVJ\b0fuQ^BcKe>TN:7:2LD^&qq-qXe19%9Ik"lgc3/&\qN<P56:$oe]dhjG_=`_Ab;pE6Xkk!>InBiAL)PL"LZ^=:bsW('h]%nT'RuU^n]AEl#\hdC\PtFBB'2VZZ1]2-dO,G%=AqGgVlb.Jm(;U^]*`p$f[%Q[S/9pm68odnM)R`Ll*u:3gR9iQnb@h'B%PhfP3I4]_!NE&H?VD0Cmo(N`b2_W24J2I\qtXRKM8]e%gR@PM@#J0+=H?U?B%-4-CYM&a8hB;r9^R@Y;IU</'UGYIIAZ#(9kF=J[a/+7H@i#^g;$F*$o&/>S\V*QKOkX,LNR9+4aIRYm6kD,%%6,$eKH8=iM!Rm_mU2`S1,%GfEIYS]in%kuG(<]q)^'@^X!<3:U-Inp!OStTMd_ADfCX)M[a;%c@s`t(LE(U?S>$X8B%uQ5in+6(%OU8^DD$%1dU"@16:Om;_2jOGRfn!G/ZPa<PgJ27M-g5f<aE]+.9(!tTD)3iAT$YeBYT&jY%e6nNg$LJfpNB'4GJGiLM"UWdQTc/N%P+<K+f_N[!g&TXJ`QcILef,Cg=Mu?5Y&6KV8]&X&\1K0B@.K*@&#,\mBt4HrGGG7Vi\<WB.^n_6,V(FPLLoashi/Q&Pr-tSO#[Y-%kO"n@ZJ]kB+Vh7;dL`P9NmTE@LUh$uX_ZSfm$O9AB+qfJUZj!\P^Fgfor^QdpO2fLqLT/i%J(E()tV1qhmV9AkITT2.=4r0-f.:,%Vc0)aX#'ic-TqUcT]qDD_Vd;PLf?WlDBlI2LhZ=uHQ2+1$o*Q^KQtD'`G*\R0,5HX*B;oN8;7GfJ9Y`3Yj]tn$%Q6^U8&CQ?KqCi%eq\Zh[/,Wn*Ll/B=@-9b"m:;'Vc-O&YkJU.%7<SF%V@#(dfF^FosYBFlI++H!63`6=;H1\TNf9$)o+07)%/9QJRNF`.=1ZM5lhfn%lZ7p57]KtcS>`BFdFN1`F.5sKm!-RbJ\Pc=?N3b%a$\2ZWe60m0N&P;mugkARej<clGC,O`1-SQ2Ndsd\lq+6c'ht)[SG!!gB1*X%dU"OcC#Nk07RN1c1(G!8^H&"<Yk[emOFFLnK\:h'Q=YbS!!no66DY!'"lES(=oh9I=DLim"f<2MT[Y?nkj"mTQN12fgVab1XE_Ku%0NqKJ1*`6>1dgbAY0lQ(*%=G@>1ad=p'RUu%?*Xh'/lO@lO-)1<cuf'k+u2oD)fLEK#b`T/n`B1=a9PnXN&MPYrF#H%T(GZgR-GB%enh?S"f^&oKE@-$]1C2P)G7CPl"cd8dX"aE)_s8g+9>d-5>gZ%W3.mM#[fTCk:Co]YR?AT5QqPA_!uWU<tcSJ@2FjSA;ZhoO>&DG%mOi+cEkDR\ZM':kK/JmJ'pq#:Y<,#'&"O*WO2sDf(GUNi`kY,*[IBP.hkhD;]*$bn`P_'GG%-S.&ImVceb_>n.Lui+O5IaJ#!+R5%Z._W-BMbf"dW#@##H&CL@6gR-aA<i6d1!;i`kg?DcoF'9>X)5(he4iDa2S<(mnI0Wi":=Ae2W)p^"=Xp8bdr?V![%Vg#.&*?-Cl7%W_OQn83$*GVB#6BcFBi7s3AQoTA,L?3.l_u5#GhRkFS?K0a#?\0gGDc-1c1>hh/<o)&]>2A0Ap>',F)GAb><tYRKZR&(3U9Ji)<Z%*RSjhga#k0)J!q0\iIq:c-e>^*C54R]eaTB**i%eaAMLaLbJA(+XB+o,gp,JE@0WTK9#QaMO9aRi7-CA4P[c9!bpFVI@USuqZN6\%fpRU5gr;Ha-]TQdBCQg<5CjlY%L.:<reE^X7a-tr0#\#q\q7^1O[F<5/&',uqZb<IS)el3m"4WLos;d5(mCYdc&gEF4Zm:<]._b@%2`?gK+ac8%@s\JE0T(oM],]1L4Yoip83_7eB`^$?'u=3@57A':>tt!C9f=/3=D=7\C=>Jh1Bd/]UM;U/q.QD-^qV&5;\(p4FBVai%]tf*9Th`/e6hbO)%%VJA"$`]/,1[LkI@d+l]j5SRBtDZ_$23UikagIrmfeirTXKY$YT[m\"?JGX@N1Pj+FprQ3j4dM(%^FQ^hoX$%St,nZ&J6*p[=)YGkZGn>;EI2&aiTq7*/d7?`ZTlYJ`pT'1#-PKNKl-A[YkW=;+7,&!qF)m3SM84qf%Li]Q:_RKR`p*48V+tBMO0Y%FZ),p8&b2t8]1u6_`J+g"M'M3eA4`0S&*kt8+<YV^-on!69[i^])j[;gK[8#=_AE#-:%P1/hgcO+hM55B7X`+V]8E=(XhC'QCf*!%dZDGYVD_3-e=?6QANe_d%GZUNY3:#ko\Li%OB>!d<!VaQ8P,Gj1rH=<Iq(R[-7ik$9=9O6[]e"u1HN't>CZ2d$HuoFI#r?,_6Y9Q%#H5TI7;ib2f$6IM^n?)nJIDhBVX$"S8C%?;?(CY^cHMqu\Suf8E,qM]<QlgJNr99`4X@RHh7tARZ``n?!g+f_Fb]$UR[;Y:3(R/"%gp].!->-QN'===.:JC+7:NKGbC,`1RW"1mFE[VA.;q1IDdtq\XD55fNbSusRGagE.q?_t=L:hR-k&s!L595qX'/l;!FBX=MQgM7A%T1c&t14a:kU0IB2V[;t:^:eJ`$Xg?&g$<AR-rat63tGD<rqQ^IQP7m0K0FAd9*Z%T`A22GU6$9S6Ic]CM;!PCFF7O3#TfPfh%R@c%RqIFr?q,9jG_JK82ee^qZudTmX7<o>-Zfb&o%g(qg[CTi/uoap&3kPp5f<%@1_8nr*:FQ,N#tg09q8[(%i7QlIWnk]^hj0f[d8h[%A/F%0c=TCi^U'Pa3u2,Rd)6HeTK;l,"%;T=5C<RH2h$#E@pg)4ID]^58G@X"j,mDgqGje&,D8Y3DOO&Hg#3%&#'@_FZ,>>NN&lV&%O[</9@U)Zu72%Z#%U1</6>(jZ5d;?2DW`PXc.o*FE%"C9;U(iF@:Q&ng&Zgge(ekbQ'JHpPQ%iq%V"*LI]%es,Wd!-a=i`T4bKG,%QFp'`[V!ooYjAAi]AR'E,pOS'#nG)jG0ub&H=%/Np6-id^^Rc5[+%AOH=ngH@-Y+qd_feR%/-PlJhhtJ9XO1P&b?kj#<O:q4H+,]%0l>2q9-(n.0fVfF(lYf^S%du^hsSHd9&kG/#A4>Qb>gaggc8$Q,']U[EL&k<=i9Y9m=9hqjMp1!N2>%u5\Pm]/4Br=d.o!-;D;G)%J<":<l/9s'P.!*2[bn8-@qfc'*E8fB_(`l,ed95k1rdrJ\W*lD6!>"4/4DXtqC,)MX5+04.8,:82U:Sd>'tq-K]rFSAlAbQ#O6%b%<C.DOVluDo'6]O$ht)*rWen5Wg[@HcW[am$;_USD]jqRA;):g[laAO,0IZ(%fa&h"`l*j=Z7.QhG=ZW<Sh#+td3n*h+71f[)08lI%a3Vn;b.af$8<jHS%;QO$_IF'[E^!4Ud0*o>RCOfoQ!-q5K@n\ek3,6UZ-H_5l0[EG^h:<]oC"qp')f,*5oW5Bg@8^C_)<%=@Yg._%+)OG\G!Jb@)tl]"$L@-+g?.LOecc]G%!fCP72mtcLY@c3^ap3;;^Ne#q\]M;&nW(OLIC?'7)P[m*QX3/JBSkFQD]93iANi!;82SV%D+PitP^J&hWnN^K:Kok90r=IAk_;u)q?0Q+lNDBOA+XAmD5Rco+K:ql>Bdls+0K=V.qaBb>Eg]V^O6=;Hq=2I,Em(u[R4k]S$Fh[%B'\Fa`r-ihfP&BSL/$TL?B*g4!H-%T6kjN/V;+PJgW)**PauNS7Pp&<Nn($`^o>3bQF+""q;ca(1@IZF_\9QQ%>bpA=j@/Z%YK#3%U[\A)GmX*#:XJ=p^h*nC^gN],rddd!7QY2_g]7XAWqYmSYR;TO/\C3F2#'E<-YO1/Bp.JK?Tu$aCdgP?A,VUpp<rqoMu+U/^\:qo%cu8orLQ?s]!7eCa)Eb!7E(g)lAU#X_#irMtK*is?;D1*W#M68#"!>8[=&S\7n[8Jk:Vt<10bA%tgJPD'`<:*MQp018V,O=(*UA^R%mlB(7j1QO=c`MRgli-@U+bQ<9VMR-\W(nnZLW\bT0-?K[5m<d5+@+3o@HRif@"!1?<)XPaA(\Sa!,dXe'fo<2!a'kH(0-69V3>:4%OAZ[*=?t7Iref!jlI@RF<MNG(EK_KCSU>H)<-6^7O'dk?L^FU9GVErRTGpidTD5H8TJ/u7m5V:?k#B,1fP4OX9!8<2QL]k;OTK)r%0s#6arHC7h]0J%$8-(0eIMALS!N@5HUY8m0Of8aU@j%6:bD&&Y3iEH(Gp4L8TS$fu`<N&5YR3uc/B'YEaq?C3a@'^:QIZnfZF3WZ%afrZ@,a+BW#_ZAH99n0>DE8(T%EgBCN^Z?hnZlQ_>h]73Nb,&%0+LrhA;?ieN^c(6<Ad>*[ngHjX:h(fOu]H#_tHKs"rV3j$04HC%fODZ,?'oc;G;KaQ@A/2XJXHWR'-,itCERPR$.:L[J4+ZiTV0*G,@gffX?9<.MYWHh'm6Xl1kogRF<4)h,h8:/PH]L%N*-_gDFgG7%dL`0P19sF`@d?l\>XQn.8'S;H'90"Ei:U18-i!S-JppPJU:.t$>(t@OdYeN$:c7rCVEJ]G)>i5^JI-/u=>3uLK)sDD1(.<hHl"=K%YAZ%ZG[6\#dKdgF[_d&6-/+;uR')$-j)!ZZX1FBCPC3I.K*@?AX[Eq./KhLP(jasj08=`kY/Ol#+P@J;S:ST3RL`J/>!(fdQ2p5F%19jrj6'FXbK(=U!H'Lf(/A")]_Z9L7&YT@3"H%qqC)mjGeNfacn2`HQi>h#?UoH@^X]@;C7l_F@gWKrmGX4U=B>Y@HIUX)Na7#BO%#_l30j-rhbGhPVi)1Vq1g=hhG;/YpeF[ZiUbn"="G$!(u_Oq"[c%K&YKiC$>$mG^F=Y";WcC88.Jh_c^"E=[.@NduQE/)dP(Q1Pq%r5<m3KI#90C4U(0Y*RZTJ.Jr%&Qj;MfJ[7`-]G^N[c[X)qjj<o)GB4Lh'@a&VtU*hZGd\3bgrhfk%2`7DoUm2KUO9;doJk:94LNd%.Z=p[/df))'r33L0o5NA8_BL`4Mo<kf11SY"S-]!715Y`7Gs(.PDKRu;.,u@G_fE\9YL:$&JUSq3Gr],@'6nU1i"^YReBaW:=Qon%_UTUma?^_d[%\%moE.?@?R<`AnF_U2lO[nhZnCiPAQ"/U@5M\L7;jqb/-+BXZD`>q+bO$6:)_[ig`f#+)TNU$,nQ%FCZs[*hT7cu%I:PM)F-J[)H@9<M@A-)KfpYqbhUPW$kb*-MiXDR"0cpc(KUIQ`pm@+;&bEPN"VOol>7!J875u4J,.;lpPN1Fd(meB-5Zkh(BnPQD%6F!si<ZL+m%,tMdn?5./i5`jrM3Kp"(W9O#_Bb&TW\0"Xb[<&Iq#eqP!n+<M1FFZ;3V(9,>i7"fPN?@@'/&?)"&grcpr)1Ed'/-N%_bb<G8!`906:O5g8\\ld;8L-\kTfIZ2QTVG8W#CCQ&iCqKcXH;S-+n_q@1-P%k@`9?4Jn&?WG%ojT%bd&+-p5fDl*i&(KgI0E;ZT%WsL[&[Xq%U4:uQKkDIoJEP=.'0:?Ql!#5^".l`VF4)0A6IK[T'^2VGp@bjn9)P48k#>M$V0L89MWg==A]9@UQ(IYI%#*9<q+?\Bj%_IaX[+\gRkI/W'C)JVEuIk[Q9**Mt%=D9!nrE`?^&;\G+6Rp-`/YE[JS']BcI4MqGXD%M]8=>Gs\>(CLm1]cl9)T'"`JP>;rIMY1%8BdnQH"lk9\O(F+fe6&$inE^X/EF#99A1SbaZ]keC(lEUN$=s=E3:bS+Y=RI!7K4.(sBR%-F`X0L;cus.Z2Zj=C[(uD]:hX1kl/C%.+kZuTO7Kn#bs9KMc)O!\?:-%<4LV"m3WFeJ`%i_R:"P!5Ni.S%]qSor1PB.k((FN"UTk=9(ZPgS("^HACQZ2c./:-&#WNa(7/Df%,`-QjANE[TffI%e4q!3V\(gdNYnX't7`H.3QCtS"Jn*ub?a,/%5D_.D!?l%UbiP\M0N=ME6g8,&TGcOq,O1G+,-dGQp7SW9=TJuQ%-0o,.j:-fH0Z273%Sr4k=o-jZOB;u6$20X>`)b=.\:\3/9gp*=+AA5UL$`Tf!cd::'2.'S(6B0UhIM:`\4E.@#IYC%IJCF_Wee%l%M"NXp3n19BjW80$BLK[n#D=uS.5+_h"Ub>-2T8><bYnZ!9]Q;,:O33O,5oRZBS'R97A\'R0KOD,KTY"U,/lbZF!YoVg"Sk,I2ITm%SISJmb6-io+NJ-sc>=cT,LB74>90:jp+qV<[FteWa`o-C0X>#kL4f_!O'$RZq.*R;lj])$OO^"+FJXs>);"((9NspA<PAtq?<np3%XHFQfpQ=Qo<ik/LN2]0<r*e2D1b>l9%HAc:7/J/H!DaIB<>U:\_OH$K*_eGF$3ssupAQuHN)-)pO`i`?3GcO9[7%g1`p4!LmA-S[%R_0im4<ZJT\39*'Km?Ru?#>GqNq$5gH;(R[RMi5H%eO(@Q`ObS$1qAVQre,tn>O`VGfmD<"a3qqlEC\je3#!g1;+e^6bJ#Z!OIk3%ed#F[r"ZWSZ2A!70L:@b1fgC?co/D6bs]Ne]X`'E938L6JSeB_VJ\4:SsJ*3+Wmq7R!qYojeuZ672#E!psfs2jT@EB@/6LqU*]k+%\dc9rD*CQN2YodCp"892!u<4=ke(36a]7`Q=M$-"1gSXVf"i(Hp&]^I>7Do%3?gTS5dEa0$(^h7M3]L-/9tpmE'kG4DQq3g*O8E<%.3qMW8&?en-Sgqq#AgZ1\JED<8%b-XMt-a3"pnUN$o]&4/qTJtSL$''`nER\N51bYBX>VKBL8!qIO(*uot-=B![LTVFt+E-.:S#]%:<I^$-uM(I*^dW.c:'hDKWZuI]&7rg32]jVWd=$#nFs0I&?nSiJXhLka.b#p:WW@=#3o%F(M1I6d"B<0]WH_lT+pVHoGM2aBHV(G%]d%K#X/95+Z)gs<9@;"KjS=<bO60H:D1pn.c3i&dd#c"_84!b],/,OgV#4b%O#l)*oUBZ8THiJ?0mW,b#j,rAB[)\ekWh0OX%)@u%;BUnO-asiCD+jcN+Zhul$h^0(ZSt:o^"I+"os`BgF7Q^-=$.O301.CmSaMOC5\Mu@RFtmU$Y;2u'Xg@,$G1LLZt)n1`FCF_&5\dI%Ob)TH`=bOM(g^I<fe]J+MiFd_%rUm-]9IOM5e-s8<F'S_.(FcYBGHJX?H."8I#\F[9,LW')q(^;p!58l#:M91kuiI?n?d9I&.([F%TWjl.$@GqC&ng!8nY5+B8qj7"K'[,=r`OZ4;=MNX:"TRVc=bg?XId_XHr[3knhuP)&Yl+,Z2k5f>c+apTm]-N``t`9b[aY+UdUXn%jMd<Sj/a"B6j%MSk>ka.V:i#k^lhKT"Y:4H!84Ak'qeUm.R_5)KNqFN9gE9d!24iS/0nhEEUuOb;\j4#Ym:i)&X!-IR>2qQ,6oD"%;eB'7'R;6;hh+_EbHV:e(Uqe.WHt@l5p%H5TO$)])EW=%[IsZ#W^iQq"g&rS9^eX4K+0Le,+H,FQjC;?U]jp8,75/R:BP'km*ikR%a-^HGCg$D-DY0]$PXGq<P<st"AMJ+!<BpSEOL#_==r?5K'$3+2^5Ckt_@oD]94+g7n-lh!&LnRVWnEnUNc3(kW`?lI9nW3&S66M\%-26AOdooOU>K'pD9MZgiYU(1oO(NMrTbm,%#fL]B7B$A,3jh&OY^@E4X#_P_5_#Jhb?H1VmWb%1-fIo@8sCt\,5['?`OtoYVJ[,q%9[]D50hd6`j_PS2hp#S6ahaQ)!hWpUfdYKnFNVIibN;*u=QP*E@88CHVTuu^D&)6(S_qM'`u2cW-I#7bDMD=GIP-Ga<H]_Q4NpiX%F$1r.8,=S0J_6:WoKV%kpt`5BcU-buO9^66g'$W9i_rK_(M^^<$b%$WEOE/TOP3d3h'7r`d:U8gC/i.t3GK2/`iiF&#"s+/.L4ST%\\c5m,a5kZ(?EY4TIKSQ.Li#D=+k$[O"\S`>iXi:af79OKfepj6bcjM;"Y\6S?b`8K(pP@47dr),7^S],X;`:Fl+kq./I%n0+d=2%@qHit?gQ-I&L-EC]d0=N4NP`A;EUB9Mg14R,.7["HB*q0X_NBNaaua=)D,u?;5bZ#R.j%:e:,C=3_RMF2C<+V+m^^`SY#&F,TIr,%c%Y&V`h:97;Y;$o-$koB.>2.EFPo+NX!UW9,BTiW&49D?3',h+<bb)H!>S&@]<Pnr+$,!&eJTZ,)T(D7j%<Pt-s-M$7NDNrN2fW#%M[Mo;SSBfY/&_fV_lGa;)h8oHfHSQ:j&.Hl=.6cklE(U$(Y+_d-m[i:/nKZ7C'Em;[G$bApr-rQAP04-oGl5\@8Xk8*=$EgaD;M]%<U(eqHmg^iFG`K3d[IC.'ps1NY<:l,8L0'jAD[QL2PNi5;/=2KJOlJfXqcoB)D04->2_oPYG1bQh0,N8k]klaMjXnC$F,6W^%)9r%-<0">9;7%5!<Kr4G=C9&lY@q-<EdfSiVb0BW3aW9V5VH=lW<RL/p)m!IH:Jsf7]G:1Bs3U1#t_2;/a;^V$X3OfU<us^j`$p)NRJs%-)KEfI?L$E1@6khc_q28/M?J0]Aou%6(m7(r"rD)+K$3c,X3<a8V)YWT)!hR`Cr70i9):;S(]0uqmggWWH8/K9C;-0)$^%D7!q6t%5(I4rIjULN=0VKl#"1!+?0kF^`sXGS?HfcY[2W]hABFa@\XTAohPqMT9+ZBi=Ji/]?9`sC"bT3uZebA;)%[Inflt`AKglqC64Pf8%!Vn-Z6Qi)V\&L*/D)X(t9@Y8thInE1;eM4+YT"3N=ARLT'%EucHkeXL<LKm9hPS^ofEDg/-$b)("Ku!b;#?jJC+iS]=?UF5J:QH,%H7%dk'gVUE2DSIri40\()8IR*6tK/^NEqP.@`@]\O_gXraGX^b=3QQPoG?h1f:9YQ;5t;%Zr&H<2`'@oOTG,'\"aj=mD1sdE$QgF%?_qSSfW=./4OM:,_BjFPCYDX%,dU5Thc!XLa!:T!#n<nFGSOAqPUAouq<m0?dp5WOD*7l/adj3`PQ!'&Um%-k$jM=O&FhUE$tGP<%@T?RT.?U+g8M='k'jT\?emuTn"n7W*SZ:[3i#Ac!qqJmi!s>L(9J=I=]E]Q0(T9XX=Xtp0O#!pMOB!56>u_KDes'd"V]PZar<Su/%qd<h38d,6ha(E#A2(["6Qm$9;7HeS(fg5<IOJT%:2+E^71n(Ds@Y_0;$@`q.l"hAc=#b+a7AUfZ#T"#W'p+m+fWbe<!D7;dG&dej%ZUejZCd^$YpbV:fjQA3tk*`B6PI3lhSHPhj[8D]YiArs;3S6O@*0M&BZ&'.tiqSL,IiE_SgTE=a:5J..[>;N-"%_1V#3_aQp'4X?%`YK\n'd.4W=2FI,@.Fn=F:=6Z>n's>.B)/06'#$K\XYT`lE5;."J[jP8@(38W8I`$J?&6W.h%CAigp9<D'nXAZ650MD1N%2i<G8#%He,[fR:0quHfR=!RXFHMW2IEhC[.6/C;_j=CL$c`kU$YM:UW8d7m[-t[5FR%&5o<);6dnXd<<+:j->7JU_.8Gl)nf`G`.5g,-LFE%1(/`Q[l)nORZp(N?2DeQX60Npi.W?7O\c\=m&7`!.[(o4R5cFVG*=",W&18QCkQ8&!hKn17TV"oIHI8dQk5D3XrE<$C>jQrmK5XY%X@`hDWiHW,A>[:UMj3dERRP%An?eT_((`W4@\5[<^Yoc_<JM=a(X^IkQ`2(-Mlpk=ft\j@Ws=ZG'ao:L\Ji;Xf`b#,M.T&PUXL!s%/h9<ZAkF*]:_+EWQOaRh&n7_b%<5AW*%>6$=&`:5E1T6Qe7.bjj0>!+n1u?%=qOb62o%oD=W*CF_u^BO]S3@XF5Ub@nJj=2:W`o.%>(]$f)*Y!AForF-#b!6i%s&>"`%,s5gJJRGi5sgcf.NF)O`s4O]EPY%Tf<C;ZefZb!%$IJKWR(_.C<.;YS(,:Q0OHlOuoGrq9o'J%A9X/IedN^FB-j[2,>k_0?jr5b=dpm1>&cGYU`#9\%;P*,[Fcd'4a>CfgBukK`TpSAD(_N+BNT=_[&'_Z9SCQgD%7/A<C:W"I0n%N%(k\4[PbuY)5Q'VY(RJZ+OXJ.if?&koojW8S*J)KJ7OJELW],Dt/I<jrX&l*$eh:0D;29Vc*cLIQMdlUW0dqGM1chRa!\JDN6mlt*%&.)et2LUteBK/$&q6PT_L^4FR8n`63odP=ADMDUp?Ced>S22IT4r<--"_U(*pVN*!L$u(rmM>DjM^2,/#Q(r*p(0+5Kk.@56,r&d%LdsH?l!2isNL1asS.p:#78RPmj+OfbFFGem9$O%$',*,kV*i!t')Ob877pCc'89g3GE`fL.`mrkTT)GSk=M=k+Iq/!gkVVeDg^_O%MDtm=#<&M$M$p#WEiF^+W?A_C2HJ(Gb5Jn%UbMK(A20PF\/dcG0drClA_m]Vc(P,*-T*#%h^).#;%]n@1fUFk3Z#U>[BZsH?-Hce%E_rT>a[WKF:j.dDP.Do+X`LJ&WgFYJAucjVgb4(!X=4QSncLSsSoAV'&!US;&t&!J;HGi2o-gDpp/"YmmfjW%Q":%(L+Z=8Rt^&2%1?]#sdM`B`'7gMQH=[6,]EF+XODS'U@N,t9I3\!u_pcPCQI4CoiSq4H]S\*Oo=K(sXjU$C)q#K8ST-kJQ5l-@V;qs/?uiN;]isn5%6tFp$FjE]0hOHj$lF<d?7Q$1'M*t9:#WWV=AX99H#>[7'*(Y1udB:E"P>s))[8QmnjAjmM/G5:bEsuZcqL;,cjHcEb@#A#hH'-Ru%aNapV'7/LGN#RsViE=5?$5`V\<C[qOQBdQ+hDhnEb]8ESXn">1KD!9@\Mdh:bcl.JK[JqIJ_<EHa.nMI*3ZFmnOC%9:;T;Ms1lRK%^eI/4_V3?3i*<].ah"GOHRQNfSBTF3Q\%=.?EPX*(\qi<1lbnY*rBd#foYfm#s(2q[bPq'pd9!Q!7ef"Gtk9@`9YUBQiZsB]OK$S%:&/P0+AXnL`mtiK;R+laF<Q;T+,mX:LBdCu,5QmmNIB1;_pYI(DXR`*R.^t,*tgjV>u"9ma!Kia6/+A0;lg6+fYB?\>;^GV"'e0T%SGOIY/0.>@LN[H\F]ItH':h:TVui[EaiF6G!E!h?XJk7oeK%]38:=EHD)@"B9c=Z":b(EYlLQR;7qM(n*Ri;)[6^6K[I'&QKB%g1%6'k*(SQCbl.!6p'7OYgT$$"i*5=,Q-Xga9HTkdNagT\>A;1=aAA!T/6lAF#+Pkr>aT1nific&;]&buk:Q*_sZD7;MLq87;C"K)(Q%]_FU,SQ`YVXSdt@/E"J:/)FAA\k.LoK^<%S]kOt<-R!7LpGHT:$Y/lC,#LtKDeJ2c'KVd*AbbOuc-X^:\pQJI!L?TP#K@5LTRPRg%F/X7bN+c$emMi]6MoB%/^MK89_mTNmMMK"8@nIme);+F#->#/rl<B26\meV-g'I'n5o(g]gPThsOmL]2oNEer'&4IL0bP1]RLjf_%\K;>YqlD09Pf1fuHc&U[NgXIbFr*P34O)95M5[^2?CY/i]SkFc@>Aa2+obVe/.spE>pkQTaTq^K70sCYLXn%o#+"@<#V9!tm8<9Z%!C?Y+_])J<7@$$d)VadMHT/*%mcEo"TSIq`-%H\BAH&3bPu9]]'&VjPdtfs[S%V1r=&oGfN=/o#(#>)O_b=E,0[DXY]M(C>T-ik8%^PpAT6pOs,-/``7`aL:F(IF;!d)cfH&9VN7rF!m.MYO-S#WDsH^/L1,3_QA6CG+&qcAE?kLp0rjYAK?4@mS:#U`;iAjroR..H.W8%WI_ImD#@:@J5\sR(4;a]g9WV@8Q:Mn7aJuGHH=Zo(X3k\W*?@&YT!1R>p*$9aAb6*n"^BU14dD,pkO7Hkr&r^ab_m1d'g$#X@=S3%.&JpN>I?:#Ij!t"kCNtQ&3H_uCqh4nR>oUj5Y.]pKB$o;dSB@QE`[cL[l?[=r1\PG0Og>bjIBZo/=32Z:%42j[p%^ml15n*75lqW%@VtL9FR:]!3n&>H'R,Oh3$@;h'gbLLD]RF>#Y-_HLTXtlkHS&>=QmA5nsV$thS$2A!KmB#qF,Ea-b8R9V!/-@m($D8n^34@;)._h%VhG&F:(I'N?0N0.=_0_jYHtA35cHi9*GAa"rB@tb=&O>#MQTB!6e6mUZJ#b/g;nZhQ1B)Y+;q$JY,enS_L.;1,W6MIP%;bZ%j2?I%;otbnqLZj@LqW'f6TO^@/_XP.XGX-u\elb_G/$'A@PnIk8-e:0.VacIJ1Q-RJ7YH?]EY(HAC?rOLeJ+(FM=\)5G6PQ?[GB`lN-9]%nl8sQZA8@V\<JSu>f;*hq(0:^5]`"]/8Bk.4(OOAVE>_13)#ifk(ASD9[A?t^8^YXAY3'eF$.*`f45WO>%?(sYtkXg1T)q59d#=u%3`=_43J%i0`%JnVA#bUKK2a9'Q.s+s"9uh2=CakJ9NL).rD#JEBtnic.=WdFa"L%^kO3LS#Kgbu+CZ1U<YNUqe_DN=r!q$ld7V/R%19B%9n%96=;X^$/5ldkI?BuZ*P\@)`+=!c7ijJ4oN*3@_'BX!qN'49&C.I$]]SPs<Sn(Y_U9Q>fe-pYWd3[JrIYV^$Ho-_:(___%%%SBU`75ti'Y,)MjH2g0TJ_u)AT]QQ3fNcBYZGLjBf'69<PmjIkj,?iIn$<RA@Vj,=QCGXA_Ht*@D@RLEYU4KGl*JIXdL*CF5SV[)%R_X0e^2ZuQS^C:#LIJ$U=><UoRBrV.,QOdY$Mu-(!CsHLqn1>hoKI1,(Q='"J@V\<HLpCU0;UO7$)AadK.:jrmN-UVe?7Z&S9T1I%S\f2)Ib>?j:0DVG*a._p5oX]2TX'.Aps;9t7:<GFR(tsT=U\aJLh_2VLtr4FifBOC[@D4,RME`,%7ma=V\BgKd0nQC45hr/c?NJM%A?Ai\r/6GCJG%lqI8Xk`@Z(lrQ'mUj`R'a<?6U#2rj-B!+$I@:h=9OoIerSm8,ooF]g3I;U*<Vo/`ObJC[XB7o\GScmU*JHlfRa-%D\(b)l1#SbmD]#Sm?`<@rtPo5.Onbq*NQ"JoEN0b_eiuL#Qhf:hPMHS;4?kB).MH98.#Oi<Pb;X(n`Wn$VrO$3fDF^Ho_[pa.6i?%,cO(0q9o,8(qde'T9\d':!(IX-i3U>%GufO3_I`&p'PX;Ajr)=QBCJ3:o8O&>2*3m.cC!@1?XNM0M2$L?0Sbl)PA+\YRfYJ,'eR\%h-e>]lH9IcA\%J%4L_.W-(='2[<n8CYDlRWcD;I*9R`0A_UPjkLN&Bb6><^3Ib9A>]#,],"'`*oku[83+^,d3Z4=7E:_9d1RAl[P%&VE^=etEN#pfh=VgYi3IOk"B>)[nm>J.?;QHQ/cZ804EfjPZH.7$MW-!rn(fa>q%6('M/e_e9e`<orA4S-+ZQJ/=aM4\('^CLEY8%R+Z*@i@a;nHk96K&O]Sf%h*@o):5"p@)j@prQaT9=MD[f:p3@l>:F15Z['88$UWQlY^cglG&n`J3E''>Yb#=U%$q[7PtFdEW#Q[t%mA8\B0BnS+"1!2/jcbfUdal[%`m>[S-Q_jrA4FUWW&mkq=I$'hUJa(dMCH<)DOmTaP8W:&r_jPAp0@!aE`A<,+9[D'9Pq$ik-F\s%+88lh8]5OgA<Ou#o<]mbOi?AO@ZO"7?KnS.#gHX,/Q?]u+dn`X9E6bFAJ<e_Ko$GdW*?j,;,U<7J[4/50c$Q4/a`W!_4-o<ag-\E%K>nMOCr*Q"[bA_6pB\CcUZO^pGn[k/QZ@ku\?VI$]onbDSXEj*Ld\:/[$e*='SnX"UK/VaYMrsjZ8`E&d<-%ZhL',f>T*i/\l5LB%H)tZZaj91mop;AjdOi*I-ImR%H<9'XS;4q@*i\#c*K#7#F]$lt8Y0"*bObQVg1EfTEoq7>8b6aJ@Xq*C:)DXk=Cg+>mn-[)/3.+V%-c$YF][`SXTd^J5Z`<<%7Wb?oSTOV83G)Z87;d_\=U5Ka9$R4#=lq>O.2#Nu=W']cSeNIcTE>@J(X5U<G,n$#:m+Q\mR51jBMh2T%kjq!:?S^2@n_0Pu@Qf6hmX9#T/O94_>Go\0KU4;ke9hj+!E!\rUlAbpOgBic+`1*oB2-T*PVTE\U@tO?a=FV`5.j43cAMfTLh@-4%n]G];T_aM)X4Yb0El2kQr%b1^;tQl*N+%rS_LYSrGZ@.](Z"-(W^??KWR(=>*i[.LN*XfLJrLV2por5Y,*aQY$$s1rCs'0aiFm2L%jFZMINZr$=a\`m:mFg88EkB6hN$FH6-Uec`/1FMC.9.2m(ot#X<]R3c_joX_820;r$Y)YiQ>#TPqbN'+;(KtGK_VLg[G!u!T4!qq%c7O\^8?.$D9ne?e;Bt*Q\%RPl-)?<:O0(n177%(Y*8&9@-R'<CQ1PTJ)l&20%jo%*Bk46q'J.';)^i[m"g:8Me6-^@S9Z-D`KCN=%ZZ>1PQ.#^f^nmYg3e81JU@OG+-BBQSjd)<nUVn)_Mk,,CXbh99$tPr]$pYqWg(#2KZ;?\'Z]=49A=MseBHFJ%M6PRr+KkR#D)BJg%i`NKSQC!)e:39an!,jLGn_?tQ6d2FB6nM+K/rEta?)JT3fksGj&t>`jKY!NdTq.!J9BES'a,=t.XCd'K2+sjhj.Y"+BrK8)c0fFZ%Xf/Jh+k_[Q!`bH[PU4RFn\L5Z22N)<:6mA:(Fs[#UFLEM\PYMi=a'Y,W*.fj$HaL!/0H%Z*ulj!'?NeH,#a,.6S(tDUfJsP(=<n_%<Z!P=,QrE_"+7;O"QFQ#G,tfOFf<)V1Nf&#6rZX-Uf&]iRidn2MNd2(RWqC'$`W;"F+o1o:o&dqZN>=j'ZS:2:JV@W_&Z^hM[^1H%VTWWh<U1($R"=Y=jDl)K'8i(H#:<V71/Or=1TbVYfcip(&k1d.ZZK=cE!?NcJAr$/*`>"ghR(X6NcJ+OFnD28AU:=GN07r>O?OJ6%=E9]D#tZSRno-Db%Ps(2NKkoRaQJtk+,qJ,X_dhWj.eBc1TYWoQ*qmt)g\sAWX/Z62X)@ucWPpO3J\rF0TX7):N8[G"X$^g:opIk%dN0(1U41(O4!rCV5QQ86Kn,Ns#s'1nAd)7m38Bo&aoqI+<(+IKKdojn_t:b/3>F.*-+Nl4d]j1$l9-f2</)Y];0p/YRYr/Aj?ui3%7"V],N$&IFWQMjieE@U2PEbsC3Ro![Ou&UcbR(UlE8!MlP#p1fX?$t>.jVf@@8SH&oV2_H,k<?a-+6$QRj6ZNkFV^A[``1!jT)p7%at`GK==a<28O!9qeESTY:^)C%M_$T?HDi?=<5Th]W@r'!.Z'9%CZM<?4CXK0H[3[6*PKa^EoadXSNa6'K3[!\d^!.6_NBj8@'FRg%9<*mn?K@rm>/;U/1in:gPt:'!O(8MA)JcCp<`GQ=+>A16@MQd/KMY;LbL>4U3I]ghqId*c&r4+A8+nDd\;PkcHS&Bo9pFju]ncp>%a?u9\$/'&?YeVqAFKAE]S",*BA\A0W]*?-noRMsahA:JQ"o/$fJ!3RYM[i=8ZgoHB<u:/_Bct6keBb`&[5TPhF,Ht">FhehaB;1^%M+M@A=427p<3jG'@%!jFP%dseQ(mHWBs['Kp6\IR!orAppd=:4OS!rMciCAq7b4:^)rt->`<nuZiW?uA&-]4$,T77;%qZ/%9t*SJ%F.9XJYL2EQd9b6T(#%sj0=?l7G7G4t#uNjlU'W7F')Fu>pI9;9Qu/As6`c/<;NeP]F+#pL&uGgM.^n=lX$SCMd/tho?e2(=[DYV/%`Pju8iu`]R>J@,N43<<;c#V#;A$Mn?$s""(aGil&e*?c[LdFq?<n;_@L)&-AI@&Hb?n)^nT$//>(KFs3%+.[(YW<tibafn]HlgMh%eZ&q]8>7/(3R)*N1GF_;/)@P3*kKD7A_Ksj&RQBFA-0+qnQ-Hh-)-a1-3SPX<Sdc+QD&)]fV5*T-HTCL5^J_?b;uTuSNj&]`)9l0%<AIAV9pA*e+40s_@>rnA98B=g/'m(42pp#QAs3It.-3R9<?$Ng%>I)q.l`dZU+1IiCJh&n/@;<X7G+c#Li+.aP_-3>C1!5Ej;"Zs%O'Hf6U%1U24R/7\WE@M4U,08"2I5lgUUe4?E]M_Xq(`5LR">"PJr4=ueW$OlTSm$J$IeIpC,E*;7'f=9-!=+ae5gC35Z@h"f$`8j%"nYjF<+TX'-;mereI&Ejh5!=_(^,jdVJe;&:`,b&X?=TQ)idC@0S$[9d"b%22InE0O@%5TI:C:n#\F=CbTK0JM<C@k._=k)X0[]>%;n4drq,adAn-:(:O<VmDTr5h.U)h*+ZCN)#fh3Ka;T%_gV5I"h/>C5^#54E:6@]-r=U,U%NS.EE@3%*4b&"Xup;:XqJliK_Kp%iR%`T0NkCYACDPjh0`Al4CgV.:^,?#P<BV^0He2`\-IB4+_CpOY-t$fbEELf.'-"i_&H`&V18T.\oo5T3/HWTll5X1,]#<J6+hUW3FR%?Jhhmj=`3nVc[LV,!eG%f"n'Fq_BK+D3SWaC>UMK*j,pcaB@'2Z:LMXg_.kFYHY*"rKSl8LB4J@O?Sl)en:n'!&AN]'bhFB*SI1+%8q6.6hPpobn4A_<U?@an"%D'&\$0%QJJ'P<!`CEKI2:tm@k(_cP3sVBoiOYfP=dJY@C#)UN6pUqd[QZCYX`\HapNMMai`f;[`b_B%@]@CM&Xm:cknur?VpC["^9/qTXZXm<os"+Z,43Hd?`K]-Tfm#%=.D5m82E!O.%#61CZDCqFfD`H3bPLi`qj\Q$V4L&<6D%!2l`tc%&Z?T!>g4*ilr"36/;JAlk=UWKCA.LhI'rU4XTG_ZnNK)bH/QZA69nGu:oU4O9>hTZ[Z`erFshuoe]M!H>]Y!d&n.$*G4U5E9GjR?%-`9*tY@!0QPcE,c;_'1Z]nZ94QdG%>>AV-\FKAg**O`ea5V?ch7i.G2dg,-iOY8TsIA5n$0+,1-n9hH1H2!ZMK^7K$<PLmqBk>?%%SW$:5jD<D?pUY[pAtF,RjfaE`8B<u`/-lN$:i\91h6?kNBQTQP9p&JNSF>g#^m*fZik>!$;sDeqnu_tG-\Mc=pW+Fh.A17Vn)1p(%WbD`8q+f58bS!f/3#DmLdDGCqFiV3.qid`UJ>tkIdF&DZncj5OB4GeApek[enB.M>+@?rdZ8?AN?)GiH&j5XWb'f'11nR4l+$uq3%4VTAU+n!dBmT3%u*jKt9i\T;bfK8VUS/#B)Q=PtX(I=RupXMSo9L%ID.rI@faD%hcD\auC=-Q]HI9i137Z];p8D(/UF[e9^S9ck]%CLqYe-:@:k&l0ckS9+n>(7cXEfA.V(KnKsW2U[$l'hajqgDN3eogMCi)<OM^R<<&DJLX-8nCidj!j^lXE6u;;lUm6OMS(GOl[:\)%*&kWg"7AHPEB8uR9f(INZ*[i5.(LBpjB?0hFLF[qE`8BMbp-21!g[TA\-64NfZZX-K?8@Nb>BRi3NWo!Bb!U=7N+>4U35]L"AF:-%l+6Ke+QBW5k;58Y,pPK&l`+u`PT_![)Is^h#kY:j.R@QBmQ9'WN_192T4nn5;L?K+<n;3)4YBB/a=IEJ"Qc1QZdULGUbPLAZc'8%%HXaG,VA6XU+DK5R<8*_%FO6#GQDu?"O2:-ZP<jle='bohHU3Ro=OP[PC[7+e$prGeZ`U>R6KkCLCVS,JP_#o8CDH7b,<ArSojU@>%H1?;4;TCBH0gtDo]R;kaML&29\fu'>)$psqG!NND`&?i4DJSXmk#!F`oVB]'-Cgtb6U?"1TQ2IL\Pn\_#>_p+-T\:5,@WbdbNO&>%Mj[k)<,Lu0P[lT*H5/h'Y)B<iX&^Iu-u5*QA2dZrPVps&O5/Uk1Y!a]!VL8sp0tYP*mc*j*[L_P-MsgQ*Uh'h[%g)o*XFWF';J=8%27ID@d!K2D&p/B?4=ihU[K.FNJ<'kgUeWc]FieDPUM_&[d(O,)`+8Td0W0PsHW[)D(;j?sFN26N/IR7M+SMa-S48Kia9pmOj;qGq%,h^YLp)4+&>T?el:;,cjp&<UC"sC'%Y$9oQ+>g<cU-aLg)f_GJ5F##O/1W)Y.>uTrZrngpGmAZHMcU?a5e:#/8<PouQ_c.AbDTC/%8=)+%VAjn<3<mV3j@-m5A5h7;R@uqX8[9]4)"K63Dsup9S.n!nO]>PS*'VkOQ+5o!F(6b,5dbc:OmXH%es!#\X#g@g0b\l@bB\n3%R84,8kLTVgW^1T<<D+hiO'0a_h]]VE#(AIrl=PG]a'PU)@h_lCRU3\(k@:?2n`K*mIa)>l=ud%=\!"GKpehL1!/j!C74qktZ;Xb=%]F62=>M+i4!((O"F+]e*hoE]&QVH_@3S#IjX!oM+K4C@sU,#+<)=^@C$`G0p3A?iZqkKI)PNnAI<oj].WMB@oe3HJrm)`^sF1?=D%ZVFWb,i$R9RD&[B\0O]aBju$T];7HHf;`@o2ocJ5?s+Xle>l<&-iI/hU$#KpM2Gsdmr7aGp]q$4'&<#VG@*44i!*Ae\\.])If3+P%`@VE//0k*RLjk(VRC\*@F'988:t>UX&IVR1I959G[%ch"eZ^M-_V6QI@O+J5`XJOQE=L3[V99*8e1<RCndAT[mZ8lr<nr4l86KBl%C)[bC"<]OrMJ$,_HEQo$TS42R/c//'Y.ZFlS;n$Mkj7;7>%1K+\Z=RLG"gpIV/K,U"0r*m"?DSQ=QqU8]oL5O1ST6a,1B)M4<"+r%(ZZ;]itM[:'-;kB/K*']-])l#>O@uSbo.BiM>W1SRd.bGQDqZ\_Jm1bLDuH``o`fiCuj&K?Gng@5]a.4E@1kdO>4^\4N2FUl=+rW%L^jk'U27qR<Ac?"BI@THSi+6(Z<og;GnF2/P(e]&)#uOo(!bB6<IN]Oqg4VC97<^8k%8br7f(X+\1m!&YhF5Y<>7#\hFTAJe$g#N%E-t_(8p'p#C#+:VY^1o5qc?XKQ(6t0oq1]`;;'L8bSa]R0pk3@:OW?OQ%%5$O>qM+d`+4s9P3%5dWuO_Tl6@4>(_BZ[-qF@l&s"t%>C%_B?M;fWEk^_/QC+Ng2`S?Cbr'DA-8O59<"rKc[#q/Oq?7,8&s,7.rVFc8<#3c>UsRf@1b0D>P?S+2,muB27(Q@/UdCl77-/)3%DWRl`]IH!Q5Ka4pU.>`f8EUT&Z9!H]Nf/pAZi*7s3.;cWm6^)@E)[r2$SGR73$MM5k?b1^!('iBe:LiFa*W\K%5<%k2L-Q1Z@!*(%KmO).H%Rs=onB2(%Mi9*EJM>hass,l!qIPlVMuoC<OP5*D4LQbq+OcHC?K?<</$RO??RpKq15c6G6<BG!i7Uj;nEpra[/4L/(*3^%E]g_m`LFP.RQ&abi&\2L76[]]&)oN>VCW!!NK"JfbI`eY@-],u&C*km=Pbm,Gb:>iF/odIe.be0S$8pZXmDTnS(27'DB+@##)aHZ%OHo'6'sEk<j*dhk#B/3g(#sRlnfu'e8!;+s[j,dihM]K.WYS1>%uZkTYj>?)%>M$^!N^EC&]<^Y;2(^$e[&I23?J8KgE7;p`m($\%6!B50&'/lC4:P>GU=T==i;,t*MX9\P7\7Ok%`,)J%I2'?@>HOS-EEFjb*5_g199+\]Z=#&NM`_@n4Q0]k,mO@WXMpsgie=-=Qq)%%"#9u*.:l:uId4W^WQ7>8rIS3J71@O62_8rqE6uK?3X9371:+M%),f4p605Djn)Osd$>Y,jN+4j)E.K/UUTVYr-3YfhF#4Lm&T:E0%WrSLJTI/0@,6Wq8*c!W?82!uR=EJe7J'`IgCu6cg*O+`8=\I3?mR,.1]GV@TCk8db!XUZs(j4$>opliM-_sq5i%t[QoP<$#.0R=6%bd$(YrS4GGQ0<'),\3L8(Re&QN7Y)oAL]1@>,eRerJN9YYU:5&fKg]+[0f7$Z(G1$6]a6_WiJ:OPZ\3M/""4FmOV8O(H&!9b/*,#%qP.NTP1H/*WsVdf_oum>Fs+A*28IIO[QHEe5j>.TJPTqOkk+s&"sRB`4Xss*f/B!IA]qGqk!Lj'q[2Pr-&gF'e7=/8M,VT4e`Ac*%Q6j@EkHj>N"rKPO5+dd<K1R#af8`F-=o+^I;qFEMh1qobGXZ4FPBU;c>g;ZjHcIn^bT"%W$`i8PA2=nXj^b%8MFk"T-,kqDjDSO0%,J>.u_^H9Zkooa7PpB1:X&WES,_5hcg+ST">1>()]oc9X&M7Kd%1&5\b$37e@et6$/-TbF,P)agdu^tTNCb15(BP36En1)irAc8K%\9]GICF>*??C\]>gGnStBh#=Qs6LYA\%$!u]@3>&6l*DH3VKtfKlE,gem55cpC=0=e.TfNNaQO$FZEp30QDAMA9n_+"s#LS^3\ND%RoD%*g%HNrR[4,!^d>t"VpS*@iHb+&M6GXHWh?-DCpue/.fLhNMe-+;+Br\AhRBjen*qUp>2KsN\6IB#&Va.cVoVo0fGhLD=!*VO%ME&_$>FW\SY]V(<%i>N'`f?rO!F$`$REB9S\YgM^YmY8=[6&>YA`J9H;Y+Q]DDtdAY.M[:i8jDKmd4DnIN0t\eqjN-X9!Lf"VB:6%k.Kr5R!9FtMFbP3TZ^5qcq[1qX5tYVNf5QP<KU(aRp,2\5meJYWs#5f_uEEjOdKG=Wlf'Cj?q5#5I\3i"`hU+d4#\E]C@h\GQ`Oj%/LF]@i^52r.N+g0@Lbe-5P%;dJB)=>h"!YNC(r&W/nC56!MI=t?P>4f6#-BeM`$Y[CCTG,5RMjN]m*]Neb7;2B<2IG[]YmEX[u;4%`T<8AM6J'VRDYE$+0/,]r5r;eaRPu4R7AJ6"iZ\3U2.]A/;oXD@+?\&V+Q.gO(kF]bO<nHIrVk8QCWE4_.oN=$=,B9n`m_k<,?!B%C]1op%seNLG:GLK7]h9)Q2?VaAL;(!fnQ>jo=3NFEDe#ZgnY!=:\Seaq,B,mMP$%Z#hCQ[^\h+hD_4j]VTrfF'WA@CQZgSBA>7%;%=)B#%d.Qso^*@ftA212%=L'-:3ZiBT6-u^:-5O]4Qc&%UWZN[uWU<bI:_hXEhOsg&p\^\h<l(_5-:V#UNP=&M0WV_c]j4CP?fA64%hD-;Jp;L^feeR'?.i58B6"=caS?CV9H>;".]lg*1nLdgJ"K@l0Z?Z(RKoab^FGtaB(@3(^%6BhI(\(lcdUZ'mQ4&:=2tXWfEeiA.%;E!T$`juGqJ`#UV9/G2V`+7p/<+4;D;';<nmbc7C/f-se(En@E8lgQuN()T=7k.qcXDp3Oh7U[a2pW(ue30:jI')P`PRc3>GIsu]%\*23(s1*9$0#/XXVo^\87(;:]jF.9.]\2>DJRd.&(+`Tp:5/98=u!c;h5qZ9:D]h_L6R#hbM"a>CdmZp>W9dpVIF@W#?jY75V<b]%,=RHc#Vld_4".Gc4CZ`q8>)@e(*?9f1K(rfap8,7,b?Y]jphU$VJ+;p5'&:<a]a);,aU?-kZt/0j*@H?\DH&M]gUE:lWZ+BHn8H_%CmK<uO.K"T2en=u:@Sl<`@HX4V7ZM?577Fm]huW:MG1a3[6f6#.-SX[9#&k%>;A,.RZdEo0S-pgG;Lu8"SC0qo?h#DBn>XI.,fHK%<MdFs-W+<Fq`7s,d^Ns=61R`VLoROcV)odc3Eot.lpltNKRkb2l8M:CK"2p9!@(g&,9l"*PkR0OYjN8W>j0Fj:ElgqSF*>[-F*9+%1I[HbRQ\VA#BWinGC6g'8K$>-:e[5K$HA.q@lr$XO8\1uQPQWOWVUSD5K]dI1idP1[g"OsdbZ7o4nK`NX\f@M>$if_drLP,YbV7W%#UA#?NEXP-Z+V-(IC6>><5M]K>O4AIm-kou=6=+te$/%*T2g$oCr/WHNHSP\QZ&.o_HJ9Q(/[h:*m^h8&HWXij_9<>:CaA;O>g3%%9(D=s0BnW'NC$JLDiIC[Qn=4@BPStsI`]UE*cbB,_]`.t&%/aFpm=u`nY/p,j)[XgN2bd%J(pm;XuZn_.J=`V2O5PDZ&>[N8+Jj)%c`MMPnu>a%@^dr^hN:Zk+sa3[)o0PG@;XB!:1FN5[q(\CB/^LoW^clWCgA94WDPFZF[%aQA<3jt0*RJ<NQ]'C,18s4^?h6kM:BtZ%qXGCc+H','Ve.TTPN6FUWnhB%Sa2Yfggcm4,^Pp^qq`e4o?R*S!1E\hR[phqB'fA1m8k8M/XWq[M9l>:PmB@_.#M\^3&`X]U'@Ls%PsBS&`^$dA*%FN<bHuJSahB7J@G==,I]gQQ>r#:(19Y1#G]'9O7l<l3W1s1oIHT>bCcRQ!gk\tS"haN2fS(L'ZrF$7I8lBb?=]sP%Z3j*(Z9?t!c$3RJ*R1UjGWQL>-aCjbmj4qq8o=3aU_fl5I-Wu<o`$W`Kp(%<,-Z[s/240&:gtMkDluXZ"h**8@l(:d8R8L@!YHa'%'$3HQ[3'eY_R-&C]tLF&[SA%t+$=;;\Y[qKXi:N;IHekH''cRVB4AuY-:4I4<Xp-M1s46j26/Wj12BjC!EgkW,^1u:0^>fp+[<g@%]%I&L*#-Gco]=%mN0,F&<*nT%,rMj*oW48Z3T6Nopo8cm>W7Q,oIH4.0$+S<]>Y!2oi-9"qP2T2Q2Fpp)MG8sP?spe0tn@bY'R/3%gqR#%<+L\ZY6:5f*QtGa5RqjmI;oHAEk#59K+5p<E,`NM`7ef<J</jo7S&.HXf"[!YN%;R&M//?bP5g*TYl*N)U;Ye-a%lJK,)n8%M[Lm:384mGdjQrgcL2/qP(nbS&4Vp_.fn^$eXC<2V:G;W/m,q>E%0-Q<S5H&q+d$fc![[bYe@.gdX,Y1rl(hLN5uT77NGPPoJWa>%n#HMBVP@<Gh2-bOB^N99;.Uk\Q$;%,'XK:bVufUI3JqsY&"rg*bWZM=X01P!fKE8`!NTR>[22t'be=EkW)WW!-nYj9;6@OgQmO?e%PGPS8/.P^=)Kc:dhAA(698g!e+ur;*XgBX\A2T6YM/cI?[@Bu+5,>TkNjpK?gb_X1\KI.$JuZ$K.^gc'lM<Bn]s?@$Fbb6H[fp8_%0/fJmh\i`e7IAQs[B.BV.,/lSX!lOUrDY6PET.sb62"1&C_9r!JotM\jCLW%!H)ik?3QRh_*Y\320+<$1J@(^3^g'E(Y#JuYG76b%(cS_O7uN9C_=AWYMHQ7NeK#+"@_6s9MQ%3sHF0#&>O;KJ12;ZPQ?P3(&^upMnIB@HM2Z>VG-6k]YV+#j1KaM-1-8&#P4&GFU1kYb%I/kbf'Ch7@`P/@!RE1f]9Q/s%F`nhJ"`?%bKdp+3OIWE%n+`X+[Z%hSJE5Kk*5:%S,=Y1Z9!AD\4Sr"U4R*hI3E:Cmhe;hkYcLI#%Y,ttEm[2KSo_Hq=Y?46p4]1nQN@K8U4@+::C`l#D0E%ZZhRJ-L4=#tXR>/Z7.lupi'8jt(+R(!kbK0`PDCN)9QBMjbB`c#JfJt!G%Yhpn7P`OCk]1&U.J@^]-T^TQZ8dJ^0K3,@!Ae7OjSX$sY_j?\rGA<)ZM4b!4!=P;^XMA>\:a--,FLkJJQRcT<T%Nl;!B^!E?j)^Q%>?M/_,[*o4R-q!$2Td2+%_:<gnD[&'C:qXu!n+L.astI^F($=l<a=uDa4OrO1Am6?<SAQ`4U59tgJP%#NZObV2f]FBO;7*a`%/P%%M)5O[kVG5[D)[p^"j!P><F",\aE1(>O`^PsSaaM5");c3rM/a7o(j55X+eBb^(+*s#=UgCDf/bRc#GrO+ENg"@bmNnq`+[o*R0Us%Rk3G+Lemu=4e]_X5c/B1U+h+h21CfJ0<nk&-jW*$#XqV=!,_&$fLj8*Pdr`7<Cs:YA$dc.ngK55m%tR^]'Tja<1nJ-l2BZX<J7/r%JM=NIBu;NoHLH,4![60LNMY\:\_`%ca$YH(*Bt2DGhh)4";[ebOg(@&##",@i]_Qd([N9;:/M.j^?SQO1I-Rs79mq"`8't*;$KlY%g[,>>eYUBb(<7NX]<#JCH0KMlK$6`G8m]__9cbE5j&Aap5*2:tTUG7UX^er.JVB54a)$uf:\<`8"f:*a-*K,j]fNdi8ignS8\j8a%7q5!Y)U)]F>)`5gQa.f)UPP[C?&[K_Jr4mL(U7:L%sK,L,A=9"6sb-0k3MKMnbSf)Y^7Er,THH0mr_]4lnT)-o:_GUl/tEB]a9eW%a46U+$ns!)4iL8q1N/66W!e=tbo'`J2RZ=EYtae6Dc^tUAT=[aH^WJ,PO(>I.L'&JSXd\[@PgGh1<HmNhR5=o5t"b!YX^fH[;(?]%VFt"XUrZrUp>a_f>5GeWM5.+DB^q1g6PPtmd(*RbdJJVHLNYo6b]]d0Gd21a`TqaZVIlnR665Y_::BCrBfa4]]"p+C69k0h=FR5b%&6g5Mm0m%3*4fii`,b<*JuhR%P,ab4fQC<-78'k3JjT3\6"(^C8f"+`@b9;WX#\nW<Zu[pqa&D?Tfd)UfSbch_KN*PdOuGANNBK!%1!?Md%jIkgIOk]S61+?plD6fa`KGqK9u^'!<rlHW@[%]=CF/25,dWNKU'nLD@^1!,fce1H7J@;q,<I[6hc[[)'V0a/-Nsl/ZN<(d%[@,%]FsU#OCVR7l.@iV\@TRp\YE5-q^4)?+dp7p<"LG?c=0!'1kGbV)p5>?-G38R7agNEh_fSpo=k31u"B5W/k.l)pU4EcEbT^&5%'Wc60hR4<$*q[6Vhs+BfE\m+2.'%V(PFl&'?XM%8B4Q/ZS%,E:5&+:LI1LJRBh'*<`t#VDE:S3i1U`mTE%8r$3KNl;h-9;7)C,tJ%PjU+hJZ=0KG#Yc*4_hI\a6qV&QUpqTf(&pVlL44*beMUQ@68CkRED];q^O,FgS<=6(g"6YPO:D5Fh.#p'N;b`X,lDs?"!9IJkA%A%+'n!K3OXupA$qV/FPLICLI!SMBK=V$r##.T^tg#4<HK\YZgTgh8<grARhXF7K[=H?0I)1"Q3U"gaD8Q(hW`\%#Bc]W9c34P1L$)O%aR\?erd&f/b;M[b4e:CJY:sQD-S0<g#h@3Z-*,>*.F)`haB!oKXB&u#I&g*@C-QHjd2"*(7VLo^okKom_Z:721c6%\DB?Jr#KO6>%*(X-L'en8ISrb@!)f&e5]cCGThcmI2eG%c_l'6\L5Im0-4&A/oqJB=$cE2WelGJI@7;;UpYL"JH:@2oe!)qI*=>p@#?@8"Vm8AI-%#uhbU2kKPiP]oS%;1i!JW%NC[O+-C<8p.>BmS!i.f2hbePt2Vb?<lr=WYWX2@kMjB7BnUZ*+Q0--E@*RID<jqh.OTRV2>lVS!72E%EO-!$mJf]Fe:oN'jn*`EaEIY;OlL^`;@bmM%`_m'\GHP6K>*;t;_qJe9BidYWr`kc^Ilr8#6OF=O_.=H9]ssk1Chf"6uB2'::D%D%>^fr?`Iq'X,)FOM+tALkb[7\cF*^I4":O<*]j#)*$I:3!i_53iblMUHC/p'X<&*#BaE<*mA?l*_hX/;BYijL?WrTj#$j_:T'!RPr%l;cBG$VM8tH[/aC?Q_c/CDc-9i!,O7n\$2'0\rZGQ67q:msEdl""rJ7qI)aZA9?MZ8Z;NcROU^ZIqq&LLmH[KhMr`Y'%^jK$Z!&O%dl\=/.^u_N%"^RkW7'E:+X.2OG381tQEbF?]=`E9Ni^qs2)AG?j`rG"C`D:Q6q-$WT,Uo$Se4"V=)\k=i_q=92-fD!aP-9J8)k2\%(_>E\IU0B@aVukq8iBj9[E6_U,-N*0TKeRV0:d1Oll0D5<i])l8lo%..\asTp+X/>S\%p)('Z%<cM&gAY"3P*+&(9(:qC1uO(GlJ%=/5"_]@4b+CM.T>ef-[o\Tk+DK7]u]*mhZBmtd/.9q%HsNJd=.F13&VM(So,NB9Yos4?rj4-hG>F^IuF:n%[A"CAq-@7_bKJ,k2^%JqUWI)Q<s6OK'aOX!QuuFmTSY&Xem!7<2IDFZfp>+3_uiS`:;&7(cZn$1op308:`\qi(l$eoT.p*"F<@A_;_cFGCEf.,Mk@b+Psf%*q'Bl<aU2I$4Rs?9N6J"INu/Dh1Cqe?UYijFRB@e0f&:mlT/r^q,L59VN<:&:@XE=Q@knQb<\`492EO6QHGp68kb2%K%5ubQA5)o%!&35FM-gSX^KD(BhI1Sr_3>3%bT;TPUL@-#TZkEVd8D!SABKWb`WQff\O=G32T@E'FnFi4kcYp+JoUWF1\N3eD9XCc,7B,o.RJX(%T)aJGo?^1O4,Lnc'5^>\_L[\_P3OHK74@-u6dLWr%0ITl',O'!7ZmjTLBn:]++5L@;\2cZAMZ/4TdRM.,%7^C[]_\&;6]3l"3U<k%/Pa_$O!RmLTMBFBlZrjhD(6s2AS2!<(_klgGE6W>0[X8\4=@*HE9'-VH/;ACG]'r6?1.A<=_Cuh?\I"1TSfZKHM^0BF1X(e!Kl7(%""r1+[N>%KJA),%9egZA6t!_%)I=mF#NP#JG*kMQXKmBWYP\<%^jA6-UGKaXOWWrlkE*>;UYS`Yheg%8ZB95mkR\gimfkri@,$[6%onjA-.*Go*7#R4O^+Up$m(;G+DW9a3<>`Mo0<1nU+Q4Gb"Z=Ko_RG]_8IXPL5s+#Zal$dEICmFM8V$W'$XH#:)U,qEis@MO'QL-m%SY,&5n\tbPC'TL%8<eISV&SrBG0aP!p4pHk"X]`$"hNVa:rN&[6IMNh03nEC1"S+""I:5]*M\$1<KDbD31mU-OWq=4.C!IpWScZm%G;K6.H3#RqW8D9t@1q'U`@03P8upnH2'<jV,iBh\)Q4KQj=dg;KZHf<g=O\Qm]1b.*&$"h>1SOV4sTP+Pq^6siO4WtR,LIR<A+4O%pV.K5+l]A6D"@cY8!ak1[A62>c;oqD/1(^qT[&.'Y[6MH`Ig6#/3FrGDq1+Ib[94]_NJ0U"<+-e;FV2P2\[!tZ4BV;'GVc`GpYh\%f*'"4I013bG?p:+1+N]XVGl!8K@'+rf*.M-(EW!e;)@;`.Qe'<cAP2q<m7MM)P.fhViQ]dY8)<+[Y]^b)YZ^9i_hr!12FX-,^1S(%:n`"`i1LU+7mYd8$.#>t&B`(VTq#``$4B)Ik0!YrNP?C-cU@so$s[8M=;\nA]&9N_>Gp0<r"TQF=gcOjUL8UR(*jg[I_M:f^n&nO%8\0g8kD.$!(h!fbF<"%H0ABI2pBuj#\unHDgDWKH?+iRjCP9,HC\Pp!'[VRX::`/A&^Ybuok%$8Kj-Wd47G$W.7'(<=s]5h@9QpJ%&g`N9)6ZtpP3-9a99jbJ,0,(uH6T_a0d9_Mp[7*Aj+W"1+(W#a4&eqViQB6<bok:M?t"XuZ[NV4nTm3SnR[gFoh^SEDS5ZeAf8"J%ISQ,UD@3GNlOqOB\b*&mbsWt41[IIjj9Ku'`*WO?`TLM(btP%'&'d<72/1.O@6TA\1G$noMsB32r9_QJ&:e/iFL\ijE_CHY"03,4%?a7,8*?m5/V4=d*o*uHffeJgA6r;(NlC55b^^CL1faa^<aH9L5+0joWoqggk#eW,ufhDDUc$;0^K^;&"a*2;5f)kiem5d:Yo56'/%dT/O&7(ibOCqD;0D!][,kRnt1FKs=LhNSVqUd=)RCc/'b;I(S6WN+!$cPf:>.j2.M7A*V=MRuH:Cc6_7ZOj&bnm*U;8VSnT9TocQ%5-U1P#up&730W^;hJJ\?<#D@d_UZlClNQn.>Xn:QVQ,`%mJ`9.'KQg1YDFoDRIf@W;t!>V19dH]/%HO-"RB,pnTfj.DqD!:44DbX%9s6eZA9A[lmC28di$+9aOE+k/%RgM/bSi-.3CW3UfIq-,S7,;"[94XUR>@gP&n!^t(fMr810XL8cbS+#efgWGA`^d(O[<C2,*7lm%:s2UOOl=`/X,$f/>5[MU(2/H'-)o"Z.9V%RXul!P"b^M:!*f?m!\&Y(Lo#aV#?O!o\4Pf;QO/S^R\!2YaWB?]3)K`]K=7!i-RI5U%I/h3,m3Nb8&AJ[rot_(>Zqo1`B1!sIW;4`uCdA,S[O/HL*l-lJAt0(OWlU)a-?l^-[T@Zk+=^7D*o>FN7T?faBo(dHFOeip41A#N%)3S+8EO02uH=m#@k!Nl_-`3)A&lBl"qd<P=9jiY`_U,i`45\h%_pp=s^@k`.JXSU$d74^;H8oPSTPn1LU'tOnCPAC0i>?cS._JL\%EGhJLJr#9]+CQN;<%,$nN$=G#i:G`U=/97Z&Z<d`.,s71EM-5A#`>r\iX1#74:^Qak]b]kgXu_>N&D1lLQ#CV&j@c8fP0-Bdk8U9%0<40S;/7%SQD`plK@KD-1:F'SDhHcRGn(Ye';7rBC@Go=!sbeb#Y.I>EI`Rr`Yn@J1sOte+WBB=Lrp[]8;E!jk'8I$56*^Pm"bP+%fe5%;*@P(NESS@pNeHT-b0:G.WspQNb\>Q=`9SQXe4`DF_Y.D<6(jbeMU%!F:BTo>8M8.6%rb72256dFZ^/C%i2hV:;DiR]jYScj%;2s-.V\<9l]QnhELnOgU_0jL=VX8mt`J28IMDek("H-F4mjTh`nBR/?0u-SMFcg2"n,abNX<9f<a#\qtR9N6nGGN/+Mn.lWD]aq2%/IYQ:di]=o@G8GrWH+S"!,KS<<,#"+7@="J-7:iRCP7hh]$)@FZ(N\TgMWQc5]^b1cZIb$BsLJM0+jO/#utILR[?+o6H_Y(#9RDR%T^EqPpY)X8ImCHV$8qNiYU(?f`/$"N*&>:;W-4hB`s.73LBYPf%neL7/Zr$+$<K;?/:P69&/5#h%e5FAa\WHLY>`P8>0)DVaEp(0%:rJ`c/HU5-\L?KKJ1&RJ=A^QDH4W`0?VO2,!@A;HG+[YVpW6M0IBZZpR*7tB-E?AZ=^r?<N0@3,p9R>H!!dLs\=8a-A!D%e$A`=p%cE'D3//7T(O[dWt';MRPEqj;?.-F`O#He;>X/B7#J^@XU-0TMrRkK4nQCtS)dNrT:FjE'Z.g2Si4qu];!#I0n1H7T5P"Ad?VK!T^%8cC(19lTDZKbR@p7^,22=99FudRmmlj]V,S`HDBaLF"[8'gnab&1@Mn&^b5D@UBC4b,%K/UG-R'[]-1cl8,IclJ$^$<MIh?^+Tp`%l90n/#Ia\1Ak<R(a;^F^93##fR?A\S%9^bWE_0BikgL+?;TL:&0Qo_bJ[f)!%2<)5cJtAtWuW`(hh>;7Nb0Ijf]5rg$6icQ*6Di(%6^SEh<&\9IMb6=Yl``(&Za=:Pm].AR[;75Y)bHW-T,aV4=!IJrAk!U"8>UFmZ#PSV!20%bO,%4!/E]qP>7WV?N!%C-5\P.S-AE?%%F.>eL=o_B04=-bqRrgiE:QpEGs%lj0]\FB6@.9a'd%96=68pX4[n0](r"B`kS!52&'Ff(SG+'V%M>d.>J;Un9Q(>T&L8AIO,_R:&%Qu5@r7b"!iXDsrEM-=e!!%(1JDpPb(_LdYfm&Uu^6=iA47COA9e1R[K6$:E2Q1an)A1<NG\ciPc/GVV17PiN41dkFggC_O]E1ika%8"f&s\(rrEi4(s%kM!Cg[UlAoOH72houto(duDa";l`o!d7)\1&d#k\H3!Fi&GDbN0D[R]Ih@*Zdn5"PU(<U,@u`41q;GGQM0*k4%A7Zo?(?<LX-WpTY]c3m<I:`1'H=q,b#mpmAI)Jq\P88o=,H@$M.'H@hTuC_J,r4OaXrCkLZ$M5C^+iZKGUZj>jtFSu9I?uFhGBmW%I(:S^VKWe#r*4pSo(t'.IAC5+0.5"*eB(2[HcJO!L*QGuD>B@8dPM+[6QOaHQ(GF#:CD)1,Vh:EAVPX'Y_Y4V6dSIrL?BRW&rZ^L%i]b'oF_#"4B@>[B*XM6O^+7)t(c>sE;dMLSQ\915!(2\j7G?B='""0F`Jl#&2u%7MM_Int=[X0oMBkGNHnonEQTDr;!$ueIeE-<Y%$W1SI.nXkgDIWbF_=9G@<=lJ2@YcGKP1>MeLLEKfp&]?jLPaI@Y,$AjU<%lc'Tjp^QpA""2TK06U'BW193qkKU*$8V=&$_OTi"R=%f2D)OVacY$<&?kIJjb?Nd")I^=gHtFfN,8MVAaj2_NUIVmU@:*Wh8g9C`/I)I^cD1@SPl3[6@b@*tk;9C1k9^*$\m"4uiV8lT-?K%P$RjBP$P7YI+IO[F?a_;_n]6WNiZu]2nP^WXs&KVI->:aGT>L);gFssX&0RZT_<&$<rr2Z8F%3bCtEQP\E@^=X0t2o](0;(G/lM`%LED(Bm9s_s&n"aJ8c79NpmfSWU'O?FH>XLVAn4f7(u^7PIKUDrp^N9mJ6C_hg6OkA2AH6)Hm'WBPEtBfr49.Nq5bE8_92[S[UNGU%cb9(2/V8@ID(=627YU":QKAN\.70T6p'/U?L8><@MZQVJkRf[XQaAK?9XAtd69u,Ps&A@^?"2LH+@VA/E?aW,S<H8^?T^r_JO^"H%/`N"t3Vh9+'-g)mk$oYm6P,ktBW9Im/AX#LnRDu>YooN,\?-Jg:CW2H7&!4EO)WR0UkNB$3C\L<0Zf:\cpjZ5_NO#F_4s?//-[ZL%"h#ZT#\X%2YZR3<L\)0bO3;D&0iso$jig_=H69Ys^`lf@J9*rVl@%?S";#I:n?sC(>3`#/`BWoQb\)af8*6-YncB5!m'>,1nVeg/%FuUq-+<m]<iG2Cr=SLoCc`$)N<Wc5^'Hi,GbJ\p==2@6TT.RSo=LL3TJJj=PiEgZJjK(G+]`<Ys8UA(uE<05a!SQP?MtGs9@0)3O%l^VEa*XV.f6>o!>#:J?l:d?AYlGU=bK"-1(KH[IV,*.)Y`ArBZcTZ+97$(f5[u.jIN"L=Po6)f*$?Mqh.P!!W3I/$*L3(qU%LUm[%:G+PS"Xk7)#.K^(3eR#*"qiS%W]d[+MgK:Cg'n%(&56]=$qW5[e>.CLJB"a/B*^R@c],.5(:;?DJ3rt#?\"$Mfh%5J%be.+M+]6f%"9X7+HQqj-*-5+J^*l;Nb.3>^F(7n>#A's9a:!,`A!$OlbgJ:\O?(\*#Ad@2L4q(9-A>l1P$1SPJ4/-)Lcjs@Dq5!Fn9CF:>>-Xn%<B&H(fo?s<QmTCh0f4[>"d/>RR\r\'0YKbX:E3t-Ij>QjA34g41rC6[YUQ/p;,0dU!i5-mDgDKW!"V%/Cb0rmjq+d0X!aNta]C&m%s6slTs,5c`s2Y07mEaZlT1si0MeW3T#DP\U,<O<h$U`SM^1-8UV/DpVjQn^pr()GJ5H5;q`hO)?m%(e[4@6:a/[u$O_EQ49(8\$2%k<?]$([*!ARUnlA\n]1]d%/.Le4A>11fj2K(-4Nc)Ed\5KZ1XRjOlp/N.`n<C6qQL6^".]]hmGtQBq?"^ip",BKF;O#\;HMY/HNc%aQ4B&4[/Q;QgI0'n-C)h]_,9I`i<!.66@tW'Zoa<:+WDMC"Z!-l3g!C_6,m?BjHHm%4r:dM#%/bB[7on?7:9>6WG@f-;,W08[&b@%YL=@G.AGJ+2Du3VA"iXWYeu]k4$7s54>.YHD@]CjK3oB!s&</5VGVSX7+(N)6_B?Yk_84>NP6_4:D1]BZe'kA#j+kV<4m+<DC5iq%&P1mgOU3_Whc0Se&)nSGQD?L4ekeVJ#Y(-_3qiB=J!h[f+Hl@*#3QE48/l!-A\)IVNT/"sI(VYM,C-ubOU;AM3h-s^qeBY`E%M58%n49()6`LMR\aW732&X\mA>Nq):gTb9o'6cAgB$!D'G=En"p>ocJ!!h],!-W&kP5ltmf<9DWEpT;KE#k6j^o05U]jYQ3F*5t[ZXFD%GR8k%\rO6n63g,&'r?l6d+ZT&4ie*IP[$q<;?m'(E[l-'$/\j'2cn/+EO"_,O2`E\q2D_El<@Jj/$,>uH"!f$f4mJpKhdQOmdg=n%T9[m:7B@R)bF5MCTaZ*rV3rd0e\U:.ZcRp0K"@0h&cjV#J`B.dl,U:1g?<::E\6Lq0J./XW4Of";p)MK+:!GLAls44+oJU=qLt*%%g9;Fg#R_/]SMFtsa3)!GNOnZ\P5_\sbE_)+;_i^Y9mo(=Ok8X^gM;5nc;\&r(p"W'#KGF=ag]+L5A\A&C.8UPJ::T+k)3>'MQ)nd%4IDrVs)Dh7j"J(M`15[!+i`KL;/d/6_6roGbnW]rXegH:g[Tel`DqAO;e&fSUOI24UG2>7]FE$1YW5H*DRAONq'KrY`\o?JZ/1bC%kFN%"1ji<c:7C7m5Bc1U/U-`f9_&[.T_qc5CN4udaUWltQQkfBon`1kZok@LN=seS2!<*6if9Zl?[k&n9(CV()f`+PX(d]eLnli=%PN_%XCP;GW(dQ`Bnu"%;>DEFJj6M,!!5N$jpt4rB=RJ#U;HC_Yg(=G]&(W;1?\Cit"&l*MfV!mV:O-m_1Biso771UX"d-XU^sZ_:%6+jfE%3%aF'fg#6jg?P08Z8"(7B>@KG4%!$Fb>)hH_4+mZ)MjC6o_6OoL"L_n^NN5LBU5Pn1l!gDBA/JbsGk'Tk6m//.\489p`\E%qrn'`qli^+>1g4%<9.AGE,b*lX[kU!5@dY0bh%l6H6*:=#_Iae<9(/a@1%kD-%&j)Z^qRX,A[t(6Y4>j31_Ikf8.J0ZouPR:,%8S%i:oQFPD]fgM[hjVQXsob[&I`WOofQ\&]gCa"IZbJkFfZ0M^6ie-NR6X"tk@)23>uIHn$JT_W"9@"h7WD@VRAKR6-]8.\0P6T>/4/%HFP\Kfti;G_OS66A?u_@V+'l//5ZK8EE$I[RrhO'kXcRo.`)<u!A)(:V)U]mqLcke.`@2]5STb_"odWO=:-),Uj?6QOY5"W!W%CZ%b#8Er")l2b"Y@6Mhii1`=I<Z%@dXJh#Fc<c)GcST%/-X*XN>b`m)lN$L4LTl=W;EkJ5sg)2BgqDGg:^8R,Pa\OEF[:6(U$!UusB=%-qk\JZ<at4[9=Q!QSKs_4'AjG@YpUNJ[$\/;/d)&`)Q!D%91U/bW'a\+Z4W<,_*n>N&_/Yq+*'h$^Orlf+:X8"8NKkVBDaD"_d`I%UFaq]k`7n&V,0<_BK*]BN$-p%ViALiLP6?=]-S7<Gq#d3-Z\@*XGdF>>P4k@k;]k"qm5Vu(.f"S1h^/pC`9mK(C%(Unu>FSLWZpc%Ac95Ng"r1@&!u3l7`>+?Aa<Z,:>XP'H9%)Y$k#W.L;0iZS]cVZ#+rNulR()&NkJ@RN$!npH=<jXJneEqg3%g%f#/bk8,NMLkLp;$%$eKOb+[Z:Y>(^Vg=sk7X,q_^o-&0nSiio[?FiDun;T2MQIUfq*&dA/4AWA(^1Ft&V!"Y7[o(366-l!lk:MdFmYP7CLY?\bqp='A#%EpY'u6(!sir]"l7Vm#4Z<Uu/R87B5f(i;fKXh9Ftn-O%/_nEd!X*hjGN@qe%o7Me_k6E5q&gsuB3iFqNrEQ@gWmtFj3)HBMCA+`:%X6[#K1oqr"f(,fR&m=>P\@1m>2q&B^lt.0&KGte?_`4t'3N,Dt8_=sOF4hfe&)#+b/UF7cNmZ+<kIE9<n^eIto$j"`[%Kq5@"qC$%3^VOpWL$Vlr%paoo4]+gHo-Zu:;E0*ig8BlPNhU+^NODV.Z<HAW58^?XSNXcFB)p`o8Q8CBf0o1-0\pWaPSlFN('2@S$%eYm\.EL%^0FUEcqpk40d>Z!Jq^gNkE8%e[F'3^g*FN:rJT"jq/rV,M\T>*.Rot&W15,/%LQB?6:;^@<`j!1=3$Fe$9Tdn[4VaSV9+7N,6T)R%j:Wf$(b8!?pA87:/.+P&QNlF\/mJrpB,'TQ19-$?ARrW@$"70P&TcU<p>Fs*#"e!a1A1+n/s'ic=gE=GYqY:m'ft*Ve2A<c=T0%L%*,dL7IZQY)kR</<NUsB$lXHEXqeCtF%!Vi#S!iFnJJ@<RYsA$pjV+\QOJ4\LOVRq-(:uu,NG0q",Fdn$&ms6XO;`AY9ouh5D\EGD%g!j9WJV.5r-;2t&,SAp^*^sER4sDg&P=@NfkX<*\',h'D!>]+sVQD3:%T\1e9Q.&B]GA.pT%Rn]XCltLXKH*$dj;>")SgQcVdafW%V(F`=R&]1pdODbVQd&N[/saIp7*B[!oWn#7*i>X,lHLRTlnD>F^d]Ys%__*]*E(F7dpqGN"8prU")d0XkB9j:>2'qI.05lL')E6g%AUhM'3QJ3m,A@b/7&>3.,E9<Qd5Fs'%gBRFnJ3GdbMfUA>-l#G>IE-9$^F=P3D:lKhpbsN#tY4k>M%3D:2H<u4iFO91-grA=VqGJ%=@@hXPY$80Umd*`$9$u>>;uc*XZ/rC(aioQ/1nDQ]JEDJY.E_,I)[pQFR[Cq!NoJ=FnH3,%l!liXA(m)W%4A8,:%BZoQK'_VO9<V%(a30A:m["M[YJQt#MJ%s?aGP#]_n-OnJo0BS+iWZ(V0RP'g0?Wn)pR=J/uLjNi/VbpbEI3qChqTs"oRIC$9YL)_l#L+ii05H#!o?%;`j_-[bZ_!nfC>gWHubg:8JW'4bqT'";o1]AB71EIZA%*O2f;9fBr)jq(n9o@lOuZ+k*49kFJ;F5)8PKN38cHeA^/+N-]/8*lcV3%m31F,,e&qeR$5s5\Suf+5<__@XX;>=<U@Rn9epJ65msrSHrZO^do;.mfm_>U(p$6s31EP8(/\,ODt",NAOFGYS.sYn<;+;88o&_p%>=?E$(.Yc$S/s#^77F-o&TV2BF*oc)EZPZeF"2&QBW!h+:>,&[d:Bn?<gh<AX3,#VO3&HSFJDuG&4R:K`!T&#P9\O7/^4SsN)<BU%_Y-K%W/?=f_G?Ul[#Nn,Ks:*47K4Eo<S@Es;UJVgl(+bF*X`^HWS^b!2`11[*,Fitn"aBFYrYjV86TU7BXZEGp)qCcGWjS,?7"r3%;f^ib4To<8b%'V<bTG^^,<+`0DsajZ[#j??o0`I'B'+K_B[M'3lu,((2;dC@-g0gB#47M69E.^G;Q[gr`tknB28],k<j5&>J2!+:%BM=J*(cUL&N&t:=F0XK`oGOMh1`ImnOfaEK&5=p68':H[/o<Y%VQrIZ[&JLdA.a(!2@mA:"L5`VLt6e#)KspZ+[H_#V^;A'$7c#<%p[OjFg%s+]Mk@EJrI]sUiaEJ/_)+O;0uC<NgZ5oT)),@Rfo.OV5V=jL1+="H_L'CHY\48GG3`b_PQ4C=]9MI$%j,#bRnaLe=gD%P%QAAbF]t42QWZ`,Ai]$$LckF'i7t3J'YHqIR*<*Rl6EQ5lV'^03FZIS?ig'q>"<L'lTZh27(M:3fB=AKSnf5-.:4$dT/3!/+r]Q79%IJfKtk%,IQP!N#uP-i&g5Q%'7?uN0-%0Ef]-n6:CK]LFRSm`9o<n_53d`lguY4ZW].tEfD3Glo&W\(IXab]VL8h\eK-r8"KoeE46%daL+?TB9ed'[\Vo<sNA9h>a7L7*SAC"CILdnZf8M;K-MYrSJK:+tjpH.jdVhQYM54ARb,P?<^0!%4"X?RRoIe3PdKk#q(WW#RI1T%D))s`?ok)%bO=,>h.P<lScOLDR28P0\-c@hn/Ge^QgiGDa?88O`rl"Q@o_n/L)m#$\p]0=h(QFP4hQ/Kam:L.#+PGfZpV+0oA2ib%\,/"=aAZCCnRVUtils$R/(^8I9j&9O]1'dRX[f"+e[[d`[[U.YqOXCR;*5mkHIL18F&K@.SU2=?G@LDE,+j;ISNKo%hZ(;*bLd+R%"E@=JhIH6m>63!.FN123LfB#Z8aCTB%WUUOd[WCmibn9b:e=Yn9b^'NB>/St,V)]2\RbFa&R8<tjmVs0kMTTg9?Fq[ci.g[YZO+0%>M[l6:e8OF'd6_"&K4t>hg^DFP&b0m=L[1P<P$4q>;cl3^X_uSb,Ob^Nq9-mMm,X$b3nYLWL:*N\jNageHMUtaO&:;m6FbVfZlYQ%+B;Zpf,dq^3VbKM^(_V*=e+Ti!M5@E0G^^rP5>>Aha94)<TnT!Mg0QmFsrFnW?s#07,GD:W9S'1<r&q-;'6:Gms-jD%DJ7PN8&hm%*@4B\.EhH\M5t5C-k:43V7.M+3nYX9n*9;8r)?X]87o6FhiXW/,"mh\RA5#=[kpX^3,ua,Q9*^Y054FDn=bBP'!c+9%!HqkKdQ*-%0_m5_3XB;c6ULmQof%_hk%/$HZ[EnnFp!PXBt=GDhlr3@V&TSM2+Urd[[Um5H\CVhY8tm;jNf+kjNS/h)Kihho_Qa.$]></^p/'h%5tA<H.B&Vk)Y510VKuS<X*AJ+cPQq$br\F]X!k<r^?:?OhMl7g#S7m;74uW,+c<-q?ndOAh6rWgL@*D&hN^M*<d0M\=B!C9SsMLS%_7+n^m9]3C>=r9ZjrC.!6.rmJCuihKAn<QbNRDD]iSS7q'@4ue.[a#\9%.8(@;/d</E]N-PWe%4R`YoerH<@I-3_-Ka+rO,4'F+:%!0oOkr"jh--u53Gq6rV0iE;!2/=&NT#g/g6f4@j?LP\NuOtY^8336>i:W_XP1CC-m#SB`o(KeAaNJQ4\2Yb:dH&GN`a(#Lr>Yr>%%DHc&bkslG8UE20W'#%`38Mo(H\hb1&7gVp8KpoIdQZ070!#;5Ej/?HSE<O9Jq1O'SVr8pO\Y?IH3i_V'5NYM71X@tEq'jMGLUD90%fC@V9=@Z""TcNZ>EhA[P5I4K:?5C7g5C"MR8RZ"'?8>3uIuN,J+/i4h9F79Q.5bji9MfM:.R6f4"2<=<(47On1rhYk\<[bQ".;JX%FFG2DAFhCD9qeT@25ERKD<Yc84AoSH4i=5hRtif_lY+G3MNSYMMc\LjJ"$j&qRb\PGr,PamjhWsI6q5@mGUsDb[r-bX;(%1dIJ&a%q&Be[O^*H)@*;*og"<dP\X6>@GhXaDfTa<'!;peMc-#/("MkJ(^Yfi?KGP83^=.R>c\3ag%DQ&W/OUBegg?B^/_HPIRLZ<A7oV$<%9;XGU)/]Z0Yg3g%Qbcsnq>,94lJk\:&qq=OI:p+n'VaGilq;o<_eQ_Z/Rda`HHO&>%J30kfe@e?88C`tLW.U`Ua;"^JB;46LQGQ6%dQ:$i68bf:kahV(Y#pbAcuU17+c)CB4,us)#\#Zi!d/d)02!2d'a!WQ-SNne%-Z*Ir"W>A;=k!/lC]+Ke4,m;A,$4rLOD`##q-oJ%A"f2VEoFF)1[trL-2gG`cs\*bm#(I.3c'b^0$GCf30=MaRAt6S;u&!kni+Xh82d&_[k&DT/mYn)#(Dj@WGrc:#765>QI`qX#;r<i%Ra`!,8g6S%Ce=8[>+Ia>kE!J*:<CnO;jr)-_X0ZSOS?fYXi*o5),;fr?BUTll3J=:FjgHVF,Gnk-@JZd1gKdYK'^>cS\(l`iDtru%lfc^[9e?8^(18b(%+ai"5^A^PaJ3qE'55#CD$QQdjRSZo!(FKk9.;^&]2F=W%;<rjLOe)UcY\aNrd;j/Z7AffABE#d/FIr!h3=gZ%IET`B4>2\sS?-f%m3'T\(m2CXW1+&B`u!5*Mq.Xe:MnJ&eGIEW/lWI))'J$;+.Ph9<57-![IU4&Hsj1c(OlV$n34E4k@L<U#emO6%jICn3U8/N,W#_1lkWPR86+erJrNM06$mZ+Z4a`nORE?C"oN5!'E?A@.T,f\Q9D<O?-s"OW',K8'EdIR=9ZpnOnfYiW8,mPW.Q)qG%@YcSl3uTC9[lM;&=VZqVRGX_'H+H\@G\W2=Hd:AJV\UI:0rYJ?HNnDU7^J>X4'[H/r#)_`WA@e'NOggO;;G3?e#?9Fj-nL@[bn2O%\kO)Hrh:/^jlVT8P+I0m:jRW"H!"dc^fL!]ZYo5js"I;mqKCI^$'47/RdtjdC-;0e`I3G!fZHX7k"BopI&QO/C^I!cM;k-S3(f=P%XQQ?N;)rmqX1H5nfYiWa7*df/d_i+7d0FA!WlRA:MAVMd\sahY13'AC=VsWpi6/%t\6>a.hdWT2DRuWd2][`IMl1D_lS/_gT*@S/%<0oLkqq5)PYkjblSR+B7Z$DWAOTYr(692[+!^OX"?!o_s()VF4#3(<//WtmFj%PG4dIMsM\<[uo441se`BSu=(u158;?$.2/@-]]%oFs9N=>qJ;Z)q^:Ehhm&Np26$eCj<[CDB32i:rs[3jSj6;cFSL`/chidgcMbi]h7YkuS-"`+$l`;[j(+_Q&m0q.5enII\uSP\aAo%#eB5R]0'.][P^"Tg-!Z888Euu@?QB!T#;q[h*;fk:Xr-+,Z*l[6QhkO/e$*e?o3Yr,&HliS^rUF&*IYGX%XA]iqWY<TrHi\jCZcT%RG:_f;Y5bhKsAg56M;VU7BtB/HBGFn7laOXJVEs]'7X;!XYXgMmB!._[\Sh5MJP'Kas5(DK3Fei`"O*S(XeP%c1JQ#6@M:K,m^^h%9gITf.@2H^39HWA"jD+_5DWcBE2YV9%8QLB+7=k,g.kI&lB!Kl-n/IVWZm1n=*pP^H(^`Q5=:Ba!fuXP)+^ZN'c.7ThU.9nHa$M)%X7Wu]AK5u!occ$%\:fD^HL`ea4V/C/)hhj@Sm]*\Kr+ROR`q"SAH4KMr)/HAo8((Sa[oq(?osqkEP'5s0Fj`]LP>13P@pgM_+MtO%E`i@GH\-BsXYO.rQoaXKp`LRIQls%Ek"J@4OF:u>f':bM*=Q38DIq-K>UjaC@l`hJlXZ5%2ADE=/:<&]APrRhCjh8cG(l,%(96"N%gY#W+E_>^ib=CH.#)aR$K..>EM2*mA(C^/KV4G+R,-[a?WEd?AR1b((=>"WU#T1;p_5=JP&r=1LWsMfd6=[J7>9J7W9k.)?8JsC(%(k>&fn[2omO>72aj)UVi/&_leLQmH2!N!fcSOsCIoY"^;!f%A1ARMs8LYF=Sb),Z1<`JOH$8kRt0k+-;@`<A>1XTr8Iu5P-gcuHM%(RJq#T"m[(EN9bEJ2645*RZNOK@e1`]2qLZJH=cc61.JtY>14S5V>or\MN:EL<(<Vm@lRr0r/unH#I;q?E,H;gb[m>M]<fu\H1%4%p`n<s*ua@b@.cUdZ`LNkb2+H,Qbq36Q5/>ta@*S"&e&GM:^n/_HtU-I8o>m5e\ot[#M@hnhS)-i?!P(0"X;t;bLMPn3&HcFV*=oK%RDYfEAK%;']e$nnA[rkeYeXU(o"q+`mVX34_mA1G1To\W(fk69P"S4q?q63Dam/geBBM(X-.8aOc97,l>[eKTiQqHJo#;SUo\8Gn%>CDtZG;I)k],?Js+aJYs(KkX+(r]WG2SI)N(Vb0H:ak<^r!`rBA)%XYSWqM-AaDDc9I)Z-9lg2p`[[107u3B\9n5floliY`o\>WT%NmpF`.+ha<TuKL=O'T-sU(c$<mm:t5O"mR52M8M"*_\m*S=Q$t."m@"JLS='e/<2faZ;C-/l7$@j2p5&!"2"iQR!CnKZ,f\Gu)ph%=QjZ>Q4YqiR<N[T<s_KlW.,b$1Q!Vt-6GkQGHOsOomGc9KP1rr!&KP;@ufM'$nZL%XCrc,6;:)!=8<E42N#/$WX,l*%WgOFK0[iQ%4DG3U0."db?:@7fBh?q:E+sl^RI.p7=QkmA1Q1O-a&XJu:O/uPe\]ANk/fC8o_K0OoW%7rGeLH\m7:AcQn;d4&o2MRMf=M;L\E>3%dY%#t^O*P<V:36$4&S;.Cl(mNkK"3OnO;F`.0:[T7tfIo0!(e07njNKM5EK8J4(ZeY@?4?HnGOi17gR58<BdL&7[&>5dBc_goc@`%"nQe.p,@L@k1R]%'(I-Zj4?g5(pSm#()tr=0SI,rHSH+!fVk=S-1uX.Ch3ClmCI`C0nhXHM)$X%a$#Fq?Zntk0Wu==;7#d+JmZ(A%[7@)L,^r20)s^_LKQTAjijB%pi$$f\\csC"js$QjRQffJJCt8s(Kr;FN=*oK22J/EZUHYn<^,<2>.,Z68(Y2R81<P2+mp;8l?6+N%Gdn5DALK1i?j"j6&f_`Lr%ufkQCGr(Z43R"TFj[7e2.l?A*ZDPNcs0IrM0Fs<Y8\pYD#8_`hK)]<n7-GJZEPhDPa68ai."(HKd@4%\VfUapD0sq`?Es3Nm7,$"=Q5YULY%BZ^=Cf&9T=o<@O@=YL\S&MRT$Oi<1NOdJk9N=,bnb&.9jjHDgk>X5[r\)#)D#`*&oCOf',`%!&;#07J%EXEWEOLjWc"n$NN*3*2"-"DKgO5)m6P:%ES+?Ygb/^__&=GEL&m=^lj.Jj>P(F!rlnV`^=^96mO(a*Kd1,X2).cQ6H)R%<&VH&1FTCZ`e1%)8ab/'&"sX7?^sPaZQe8!3Hj#n7DZB7R,KFXN(rO[LH+6")5)a\15B.QB_'/,geU#BB1T*!_hiT$Z:=BC89m#$%`N^d$k8r=-U5jqtGCqCH^)Yt_6-?BT<V;6'O+f1'D`99c.$'MLYc-c"C5OToSq4^B$n71/r'O@@bqh(SXrHfU?EC5rG&$_O;%]Q^%CS$^D^o!:PG`qucPVAh6X=@Tk-h1a,m#>O/OHtr@C),"k+>l,Hgf]4uk?i`@2WI%/7'*cR(]b.cFGTB7;bJ;of!d(<`OrH$C(1k1%Ift(X$eC6R%]/,L3f&j&Y&_!<6&-bq%dc087(4?Dc0%go<"opaUp>FM59XCP-KaYh1fWY&U]N_?d[Q,9kY&'PRi+SB!g062S^lcL%TronP%g=f+4gA3m5?1dEjg+[keuD^R*0]7[Qu@r5,j-*7`,S@dfq8>6UhZcEA.3)_RZ"%61Z]XXo/s+7D6l8sjE)E1.1d.gdDr@\%]!_Wg)Y*ea&4sgO+[QNno8W%A7:TUd[k%U*\Mc`(dsg.hAZ=HcVmHsC8rV$(8:7+B:jOED'e,`4I6@_Ni/8&-_tP_l88'/8N&mI7%]F-Wr9N=t9N?C*ppggifDM1`9-oC!YB9E*,l'qQ\b3^6`m#,=:Zp@!#O^O9r7Vk5[4I\!V/GIf]CN^mO"0^L<=LF65$>;a3dgDkA%@c<,6;n(*^;Fd`Yn&`Af8,rgJ,"t+Y,8C<@]XCVh?m9.@*MU(sfL\D-2%t0WZ*UC;X3u6+bYu_FN3!q\0t7,VCPetUdHY/IZo:dc%@2`k'P]a_n,R/)KZ^g4d[B$qhEgS<!1gFp"N\:.Qb:0AZd:*.Q,)b"t0"m`i!E1J65fV)DiThonEsd]"5qZMJJBN;->.5]hb6&"@%"ha"pnrXPJGk8&%kH=&a8eLI9/.5-DNl@lce3bU+-!od#dGg*1&UHZk+<JQ!I_U9DCRZ!0KBt>J__;76*)k']3m=(`)bHE+2:[>t%ZJaU,8oV'/o(F'mK<nd*:4d:bkN-I7aMJ&SI(`L"(!*Mp;lH8`#!bJNU^R8"]./;r#*(gt4nlZYZh[KP$\U!;g#;EgQE>4.CM&Qa%m+@U(qNc\m">2Nu0$Ce-S=K"`,edlUE-9MG,4.g!o95]6LB?R2\4B&^*jSpsH$<;Xo8tNM,s.7c)V9imA:k.a^G:C5g@GpLMQJa4%1",4k)q/:sWBR]LO3#[r4_A8RZ#<\LnR52j\m;0;$S4:"n).-ZD?mQA:*L=kQ/_].`5;km+Grd7a;JrX\=Okc&\kK?W'8^)jL(t+%iKpU&-+5OH+!H"<@)u*`/I>7R>uTYm`L46_@c/r4?6U"t'?R.aA85>M`F6BpG[H/KEF!:5N-\>_d+L0(R.sK=AV@!Qil\?)3Ke;R%CVR7UjSWCE@/(u1XQ'`:1SMoUIk]FeqZp`-2WXA;Z]N*cH5@^e*ji)8+?'/L)g<_j+n7^XBBVbk6idK"V\i%jS7S,(Lj'-$ZWjm3%['5XuF@X%m,%o`5.01<MoL#fE4TI8B7f-M77,%adUq1jjd;uorQ/E\JlG?k-DH"ni#IX7@061/CZb3'IA6G0<$`m`H*=D/:d?B:`%MOE<+kt_=YAE@,>$pb!df]7c@m_"<'@7+ZJ#F$g$OD[SnAJC<Z37oJ_3:AFBK&MO]hF,N8bL4QN#nZCdb8)jn-Y<SaR-L3HTu9+u%U1,1=Dd=@k/79(KpP^TC'ZuR&BW2.+AYb'-pg_Zi_J1)=L+mc.`KQt&CroJ(F[#$_d1m@U%jVn.F8I57Lg(";9G@jnR3j=!?N&Y.%!?Sic-qj(fZqh,CEV4e's!tMgHpnfK#,DQfgYP@+#?ZaJBtZ$;"oJVh/UD&I%OUa)a!dVt"5jH*rmq,P1o8.lXB0D\dL?KFlEfgN%Q1A13$NZ#I[qa,gbBG1@6%V(k+:.DMjLQ!8:(/=@mc._\pm'dh-*)tD-C61BU3K6m$L(^+<C=J)JC&qE/CgO57?eb&-i$5,rDGbI%FMjU.EYm&!KJIX[FKdldP%q0j=$A%Y)]o2q(RS%H^^%Rk6biSPM6)[I;jV#rn0U!H'V?=5"XG'>"72e/"!H)2fUKjf:aE1mb`D7+%N/iG3A)0g@QfU-NjdM3AgBBlQ,=2tk*F#7]o,Y)/.f@/>jQFVDnn(ruT$B6i>$3,mJr>b/?_KhB,m(9hQGFk<Et"n0_[FbhN^>!0%a#\\ai;C*"CqV/83\;;,Am?';Z##s,0s^brfoEkj0F>/9-aeUeA3c.)V[796U],-^**`kK$5Ir[>f]'))[UVj[Zal@9^&ldL:B"4%%#eLe+/\cnj^NZ93;$>j\b&)0Z@bJ"-5jB^UF^<#Bs^Mu!qgV5lW$hGCQ5+9d%Z0&SI5/oXOir;G-BW6fF>;?"_VJD0oY2HZ]Vks%$PY8C(nY"R)p1)]('#lQQJp,+b^j*?%hF6V[eSDKO[a5,kDKPW<Atc/!B"Z(&cJZ:k_-eECJcWh]al\^.:/tM%i&uTdR7;1/i'`j%0QnA/DPI2i]ed=:QcL4]h\n+@bcKU8W*6@DANaE3oFkRo<`c#sA&fh7<@lC6'k?1-U,r][0XYD8F*@^(*8SZLZjl/J$n-Ls6XAOu%]ns*h2'Ll#NSBoU-(BdBS:\XnZDcsk1jMVJQ=Lkm_1Pj#Re\,TK""W'(BR299&VdA&Z%f`C1H3Z>6YJhX5j;sU")&*RdVT_g=]+O%3Q(AK'W$L4D=^:r7IFtm6"_L6(p5g:EJ5)K9f.ZRX&>/d,uJ1J@:u&ZVS[$MVX33BflYDc\4RJ"Mu<!>_>MLDAHKjK:o5eJFr:YS%Ki\_?1R#+P#n+X"a5:KaWe`RM,]ssR,H;fBWQ%KT+@X;-.jY:4F%P)2fWLkpRl87Y77FXaAP3Io>Lqd".]S-%VX/,SFV3hY`;2oD%U=_+dToAQ].'6FBLg.Lu+Vu[*K;ntPg.e)YZN#HV+G6OilV$.`Uk..,h&eWKCe?u\9X?%2"D6%`TNKl_78%DWNd_hoBplnJg0O#h%0)!*nqauJ'KH+#FK4Vus*1i*/L2i"WS.*TE2,)BZ8A<G8/J1q4N/6O)SDY%P!*LkN"-K30;3dhJK-<pJ`I;7E*_76H/(q$`$gAk,%m4R/?GIs@:`G[*d0"QhHN?=bOQrK(ECjHuJrm\:hh,POl-?W0WDH`k(ONu=;L&f`amRSS7+K)Hojb4/_*+U.SVKMgfFTa"r/*^9C%$XT#H-3_e#+6pYoUPd1EZC!sc:*FAYOA))5gNOD4+'$!Lq'*-m3guS-7RG#b4#%EE3(f?hHDu'@mBUk:P%:Zm_3FXo;oi>:J[JpV%JnP_8SLo1]EF`YJp*c;9-gbKnKe=CGPjN1Cqf05i+WSjXKQ"i(gZ>CDT\f@<(s<gFgfXhq!gGlIa2pkIa-o5])#jK\oJ0/RF:E,f%pSK!`j)>i'cAL-%j`%6'j2;A*aahcZkQWA4SC2T=cU=L&!;3JUVcDjE0^MA>Xgg2Y2+8jpMYFq%I\sH/%TeT:ZgX1c"DIJ\Y+@&j%!mpfq'iSAOa:6SPT8`BI.HSj8&Z3irm;=+XdBdQ<&R[(<JAF`/0<fUel.3cRo@iNN2"T(uNCNtfC*rVgp@75U6hEn6rof\gDQt5<%9M7.h2q'mP#H@HC1L:.4:K*h[F48;l<rVm+^?S3egWi@IDUGm,"0MkhVX&eO:$)/i-kVM=c5mQ[;iG93dkIWIe4WR?iP^C>Y:(r$%iilSn9L>g*4aq8Ue38,U4G?7jQC`<K0HI.fT!R:SG9s]B^Cbg2Q#om0V03AWF-K'`8/ZY4^+jQ&*^q:KdLUWGm8mSiHUHkagsM%)%20DBIXXkKT,uu@$6PN>_eWKpRgOieEoJ$-79C=":qEC$lkBlL(Xd3-gI.i9J<7Q;SC3Z-";Y<)DMVJd\9Z=S,oarNrGbacA(/g(d%p`AUV,6s^DK1ZGMU9W9[oC0!>51Utb$6HLH2kk>\UC-%Ip8*SImT8]mp_*,V?2Jf]4\pGjE0irbZ\7o:akT#<&r,q\(QHWJ[\(?m%kW6R;o^0gQ-N5@m"Q+06a`OI*KHGuF?1n'bk'0s_mJ:r5-G)"pMBLbT.cRU-h+^Mhfm#>lcfRN:e?]g"ahL7MahsWpPB_FML5suR%chk[_9'D.W,%f3f.oAX"'!(5Q-'@436E))"P:@RrlKINU]M^Rd1^\A\;F<WS-BGA3[ME@QbV[1(MlQ5Z,Ah$5k?"V?S-Y>h?Yc%K%oO])[A`$0,5.R/OEeAqe(84,Do/=ZN'poF(r2;B^l0FVZS'F>1N$1N/o8*]qU,1fb>BT+,VYtD]R*'',%)eU1TV%k<ha5uVcNmR-%bU/J_9laVZflQ:&(@XB\`9]9_OD.lRAQ*kESQ&K&H@brA9IJpQ(;h\)2Y,:MGj-A^$jtT`obA8#]:p9Dd9D3eU6L,NdgVZ<Xj-3Y%KLe+u]OY.)A4NS_UCF`a8f@]ZKV2IZ<gnsj\24RH9:jI!Pi@8qpo>FL6MZ(QB,"0#VUr"1)pCbpjGX7&a:+^M4?N\RN_XE2m<!PP%qo=u+lNTEV8oE$H951lccVlG0.L<m!SbQStJ:;HB=d0<re7PiI_%r3<O][oi=-X>M`@5i3H`Ps:;["T)q'))<a.?rec0$]I7C&>E%W``=8U\Hu-1dmE3^u?![n4mf<_q*tj?e+tg;!*=F0nGeX:?,EKCYJXKCfd%!a#<6o6m$`tcDT`R%,$0,gR5\6^c@;QBtIWL%TLS>%-T1*(([8+kel@7f,/V(Pm\#A;;%Pf3#o(K3KE2(]d'#(Tk'`Y'2s\]3dORK,'6-LX,`=d?J4W!p*#A+jOJ)./O\RB22esC_Mm83b%Fb;hF#@CHT),he-Q9(1i'V(\NLBbU);j;$c?CYM?kN8!=OdcA).=NUepEopXmH"<^f]N>ng2P92ALhst+O')$0FcDs?0S7h]k1>i%-DbD[%6YEYOj776\9Soo%LH's$--Pi-&EQJbK\[$EpP!DRu8Ak-r\mcda^n:E,u>\,%W1k9.lPSV0M-I8)d7.1]`k1o1a@(%Tq4q%r064#Mc0MTIT)%Z2.l@RW_$;S/0J3DKI%!e!?.JCDEOe8?#oBl6JSgWP\'[lE-WWJa/8@k]FpBd?aaadH<?O_I($Y'!1Z2H4+FIW%Z)BNZ]_F7&=`*Q$C&0:H:$9r?cCVS6&g`Im-5&J*"GI_>8cHM-9T63U(2qXX-Il.;V\/u;A-jYjRrJRnPf.B)r=r<jJ)9P,0$TtZ%NL17kKbG&NVjbk`5hs/c,shEMr$fWT1oB@k,C1/f?rh1NMr,cMW`'5bDA.p,Q'4aOr%iI-([e^_L=56Bph)Xq!rA2`=idU:i5n#R%N;HNt&6#B88,9W^@T3Uf9nO8nCKfhChFJ:!#^I,D$Gpm0cIFc:YfBWqKla;Y0_OgbX'_6O'>$nWT$`BoEcMI#[lT!'e/.0h>llD5%>mn"c;Q;_5VIe5MVtQ);Piobr7s#5/*%Ot9YM-'A=4'V!/5_Dh+L?4UoGqp4@\O]5,kA4H)$cA8c<*isoMK@7OeC^ZnN!*3W"`-i%7?<tYPo?)JjiPA**UeN7W@i'%KK"jdPAQF==thfK]V,[_C[W0BNY&&G=cc!Z@X0D0+QeO'3+d_Mg+MKa,jr'ZK8naV!$ZBHPGdf7%T5&[#&sF1(85Na/+k1*,6Uc#kY+d0;0KLKU]Sl3pZc]=RR!(RKGoub+ZPkSG'W+5XF.#Q7qk:!=j_%Kn(.35,L1AHVY_`d7Qrl+8%AK'CUef!T/e>2qD=R%'['HdIs.BS<jMtJYn&(+?(e]kg:,T.=KRUt!aMQ*L\jfRordCrn@.nQPd9bpZuFhla)k<j?I@9UQ;V`G7@%8>S9F$rdkGR%b7!5XuX)H*Y8@dq``&F[73Fh5fM#Hi#@1.\nan*b`M9MlU]c98BY\fHj>#^k^??.6gu6&W!<9G_S^#;#?d?H$I#!%a`"Us8slJeAJeF%M$4k23"]=h7L"1ae\FM-,4b/5CKKgop<q^?aB2=r%_YHT;rOQ,Kd3V='E`So#gj_[qE75aPmMZg7LHqq&&CIr%7:D^DE%ct$JrOQIU2]pkWQjj?-m9nb&6SW5e&KjFEJRud"p6'KCh^X`6.9Z;FtVj5>PBqW:uKV^VKS/c1!+QpK-f"E?t5Za[<31]%P%WPFSZm4f>m'nJD)7JCB&VK]2]A\AKdfYuX.??oQldY#_;Z`8UpXNeV$9,`r,2@r-na0+q5+&nRj=p(&RLbKNrMh%,+IFlH__[p%M]Fp1#*c%(4hL!AUn+=LG_;bX!WX(R-['6*Df;ZHFdcPXMJDg-1W&O_LCk#[+abk.4mlZ(8EnGP!6G\j:$ub?r&M)gk'@9D[?kln%G2.O"HDAoV^:Ssr(.#"9ZllR2ZKA:e8K1:e"/qa/Jka0V@.n@Z<RSh>\#!p?:9(+mFo_![69+WN9oP+HECT$'4"hB!!DqQoR4.pX%\euH<7n0UsnH8?#d%fFsQJP\>er[gK2HYL?H<A6:q.N9%"9`?UT*@u+,RDq9dOC'hcSB>O6_Y/j.&-_g9>Ca=XQZNHcQ?Sn`6('l%`#?39)L3k7dMkOh72\/<R;$:oU0N,P(HIj-nj!i[.I^XDalg2Ta*61O!][)k&]93.<*76$)%gFhfu&OQ>!,1"J,hTP4Ek0/>;%1H%h<WJi&S8^S?TYhEX%Pjp$DQM.N7=_)27(c#g[S"XeD3qg)F:4EaBu;!%9sM#np5hbd[n#l,;sP+/+-&JVnp5CEkEiqbcm>7?39:V%PTc!7#f]DM-Q=U8m(Ja^l#.0L?P^3WfA?QRhu;2!)j[Lu#hWN6MToEB\DR%(p->C6O<"HuRWrpe/bBmZTc)h2;G?OKfis^(LgCNW%!b%aW1P5CR(*)enN/W4go)Wp%MBX[2j)qhS</HNu-&LN=WMbO_!cf@u%`n]%(XpLRb<"_+@9K<@7T)#NUqb/*aQ2_LBaupTD6U8:%.)&Ro0cf&W/a3Su:;he(FE6>T<0`Y@4TMn\YhY*"I8E'LL+ZV^L5=i`b>Fmb#?^>DhL*>9dKE[TeTFS06_(k=)mC1C6f(Ttj!(]1%d"eI%EWbs7Uu5tr#Jr!$VpI@f/XpG-mDq[Q8@#59">4XVW*GQHMMf>Jd^Ua4`M*8=$fD8).@2N+@O4ZTaiECnl`dm'<,&.RDV?'7%H@=$:Gi#G[*+$#=Rn7OE)2hH.DPgT%=rR2G:/;oU5='-.9e%Q=2SG(Be'H<L>c-99NfPiij5Sn%>_[N>B^\pN;P[O`WgoS)CDqr\%7=F8]4H8+s_ak(/4DO(G?p%Z(bq6kYp[GC%pO;TTDr7;[BWR!oC#PBCIm-S>e6$VG@_36d'XUt-g:I6=/Jf(lEB+K;[9VsQLb0FN%XWQ(!+0akp]%T!'V'Nh#h<_N[.D4oZQ#'V4kNQ>N4"U5%$4.uW6u9-;6]lSOnp\S=O[XP`hL!Lm#4CueMBY!RgQYbY<q::E'&H.h%Eo<<\#OUfeJW&:c(/4jhP8"nTU7IDR-4(Yng;9nC3Y5;dM>h9N;J0X[jQh"I'ub7)S-X0pk:7T1%j>g1Uq8SHmB9@I]3V7@.^Od5%@-2=UjBo%lP7s.oUX.FU0T_<)FGqJb4l-N9;:eNbQ30.T>pF5BRoC8M:[sF.oD#tDA72^?aqUaqjD!oWr\/">:/T4gDM)[-(9Oeu%hMa1GaQ.6LDjNoG#;Dde?'L>/i5cuk^h5jc&XO'<42**\C)<'FYcsXBr@l^de4LDC>PN)pULDJ?nrC7\mND1BZ\t\?%6Lt1(Rjpm%02n-2i]IIVUlslMUPe[V")N@bXO0non.=dFO-.t7LTX0X<dbTS8`be-a[a"nE:tFMY0nLHe<uUoe$]`.S>[h=k&bm=!a@ZSIN:0T%r@Z-;PT!:",b`J1%P19Xk\6Na13i?>E]o@Drg8!-16'U3L%%[:L;UPs%4_V?Vj4\7:-=k-W)*7<NPJ,L&i?SF8dJLBW&J!(PR6T4%]H/H54h]#-`=_.Z''!WtQ;Lb\`@#HtS3%0#9;b#NkfXXfiM'#oB\_$O`uafXr=hOO1!YoiR7*^tgF^=6,2&Rb0\1nsSS;q.T_s!"%?<dqRd58f\n94+tJ2]H48-U%($,[:(-eb:6GoXJ`JGip0a=hJ)f^\^/jgHf,O_.!3FiGeEoqZEem=?O;HiN`bRG]<Pq)>V;>?_CY%ol9QHc&8Pt#E;CuYe\lFaB-K&O'kAc"DW7f+""1=Yn[07G-OP-#:Ai,<*39iO\XG/`@ofqiVTWiPi\Va.#'?\3[4W0]bf:)\Nbuo%L6Y.$&PgH3/?m`k-Y]C5^YMTs3Z8J]`.=dr=XG`nC?6Ogh#NbD1W)mdDB!^NU)$(;W5F7aF%t]2D=G3q0?5:.bFn.N:4tGiO=E=u%&;VW[9EY?5.mn@OGUsiO*6?\jm.PWEh^uPjSN)JtTW%5?#90M1mZqT(mT<Zaq$%ZW"DkM1T2(r:,oOq)Clqk&>0\0)A7)@.IL@Pj%NquPtq1bf>8m):C._S:]j(qDmfu?2L_r%Cq[REs9'UQL<mh>U)OXrM2XLjBF1lm8d$o45^hAs$!@T+nISnM64#$_'R>)T&NGlh,G%*j7/fgYi@]]9hlu7?uc9pY4eR;6]6:-h3c-nfP$ej:KQqkY&o08,^Htfh+)0TXuoab^j?h7Bnj.0t7rRUK#IJ:*:lAa#L#C(jR$c%UY^S+O^oFj'3!""+224_N0S#@Ho$JcXgj'l.1e`gS&;<LTr<7DmN>qi0E_*P,'g^6GX@Z<//Ep(P&l.AFs\Sk7/8$Ubo]6Y%>H1n%-);]/]??MY,eB2\4BO9F(%?(`ltWFhlB0YUV.5?YjTq@9pq6hMk$q:f-dpT*b9kIlH!$FqA;rc(dT1HN3,C[7PnbnQ/j@$W3e$U`%AjS*k"c:nAn.+K;"*C'cMN]8Jh&P\$)al%'*3rQkSj@"NGaY7tA/oBJG]&1eQE]>U41^@s-938RLb<'ke8%OlHk644Zu6QC/BZ"E%EhG7(H8,)Z[Y;km!7f3]An\rc`hdXL7,1T*g>Y5n>?O77*@0?=8L6[$]U#P#7A2Lcq>^mP?=%\H+9hj)U"mFWh)5t3/1"^B>2N;n%]1(S`8Lp`O+KgTmQ)o;0=Wl@[/i69n,0?4V/I@Q$7f5@K+gZ=7A/q'2]D&"jb1`"tXk"Js9&fs$#Z-^826NPP07Q,&M5NaRW3WQ/%oi]m@!1q"$5ak\Y\oiBKoL.KXn8Z]2S4(X*GZ,VUcT?4U@);]u1ai,IRiT-]r"!g!LI3&:"m0LdQI;>i-&@X8J)\eWH]g.'k*%?3%][8g(e&((aZ[nl)!8\(7=Vg9[>9+*MA7":1^;=Tf^*Kf8&;6_#.&;ht$7LaDq[JsCMff1>oFb0u!K=CRaW3MS+pDC32UtqWcj5V%%Kr$J6F\\`IPD?,s._*\dc\o+M<i0rl.naZCi!)'SVHVtY.1i+n1b!e;GZFt_O#;&A]E8@a/um3]<gPi=+&h!HK-9ms?iHoiIQ_N8%L<?$ZeQLQCfZ0YLdKOe16Sc4KF:79OYQt%,p6&R+OB/&?Ugsq*@jI`)6?DYm\EQ#,r-GTRJL@M%<HSO,,7t=9;l8]u?YZJ^<slcS%\en?IlWT0LFZSr;S6dKlhA(AL;_8%mElq>O+mY:M4V#ZtiFlI)CcrTBHT3m$kI?\njr&F#f]Z:%_GcU!!W\cnV+Bl-eQF4%*N^\n%Gpm]9h4^@rM?IG!dWHG/$K=V;YR@WD0Yc;Zmj1h3Yan.0k,'!jYVdkAgap!bYZO]$8cSF3of;-ZOcp0=`?uL#!babH%rYWGZL=,e%BT^d-kG52UiF^is&\uoG^Emkki#+b,l*Lr`4[qBU]TZX!?#rV>4`Ej`_+2sWV`:Og;1_EAdF#.dPUItF,bqm'p4>k@'MaXN:nRk$%FKc+#!^^5QKOjfQ&7@-G3"]E5J-%?JS$"S5KWanHJ;`fZs&fcJ@g<!e!g]]hK'qD<,J#dsXEh]-eS10f*.]WDoGl:AadF1l'0K53%IrYgcR%8OR#]Qdq&n#Zt4HW<mT?!'Fl(qa]!4OLYFeKD!2oSOdpdkt?=J2mOD94sQV]S5iM,B4MDj44;i$uU-fO5qm#.dNJcU)53%oijXYO1imH;qZ8G]rV&d,7QHP*:00KLoM6#YX7M`Z+nUH51p*[fk`&+p-msYNjU63m9m^JiI<'Gf9V?`bHYBC/>06VPP9pP1C/3Q%>'0oI>4MOoge.j92UN+ihj3["/!EO<jtah$@G"fU]s5js43H@&KnWpIE21^K,h=dM$\Qc8OrSR/\@e[\LEn1.;,&6C+MfV)*mDZ+%Ko_&0Ycd7]"%<6qp+fn_:,??kX-;S"lu=^3"h%`aL-A*C(d_)Wlq99PPIu=UWW5nrOuS+F:Q=>pQ)7DVL!C6PD:k:K5.aPu_m7Be%"eL@hXIVJ?EWmc2$kj%PP0B7=M6ZR,%.r5OT@(W'!g!25an(p\:lU9,5,8r8%24]gWFHCIG6i+&%r#(',l;6_N]sVl'S4rf)F)2t%J"<t=$(CAiFqIm'!I`ltMpA)_`V(;9_j$6/9-@P$rB)Po3;o2Jj>5(aXraLUY4F<#3s$FqER*?"Wh/kA)D_Y'b1GE;<?/I7FrGRY%Z]/S;PgH\PMTt*?e3/<]49n'g@fkb0mH[)imXSf!E$,]%XSb"%8=Y$b$HJ?fdX[m9(N[FPOdaXtW7!%$/sKC-N6a@$i<`8AEM,=C%>O<sg;"uF'N[sE)'Ko,P$,;Ti-oJsY<Y^H#O1FMqO?/"XF<Y`#gGb!\A6u:f,gIKDZBCUn,Vfa#,E_4e_$+](aC(87/>=^ab_q.\%;eX1E#H)D":u)a8P;J+!3c%O%GI/i*Co^LQM3V/fN0?@T#&:r>LnQ;c&9/lFdj5tR?qD=LCQ@T66>F5re>dVm,HL/S$YDV69_`3<%f+(61.djPT<Wp%.6@1lkeII;t>XOjL.QC-.s'JPb.;eC+<1mZ$5@h,#5!)?E?DE_]Ng6>.,qi;P'e6h"Gd4Bt'->RIVsTS#)1J,M%0iUl)QVajQCJ?/l0Dqi+Clh/gC.d33,d7kSb0(ON!3)qX9r5F!:[)":P=RRY@H>\a@2uW$-U2^[O4>i8V!"]31"ASGZ%kX;FZ&iK%V4]PZ<CV,16]]Af?5flaM1)=)JeLlP;e0?9=79,QD?]N22*TP/&^?gu2K:($Rk]lSSOP]PcgaP3oOkl+>I8oT.D*HL3\-dAhl(W;%YTD$[p.FF6q..fAQ]+:c>GX&/Zu%S.Z+[mA\;3g4>hPHXSFWX9Rb,]]X=VM=\>87jAV?Wud-]XX<<?4)X3:p:[r2cr%T<l?_:NnS%i=)CieZG-R6\12W7=(:3TcE>(q`1=3)YG.HM/=M\odm/$_Gi']hHMe0':Fp?.-mI99j(6I5hV/=S>(SbS<2!PgD%&&m:0Hafk)"i%moYcqki\C\:e$4m'MfuNQ'BOE8XYT-MZ((Yi=?PGEkpC(DKji/:Y$/S1HmU:;FqkM&A33!YEGpd9mmH/)M==/=OmRg4u,r$/aDfQ%3AN/QU,dMHWD2:7@QMf3PNbC\hI<>['P+-NjW/E_jT_,$4\Vd4h\"1WYmuN1<*&ApL!5&qAh:nI^^i$a-q!K$eoKC^Ku47T9+aBL%oTcB;_7LV9#'t@HoeI`4s"o;Hr*_(%qLP.$C;RLU^k3mod?LIH9q"Z+,U1@I*d3g/(h2oK9^MRHH<5H`34>7C>hPC,UlE]sW2f+a%8M=_l*)=j#&B=JK!btY-80T&$kG0)dVk3W`T,dooXD_%N4O)SCEe[-#]^4\]fT5-nGc0lc4H4r\K>1PXFAOMV-Z!\3_UHIdY9RiW%102_(43\;%=qBTAd%21%-n6!I7kWf/re`Pu1#['o*7gA\lp]jqJ'pdhrBbsml_<0l`QIBjU0'c@p_Z-GKk[SMBaC`^1btB^fjng"%:IQmiH&nh3+"$jDOnk,])6Eel6&P1MHcr[*TRPdOKXac"$75+t@744R$Z1kN7Y0^@JLR1NH-qt%G+QB#N9QW&!3]2?%@8rO#cT9Q%d1#92?<S6^c#BAN=V'I:K]]Q\40C*T.1P\@%UjrBTQ+AfdO[P*ft*&t/k[/\K;HjLa`;I`Oiuf:8mtZ#3emZ6LefI9&sEbnJZ5EB%m/s&fe3&7%:fC@6aSq%sJ(5g'Q3Mo-dH=@5Dun#u.p[$,?1VTmfV.-Nk)66T[+IY]&tB3;f)'=0m%_>(PefYg4EIleT1,_J[c:i2%[J$@;89N>dosm]K+paiXo!ecMRL74aRo3CoL_7"oP3f'ND!&,27r^J9_Smb6(s!Z(Yi7e2a)p;f%_Y6bl\lFH*%X3DT>KWAX]:tB%.S"J3N]U]j8U>7pC$O[T4uI9b%'69sjA:F#$q[#(EKp"?'=WkEk-:.,:gKVR*EI`i<*!OBMLMH9I=\rS2*rID91CHnZW3WYWO)bA%MTJa`ZK=Hq7>hV^am`Gt>X=AKk!oYj+85m-UkgX3=`#HQCV,@J"tU9mMa_iG_GD(IEj_KkqMimYX,?<Es0"Z%go:37U/g+"pV6L8%^\XG7s4b<ah=l^HrkiY]QLt+tru5;FM/+O+Ppp>RlJ5l9U?'Cs_&'R++j-&/F`V8X:PL_mb9b`QTmAb[j&dn;7=&ePP5Ua2-IOqT%YnhtW[>7`aFMq$N3n5j^Qm_#H&?\=7NT;_''(#0^./gE-V10kV4Cq:(%[SVEK(379k0T6P]R1$pT/'eW4!!C2V,B.C_\t_tfJ6,;%&:AhWn-o1#agt'3),=CdAAZ"d2).L_OVnhmGSUWFD".%'cc"UL=HEdrH?U?*D0_np$AI%86)WYULF1pf[Q"krZYhcSI9L,lL!O_0%!CZ-dV?]?rB4$sK$C:`g!1SZ'Ln2H&4,*#,)2"cR_hDVV;qbLO`-gBGL.YLQ+0pm$TK<!$&SR@0Qj.V@Najf1+'4K,D$<VL4V8G2%#U2<4T]mD5^c(\?&7k\gU)H\K:Uh#SE$=V:FR;[9^X2P)>DMY[8);N+KPuTP`T_0;Wh't]J1SM@YIB(i-$pFr\nc&2`U0(pL\df"%1sfpXO[4K;l`R#M-R$lN(E=L]!rZl7+=(8P5'2gX+&4BN34`1A5rCf9bgm&$_FHkt#REoLD5b3XM.ZS6CukJsP2a;4I:B[=3Yf#g%4-9TWRl$V(8t"]gEGCFT0Of.o-7GRGfPr,2`\K\A&.&q.>b7GC+_.G>BKHf9<*phjM.r%!JbT5d&;)39dDF=P!]D`X<`,,N/2JDc%$;n^Z'o\]A'_UO5M)55(8k:LgM;0DS.1&Z89Lp;KMq*)k`uR\o%d-o9pV9+($-uLGI4X[`Djn_^d_'15rR]HgZm"TRJ:.KVRnN,1%'P>(%l$S.VA:]26<uu<up-UBj9gkZu8f>i\Y>HS)m$2^hCIKVH&7BDh7S?-t6K&se@s+!9-oAIq8GVQaqpV]\/A5kqdF_8Zs%^Jo%*_\o4YZ/Gk]i/"=nH+XGqNTMd%`]mjcEH+FZ4&ushpAN!>d$e)U99\<*!E?tBh^<;9MlYXI7QGs-sGr1c:rgn(RSHj#>&&WF\R@e%__Dql!Es'Rcs'E+2eNG/W)q*lPDcrP>K4c/%&@'?i;:\X640LuCP<%68j"ZG&K\KXOA,^T7""qjUn<3P*)6;BQUtAHgTWSJaE@R#%f#AlqQ0I\j#@mE(#?-1/gtcLiS9?C(8ciro/DqLuE'eL%mXto+?L\Bd7CJF'(M#!&D`S_fa^&r[0X8*VMm1(<PCJUMc,DVa^L\FJ%DDt:C>JHrtA1/jjJVS,^W)OVfDc]rsjlT(VOqm!YE@0P5`recsBGj!B1;s`-/+P_?gJ(]FVk3Yl4O2":+hTd._lA>lYK3OJ43$LY%qaYr[qbp*"Hjb?-9;gnECKi@62qMc!FF/fG"'lQU\.kY9N4Oa%XJn:1-tgn3Q+39[&QZ:6?n7P3j_f\<?ohr&kQ1l[kE\GUZc#Nc%bV-`f@r;.D72L[+fE>3to+O%<Ch^E>n-4$p6rska.G8f:o@Ql>;FC]Zk\j9t`4!:TC7.b%JY\o?QsgZA!iF4#ZVV@?m;Ql]l!jXn%:7:g(O_Vi`MW"[]6-I?82K_Lo_K)M1ceGqp_.!Eh4Z;p:O[R7k5MpcY(7=2C>Hjn*7`=`cOPbS/IXiNBO+KPH()NBsW]Q?_'aK2h%)@\ne_fmdF(:GKHa"d*a7D3jBDR_MV4$'`EM/"RdN@RCbc:KUYc18MQ@h<G!CG2/2&K-=)eLha`(.l?0<<F/=8L=cQ7C[/3)7WRt%/XigeT2VNj[nScPj89Lg(/uL[R?IZ0NTj7`Qo^&6K_Tig?6Vp$bfL)\EgVfT.?mPaVYP1bWV?n:;a)[_YHR2I?R6M\6;[5I9o#C#%_6a<&$MSUXi%U6f@7:7e[&U.iL^h!BdnBeWYbP>V.nemYc?CQ(*TTIA]7ONQ'^pU-5sR/:@4WdcZF'/\YbePELBV:$98bLd+m?W2%Fp*-1W@),2fj-5rbP@hG-3+iAKha)eITd&lC5H*:22A"arr)F-SR5!>$s&2!%NQno.X6Yd^QZjF6XHH!7CeS6plJnag+%pAMje+L%AiPERc(6>%I05(#39UGCPX4Af`!7Y8ZS/nn)C4n&FP)FqSf1@F,9M)<+_X"b&BW4%c&D)\J1/^YRRJe;Ai#+q/$Oe^/kR5sVIj!j%qXn8Z5Sm<[eBGQd!&LPV3[V:7hOm46Mnkd(IKoLNTJM?E,9,BY^s_aV70Oi<;_-^Y0OFlhC!*:X,b?HD<*@*^[HM@h,l'gsWFOqC%@<;aFhM]QC]5Bpj+!5lj-!G3FXMU?-1r$Hak-C8NMVXRh`3Lgq(?=Ud(<b-g@!-[*RECrX=BrU6d=D^tEA"-XH#T]Lk9^\Y8"#)m%R@hOu=3[\8&!_WW0U=3\A0.X4"Z-V5^(`UDfZ?L5=5jUd.'sauYmq/mSe*:)Pie?d^d;CNaF^OaJK;o]/4CIEeklkL&TCMSSO)*L%ST"HeK0IIZTIM@?M[*QmMA%WRPcYXB1CooZ*^]/aMJFp=%L-[D@uAr=S_]UM:ebD<*2gN\D";Bc_]s0,7?/LfDs2(n;6%<^&Zi2:%\W;]pOfe^7KaF7r+\@#GUR<&G<,\`2-+kD5]*o(o9u85dZ"dRK*_XqC.KlP^eI/!A>_BssqI`YL/;A3M;N=LHI"Ks>ULeO^[>G5o%Z6[A%:^5cHc>s8O*O;<U"IDCuqR:BB8PV$=<?Y<RO4['YQ<Cu0bQ]j9n'o4E<a^L<3s9dS@1b4`-r,40oj9PJrj=J!efVT>om1HZ%ao^Pjf67'1$\/-B0E1+ChuE9%b=N23h'bko,sn5dk54sk"c2+7r@e+-%_N[%R/F)dp2<SV+>V="rTEe7:fhsg.t0nbq>AWIs1<3a%q5aPBs3pH9n=TaWp]'F.5Q:5s\)7,Gmsb:4^]+0RJ,`mUqlbMIp.p27rVu`eqsXRSLZkgHs2XGT^AlY(J,Rjrr9$<DqYa4ije)Qs%=C+`"oABK.GCTMY^\qM8oJAu~>%AI9_PrivateDataEnd